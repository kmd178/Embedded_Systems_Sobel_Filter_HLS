-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity p_hls_fptoui_double_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of p_hls_fptoui_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal loc_V_1_fu_52_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal loc_V_1_reg_157 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_flag00011001 : BOOLEAN;
    signal isNeg_fu_66_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_162 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_assign_1_fu_84_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_assign_1_reg_167 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_flag00000000 : BOOLEAN;
    signal p_Val2_s_fu_38_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal loc_V_fu_42_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i_i_i_cast1_fu_56_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_assign_fu_60_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_i_i_fu_74_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_i_i_cast_fu_80_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_i_i_fu_92_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal sh_assign_1_cast_fu_105_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_i_i_cast_fu_112_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_i_i_cast_fu_101_p1 : STD_LOGIC_VECTOR (120 downto 0);
    signal tmp_2_i_i_fu_108_p1 : STD_LOGIC_VECTOR (120 downto 0);
    signal tmp_3_i_i_fu_116_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_fu_128_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_i_i_fu_122_p2 : STD_LOGIC_VECTOR (120 downto 0);
    signal tmp_111_fu_136_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_112_fu_140_p4 : STD_LOGIC_VECTOR (15 downto 0);


begin



    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_ce = ap_const_logic_1))) then
                isNeg_reg_162 <= sh_assign_fu_60_p2(11 downto 11);
                loc_V_1_reg_157 <= loc_V_1_fu_52_p1;
                sh_assign_1_reg_167 <= sh_assign_1_fu_84_p3;
            end if;
        end if;
    end process;
        ap_block_pp0_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return <= 
        tmp_111_fu_136_p1 when (isNeg_reg_162(0) = '1') else 
        tmp_112_fu_140_p4;
    isNeg_fu_66_p3 <= sh_assign_fu_60_p2(11 downto 11);
    loc_V_1_fu_52_p1 <= p_Val2_s_fu_38_p1(52 - 1 downto 0);
    loc_V_fu_42_p4 <= p_Val2_s_fu_38_p1(62 downto 52);
    p_Val2_s_fu_38_p1 <= x;
        sh_assign_1_cast_fu_105_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_1_reg_167),32));

    sh_assign_1_fu_84_p3 <= 
        tmp_1_i_i_cast_fu_80_p1 when (isNeg_fu_66_p3(0) = '1') else 
        sh_assign_fu_60_p2;
    sh_assign_fu_60_p2 <= std_logic_vector(signed(ap_const_lv12_C01) + signed(tmp_i_i_i_cast1_fu_56_p1));
    tmp_111_fu_136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_128_p3),16));
    tmp_112_fu_140_p4 <= tmp_4_i_i_fu_122_p2(68 downto 53);
        tmp_1_i_i_cast_fu_80_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_i_i_fu_74_p2),12));

    tmp_1_i_i_fu_74_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(loc_V_fu_42_p4));
    tmp_2_i_i_cast_fu_112_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_1_cast_fu_105_p1),54));
    tmp_2_i_i_fu_108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_1_cast_fu_105_p1),121));
    tmp_3_i_i_fu_116_p2 <= std_logic_vector(shift_right(unsigned(tmp_i_i_fu_92_p4),to_integer(unsigned('0' & tmp_2_i_i_cast_fu_112_p1(31-1 downto 0)))));
    tmp_4_i_i_fu_122_p2 <= std_logic_vector(shift_left(unsigned(tmp_i_i_cast_fu_101_p1),to_integer(unsigned('0' & tmp_2_i_i_fu_108_p1(31-1 downto 0)))));
    tmp_fu_128_p3 <= tmp_3_i_i_fu_116_p2(53 downto 53);
    tmp_i_i_cast_fu_101_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_i_fu_92_p4),121));
    tmp_i_i_fu_92_p4 <= ((ap_const_lv1_1 & loc_V_1_reg_157) & ap_const_lv1_0);
    tmp_i_i_i_cast1_fu_56_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_fu_42_p4),12));
end behav;
