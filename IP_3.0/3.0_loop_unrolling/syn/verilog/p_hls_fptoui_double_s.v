// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module p_hls_fptoui_double_s (
        ap_clk,
        ap_rst,
        x,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [63:0] x;
output  [15:0] ap_return;
input   ap_ce;

wire   [51:0] loc_V_1_fu_52_p1;
reg   [51:0] loc_V_1_reg_157;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_flag00011001;
wire   [0:0] isNeg_fu_66_p3;
reg   [0:0] isNeg_reg_162;
wire   [11:0] sh_assign_1_fu_84_p3;
reg   [11:0] sh_assign_1_reg_167;
wire    ap_block_pp0_stage0_flag00000000;
wire   [63:0] p_Val2_s_fu_38_p1;
wire   [10:0] loc_V_fu_42_p4;
wire   [11:0] tmp_i_i_i_cast1_fu_56_p1;
wire   [11:0] sh_assign_fu_60_p2;
wire   [10:0] tmp_1_i_i_fu_74_p2;
wire  signed [11:0] tmp_1_i_i_cast_fu_80_p1;
wire   [53:0] tmp_i_i_fu_92_p4;
wire  signed [31:0] sh_assign_1_cast_fu_105_p1;
wire   [53:0] tmp_2_i_i_cast_fu_112_p1;
wire   [120:0] tmp_i_i_cast_fu_101_p1;
wire   [120:0] tmp_2_i_i_fu_108_p1;
wire   [53:0] tmp_3_i_i_fu_116_p2;
wire   [0:0] tmp_fu_128_p3;
wire   [120:0] tmp_4_i_i_fu_122_p2;
wire   [15:0] tmp_111_fu_136_p1;
wire   [15:0] tmp_112_fu_140_p4;

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_ce == 1'b1))) begin
        isNeg_reg_162 <= sh_assign_fu_60_p2[32'd11];
        loc_V_1_reg_157 <= loc_V_1_fu_52_p1;
        sh_assign_1_reg_167 <= sh_assign_1_fu_84_p3;
    end
end

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_return = ((isNeg_reg_162[0:0] === 1'b1) ? tmp_111_fu_136_p1 : tmp_112_fu_140_p4);

assign isNeg_fu_66_p3 = sh_assign_fu_60_p2[32'd11];

assign loc_V_1_fu_52_p1 = p_Val2_s_fu_38_p1[51:0];

assign loc_V_fu_42_p4 = {{p_Val2_s_fu_38_p1[62:52]}};

assign p_Val2_s_fu_38_p1 = x;

assign sh_assign_1_cast_fu_105_p1 = $signed(sh_assign_1_reg_167);

assign sh_assign_1_fu_84_p3 = ((isNeg_fu_66_p3[0:0] === 1'b1) ? tmp_1_i_i_cast_fu_80_p1 : sh_assign_fu_60_p2);

assign sh_assign_fu_60_p2 = ($signed(12'd3073) + $signed(tmp_i_i_i_cast1_fu_56_p1));

assign tmp_111_fu_136_p1 = tmp_fu_128_p3;

assign tmp_112_fu_140_p4 = {{tmp_4_i_i_fu_122_p2[68:53]}};

assign tmp_1_i_i_cast_fu_80_p1 = $signed(tmp_1_i_i_fu_74_p2);

assign tmp_1_i_i_fu_74_p2 = (11'd1023 - loc_V_fu_42_p4);

assign tmp_2_i_i_cast_fu_112_p1 = $unsigned(sh_assign_1_cast_fu_105_p1);

assign tmp_2_i_i_fu_108_p1 = $unsigned(sh_assign_1_cast_fu_105_p1);

assign tmp_3_i_i_fu_116_p2 = tmp_i_i_fu_92_p4 >> tmp_2_i_i_cast_fu_112_p1;

assign tmp_4_i_i_fu_122_p2 = tmp_i_i_cast_fu_101_p1 << tmp_2_i_i_fu_108_p1;

assign tmp_fu_128_p3 = tmp_3_i_i_fu_116_p2[32'd53];

assign tmp_i_i_cast_fu_101_p1 = tmp_i_i_fu_92_p4;

assign tmp_i_i_fu_92_p4 = {{{{1'd1}, {loc_V_1_reg_157}}}, {1'd0}};

assign tmp_i_i_i_cast1_fu_56_p1 = loc_V_fu_42_p4;

endmodule //p_hls_fptoui_double_s
