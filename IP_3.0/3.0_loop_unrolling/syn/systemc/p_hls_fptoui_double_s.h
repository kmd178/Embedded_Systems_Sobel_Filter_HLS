// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _p_hls_fptoui_double_s_HH_
#define _p_hls_fptoui_double_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct p_hls_fptoui_double_s : public sc_module {
    // Port declarations 5
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<64> > x;
    sc_out< sc_lv<16> > ap_return;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    p_hls_fptoui_double_s(sc_module_name name);
    SC_HAS_PROCESS(p_hls_fptoui_double_s);

    ~p_hls_fptoui_double_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<52> > loc_V_1_fu_52_p1;
    sc_signal< sc_lv<52> > loc_V_1_reg_157;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_flag00011001;
    sc_signal< sc_lv<1> > isNeg_fu_66_p3;
    sc_signal< sc_lv<1> > isNeg_reg_162;
    sc_signal< sc_lv<12> > sh_assign_1_fu_84_p3;
    sc_signal< sc_lv<12> > sh_assign_1_reg_167;
    sc_signal< bool > ap_block_pp0_stage0_flag00000000;
    sc_signal< sc_lv<64> > p_Val2_s_fu_38_p1;
    sc_signal< sc_lv<11> > loc_V_fu_42_p4;
    sc_signal< sc_lv<12> > tmp_i_i_i_cast1_fu_56_p1;
    sc_signal< sc_lv<12> > sh_assign_fu_60_p2;
    sc_signal< sc_lv<11> > tmp_1_i_i_fu_74_p2;
    sc_signal< sc_lv<12> > tmp_1_i_i_cast_fu_80_p1;
    sc_signal< sc_lv<54> > tmp_i_i_fu_92_p4;
    sc_signal< sc_lv<32> > sh_assign_1_cast_fu_105_p1;
    sc_signal< sc_lv<54> > tmp_2_i_i_cast_fu_112_p1;
    sc_signal< sc_lv<121> > tmp_i_i_cast_fu_101_p1;
    sc_signal< sc_lv<121> > tmp_2_i_i_fu_108_p1;
    sc_signal< sc_lv<54> > tmp_3_i_i_fu_116_p2;
    sc_signal< sc_lv<1> > tmp_fu_128_p3;
    sc_signal< sc_lv<121> > tmp_4_i_i_fu_122_p2;
    sc_signal< sc_lv<16> > tmp_111_fu_136_p1;
    sc_signal< sc_lv<16> > tmp_112_fu_140_p4;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<12> ap_const_lv12_C01;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<11> ap_const_lv11_3FF;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<32> ap_const_lv32_44;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_block_pp0_stage0_flag00000000();
    void thread_ap_block_pp0_stage0_flag00011001();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_return();
    void thread_isNeg_fu_66_p3();
    void thread_loc_V_1_fu_52_p1();
    void thread_loc_V_fu_42_p4();
    void thread_p_Val2_s_fu_38_p1();
    void thread_sh_assign_1_cast_fu_105_p1();
    void thread_sh_assign_1_fu_84_p3();
    void thread_sh_assign_fu_60_p2();
    void thread_tmp_111_fu_136_p1();
    void thread_tmp_112_fu_140_p4();
    void thread_tmp_1_i_i_cast_fu_80_p1();
    void thread_tmp_1_i_i_fu_74_p2();
    void thread_tmp_2_i_i_cast_fu_112_p1();
    void thread_tmp_2_i_i_fu_108_p1();
    void thread_tmp_3_i_i_fu_116_p2();
    void thread_tmp_4_i_i_fu_122_p2();
    void thread_tmp_fu_128_p3();
    void thread_tmp_i_i_cast_fu_101_p1();
    void thread_tmp_i_i_fu_92_p4();
    void thread_tmp_i_i_i_cast1_fu_56_p1();
};

}

using namespace ap_rtl;

#endif
