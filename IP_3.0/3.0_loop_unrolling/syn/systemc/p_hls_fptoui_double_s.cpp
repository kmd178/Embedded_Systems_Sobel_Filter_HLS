// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "p_hls_fptoui_double_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic p_hls_fptoui_double_s::ap_const_logic_1 = sc_dt::Log_1;
const bool p_hls_fptoui_double_s::ap_const_boolean_1 = true;
const bool p_hls_fptoui_double_s::ap_const_boolean_0 = false;
const sc_lv<32> p_hls_fptoui_double_s::ap_const_lv32_34 = "110100";
const sc_lv<32> p_hls_fptoui_double_s::ap_const_lv32_3E = "111110";
const sc_lv<12> p_hls_fptoui_double_s::ap_const_lv12_C01 = "110000000001";
const sc_lv<32> p_hls_fptoui_double_s::ap_const_lv32_B = "1011";
const sc_lv<11> p_hls_fptoui_double_s::ap_const_lv11_3FF = "1111111111";
const sc_lv<1> p_hls_fptoui_double_s::ap_const_lv1_1 = "1";
const sc_lv<1> p_hls_fptoui_double_s::ap_const_lv1_0 = "0";
const sc_lv<32> p_hls_fptoui_double_s::ap_const_lv32_35 = "110101";
const sc_lv<32> p_hls_fptoui_double_s::ap_const_lv32_44 = "1000100";
const sc_logic p_hls_fptoui_double_s::ap_const_logic_0 = sc_dt::Log_0;

p_hls_fptoui_double_s::p_hls_fptoui_double_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( isNeg_reg_162 );
    sensitive << ( tmp_111_fu_136_p1 );
    sensitive << ( tmp_112_fu_140_p4 );

    SC_METHOD(thread_isNeg_fu_66_p3);
    sensitive << ( sh_assign_fu_60_p2 );

    SC_METHOD(thread_loc_V_1_fu_52_p1);
    sensitive << ( p_Val2_s_fu_38_p1 );

    SC_METHOD(thread_loc_V_fu_42_p4);
    sensitive << ( p_Val2_s_fu_38_p1 );

    SC_METHOD(thread_p_Val2_s_fu_38_p1);
    sensitive << ( x );

    SC_METHOD(thread_sh_assign_1_cast_fu_105_p1);
    sensitive << ( sh_assign_1_reg_167 );

    SC_METHOD(thread_sh_assign_1_fu_84_p3);
    sensitive << ( isNeg_fu_66_p3 );
    sensitive << ( sh_assign_fu_60_p2 );
    sensitive << ( tmp_1_i_i_cast_fu_80_p1 );

    SC_METHOD(thread_sh_assign_fu_60_p2);
    sensitive << ( tmp_i_i_i_cast1_fu_56_p1 );

    SC_METHOD(thread_tmp_111_fu_136_p1);
    sensitive << ( tmp_fu_128_p3 );

    SC_METHOD(thread_tmp_112_fu_140_p4);
    sensitive << ( tmp_4_i_i_fu_122_p2 );

    SC_METHOD(thread_tmp_1_i_i_cast_fu_80_p1);
    sensitive << ( tmp_1_i_i_fu_74_p2 );

    SC_METHOD(thread_tmp_1_i_i_fu_74_p2);
    sensitive << ( loc_V_fu_42_p4 );

    SC_METHOD(thread_tmp_2_i_i_cast_fu_112_p1);
    sensitive << ( sh_assign_1_cast_fu_105_p1 );

    SC_METHOD(thread_tmp_2_i_i_fu_108_p1);
    sensitive << ( sh_assign_1_cast_fu_105_p1 );

    SC_METHOD(thread_tmp_3_i_i_fu_116_p2);
    sensitive << ( tmp_i_i_fu_92_p4 );
    sensitive << ( tmp_2_i_i_cast_fu_112_p1 );

    SC_METHOD(thread_tmp_4_i_i_fu_122_p2);
    sensitive << ( tmp_i_i_cast_fu_101_p1 );
    sensitive << ( tmp_2_i_i_fu_108_p1 );

    SC_METHOD(thread_tmp_fu_128_p3);
    sensitive << ( tmp_3_i_i_fu_116_p2 );

    SC_METHOD(thread_tmp_i_i_cast_fu_101_p1);
    sensitive << ( tmp_i_i_fu_92_p4 );

    SC_METHOD(thread_tmp_i_i_fu_92_p4);
    sensitive << ( loc_V_1_reg_157 );

    SC_METHOD(thread_tmp_i_i_i_cast1_fu_56_p1);
    sensitive << ( loc_V_fu_42_p4 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "p_hls_fptoui_double_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, loc_V_1_fu_52_p1, "loc_V_1_fu_52_p1");
    sc_trace(mVcdFile, loc_V_1_reg_157, "loc_V_1_reg_157");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, isNeg_fu_66_p3, "isNeg_fu_66_p3");
    sc_trace(mVcdFile, isNeg_reg_162, "isNeg_reg_162");
    sc_trace(mVcdFile, sh_assign_1_fu_84_p3, "sh_assign_1_fu_84_p3");
    sc_trace(mVcdFile, sh_assign_1_reg_167, "sh_assign_1_reg_167");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, p_Val2_s_fu_38_p1, "p_Val2_s_fu_38_p1");
    sc_trace(mVcdFile, loc_V_fu_42_p4, "loc_V_fu_42_p4");
    sc_trace(mVcdFile, tmp_i_i_i_cast1_fu_56_p1, "tmp_i_i_i_cast1_fu_56_p1");
    sc_trace(mVcdFile, sh_assign_fu_60_p2, "sh_assign_fu_60_p2");
    sc_trace(mVcdFile, tmp_1_i_i_fu_74_p2, "tmp_1_i_i_fu_74_p2");
    sc_trace(mVcdFile, tmp_1_i_i_cast_fu_80_p1, "tmp_1_i_i_cast_fu_80_p1");
    sc_trace(mVcdFile, tmp_i_i_fu_92_p4, "tmp_i_i_fu_92_p4");
    sc_trace(mVcdFile, sh_assign_1_cast_fu_105_p1, "sh_assign_1_cast_fu_105_p1");
    sc_trace(mVcdFile, tmp_2_i_i_cast_fu_112_p1, "tmp_2_i_i_cast_fu_112_p1");
    sc_trace(mVcdFile, tmp_i_i_cast_fu_101_p1, "tmp_i_i_cast_fu_101_p1");
    sc_trace(mVcdFile, tmp_2_i_i_fu_108_p1, "tmp_2_i_i_fu_108_p1");
    sc_trace(mVcdFile, tmp_3_i_i_fu_116_p2, "tmp_3_i_i_fu_116_p2");
    sc_trace(mVcdFile, tmp_fu_128_p3, "tmp_fu_128_p3");
    sc_trace(mVcdFile, tmp_4_i_i_fu_122_p2, "tmp_4_i_i_fu_122_p2");
    sc_trace(mVcdFile, tmp_111_fu_136_p1, "tmp_111_fu_136_p1");
    sc_trace(mVcdFile, tmp_112_fu_140_p4, "tmp_112_fu_140_p4");
#endif

    }
}

p_hls_fptoui_double_s::~p_hls_fptoui_double_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void p_hls_fptoui_double_s::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        isNeg_reg_162 = sh_assign_fu_60_p2.read().range(11, 11);
        loc_V_1_reg_157 = loc_V_1_fu_52_p1.read();
        sh_assign_1_reg_167 = sh_assign_1_fu_84_p3.read();
    }
}

void p_hls_fptoui_double_s::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void p_hls_fptoui_double_s::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void p_hls_fptoui_double_s::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void p_hls_fptoui_double_s::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void p_hls_fptoui_double_s::thread_ap_return() {
    ap_return = (!isNeg_reg_162.read()[0].is_01())? sc_lv<16>(): ((isNeg_reg_162.read()[0].to_bool())? tmp_111_fu_136_p1.read(): tmp_112_fu_140_p4.read());
}

void p_hls_fptoui_double_s::thread_isNeg_fu_66_p3() {
    isNeg_fu_66_p3 = sh_assign_fu_60_p2.read().range(11, 11);
}

void p_hls_fptoui_double_s::thread_loc_V_1_fu_52_p1() {
    loc_V_1_fu_52_p1 = p_Val2_s_fu_38_p1.read().range(52-1, 0);
}

void p_hls_fptoui_double_s::thread_loc_V_fu_42_p4() {
    loc_V_fu_42_p4 = p_Val2_s_fu_38_p1.read().range(62, 52);
}

void p_hls_fptoui_double_s::thread_p_Val2_s_fu_38_p1() {
    p_Val2_s_fu_38_p1 = x.read();
}

void p_hls_fptoui_double_s::thread_sh_assign_1_cast_fu_105_p1() {
    sh_assign_1_cast_fu_105_p1 = esl_sext<32,12>(sh_assign_1_reg_167.read());
}

void p_hls_fptoui_double_s::thread_sh_assign_1_fu_84_p3() {
    sh_assign_1_fu_84_p3 = (!isNeg_fu_66_p3.read()[0].is_01())? sc_lv<12>(): ((isNeg_fu_66_p3.read()[0].to_bool())? tmp_1_i_i_cast_fu_80_p1.read(): sh_assign_fu_60_p2.read());
}

void p_hls_fptoui_double_s::thread_sh_assign_fu_60_p2() {
    sh_assign_fu_60_p2 = (!ap_const_lv12_C01.is_01() || !tmp_i_i_i_cast1_fu_56_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_C01) + sc_biguint<12>(tmp_i_i_i_cast1_fu_56_p1.read()));
}

void p_hls_fptoui_double_s::thread_tmp_111_fu_136_p1() {
    tmp_111_fu_136_p1 = esl_zext<16,1>(tmp_fu_128_p3.read());
}

void p_hls_fptoui_double_s::thread_tmp_112_fu_140_p4() {
    tmp_112_fu_140_p4 = tmp_4_i_i_fu_122_p2.read().range(68, 53);
}

void p_hls_fptoui_double_s::thread_tmp_1_i_i_cast_fu_80_p1() {
    tmp_1_i_i_cast_fu_80_p1 = esl_sext<12,11>(tmp_1_i_i_fu_74_p2.read());
}

void p_hls_fptoui_double_s::thread_tmp_1_i_i_fu_74_p2() {
    tmp_1_i_i_fu_74_p2 = (!ap_const_lv11_3FF.is_01() || !loc_V_fu_42_p4.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3FF) - sc_biguint<11>(loc_V_fu_42_p4.read()));
}

void p_hls_fptoui_double_s::thread_tmp_2_i_i_cast_fu_112_p1() {
    tmp_2_i_i_cast_fu_112_p1 = esl_zext<54,32>(sh_assign_1_cast_fu_105_p1.read());
}

void p_hls_fptoui_double_s::thread_tmp_2_i_i_fu_108_p1() {
    tmp_2_i_i_fu_108_p1 = esl_zext<121,32>(sh_assign_1_cast_fu_105_p1.read());
}

void p_hls_fptoui_double_s::thread_tmp_3_i_i_fu_116_p2() {
    tmp_3_i_i_fu_116_p2 = (!tmp_2_i_i_cast_fu_112_p1.read().is_01())? sc_lv<54>(): tmp_i_i_fu_92_p4.read() >> (unsigned short)tmp_2_i_i_cast_fu_112_p1.read().to_uint();
}

void p_hls_fptoui_double_s::thread_tmp_4_i_i_fu_122_p2() {
    tmp_4_i_i_fu_122_p2 = (!tmp_2_i_i_fu_108_p1.read().is_01())? sc_lv<121>(): tmp_i_i_cast_fu_101_p1.read() << (unsigned short)tmp_2_i_i_fu_108_p1.read().to_uint();
}

void p_hls_fptoui_double_s::thread_tmp_fu_128_p3() {
    tmp_fu_128_p3 = tmp_3_i_i_fu_116_p2.read().range(53, 53);
}

void p_hls_fptoui_double_s::thread_tmp_i_i_cast_fu_101_p1() {
    tmp_i_i_cast_fu_101_p1 = esl_zext<121,54>(tmp_i_i_fu_92_p4.read());
}

void p_hls_fptoui_double_s::thread_tmp_i_i_fu_92_p4() {
    tmp_i_i_fu_92_p4 = esl_concat<53,1>(esl_concat<1,52>(ap_const_lv1_1, loc_V_1_reg_157.read()), ap_const_lv1_0);
}

void p_hls_fptoui_double_s::thread_tmp_i_i_i_cast1_fu_56_p1() {
    tmp_i_i_i_cast1_fu_56_p1 = esl_zext<12,11>(loc_V_fu_42_p4.read());
}

}

