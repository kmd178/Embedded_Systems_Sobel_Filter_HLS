// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sobel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sobel::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sobel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> sobel::ap_ST_fsm_state1 = "1";
const sc_lv<10> sobel::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<10> sobel::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<10> sobel::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<10> sobel::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<10> sobel::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<10> sobel::ap_ST_fsm_pp0_stage5 = "1000000";
const sc_lv<10> sobel::ap_ST_fsm_pp0_stage6 = "10000000";
const sc_lv<10> sobel::ap_ST_fsm_pp0_stage7 = "100000000";
const sc_lv<10> sobel::ap_ST_fsm_state68 = "1000000000";
const sc_lv<32> sobel::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool sobel::ap_const_boolean_1 = true;
const sc_lv<32> sobel::ap_const_lv32_3 = "11";
const bool sobel::ap_const_boolean_0 = false;
const sc_lv<1> sobel::ap_const_lv1_0 = "0";
const sc_lv<32> sobel::ap_const_lv32_2 = "10";
const sc_lv<32> sobel::ap_const_lv32_4 = "100";
const sc_lv<32> sobel::ap_const_lv32_5 = "101";
const sc_lv<32> sobel::ap_const_lv32_6 = "110";
const sc_lv<32> sobel::ap_const_lv32_7 = "111";
const sc_lv<32> sobel::ap_const_lv32_8 = "1000";
const sc_lv<32> sobel::ap_const_lv32_1 = "1";
const sc_lv<1> sobel::ap_const_lv1_1 = "1";
const int sobel::C_S_AXI_DATA_WIDTH = "100000";
const int sobel::C_M_AXI_INPUT_BUNDLE_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int sobel::C_M_AXI_INPUT_BUNDLE_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int sobel::C_M_AXI_INPUT_BUNDLE_CACHE_VALUE = "11";
const int sobel::C_M_AXI_DATA_WIDTH = "100000";
const int sobel::C_M_AXI_OUTPUT_BUNDLE_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int sobel::C_M_AXI_OUTPUT_BUNDLE_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int sobel::C_M_AXI_OUTPUT_BUNDLE_CACHE_VALUE = "11";
const sc_lv<20> sobel::ap_const_lv20_0 = "00000000000000000000";
const sc_lv<10> sobel::ap_const_lv10_1 = "1";
const sc_lv<3> sobel::ap_const_lv3_0 = "000";
const sc_lv<2> sobel::ap_const_lv2_0 = "00";
const sc_lv<4> sobel::ap_const_lv4_0 = "0000";
const sc_lv<32> sobel::ap_const_lv32_3FE = "1111111110";
const sc_lv<20> sobel::ap_const_lv20_FF004 = "11111111000000000100";
const sc_lv<20> sobel::ap_const_lv20_1 = "1";
const sc_lv<10> sobel::ap_const_lv10_3FF = "1111111111";
const sc_lv<20> sobel::ap_const_lv20_3FE = "1111111110";
const sc_lv<21> sobel::ap_const_lv21_1FFBFF = "111111111101111111111";
const sc_lv<21> sobel::ap_const_lv21_3FF = "1111111111";
const sc_lv<21> sobel::ap_const_lv21_1FFC01 = "111111111110000000001";
const sc_lv<21> sobel::ap_const_lv21_401 = "10000000001";
const sc_lv<10> sobel::ap_const_lv10_0 = "0000000000";
const sc_lv<20> sobel::ap_const_lv20_400 = "10000000000";
const sc_lv<20> sobel::ap_const_lv20_FFC00 = "11111111110000000000";
const sc_lv<32> sobel::ap_const_lv32_A = "1010";
const sc_lv<32> sobel::ap_const_lv32_13 = "10011";
const sc_lv<32> sobel::ap_const_lv32_34 = "110100";
const sc_lv<32> sobel::ap_const_lv32_3E = "111110";
const sc_lv<12> sobel::ap_const_lv12_C01 = "110000000001";
const sc_lv<32> sobel::ap_const_lv32_B = "1011";
const sc_lv<11> sobel::ap_const_lv11_3FF = "1111111111";
const sc_lv<32> sobel::ap_const_lv32_35 = "110101";
const sc_lv<32> sobel::ap_const_lv32_78 = "1111000";
const sc_lv<32> sobel::ap_const_lv32_9 = "1001";
const sc_lv<8> sobel::ap_const_lv8_FF = "11111111";
const sc_lv<8> sobel::ap_const_lv8_0 = "00000000";
const sc_lv<64> sobel::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";

sobel::sobel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sobel_AXILiteS_s_axi_U = new sobel_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("sobel_AXILiteS_s_axi_U");
    sobel_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    sobel_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    sobel_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    sobel_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    sobel_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    sobel_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    sobel_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    sobel_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    sobel_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    sobel_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    sobel_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    sobel_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    sobel_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    sobel_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    sobel_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    sobel_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    sobel_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    sobel_AXILiteS_s_axi_U->ACLK(ap_clk);
    sobel_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    sobel_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    sobel_AXILiteS_s_axi_U->ap_start(ap_start);
    sobel_AXILiteS_s_axi_U->interrupt(interrupt);
    sobel_AXILiteS_s_axi_U->ap_ready(ap_ready);
    sobel_AXILiteS_s_axi_U->ap_done(ap_done);
    sobel_AXILiteS_s_axi_U->ap_idle(ap_idle);
    sobel_AXILiteS_s_axi_U->input_r(input_r);
    sobel_AXILiteS_s_axi_U->output_r(output_r);
    sobel_INPUT_BUNDLE_m_axi_U = new sobel_INPUT_BUNDLE_m_axi<8,32,5,16,16,16,16,C_M_AXI_INPUT_BUNDLE_ID_WIDTH,C_M_AXI_INPUT_BUNDLE_ADDR_WIDTH,C_M_AXI_INPUT_BUNDLE_DATA_WIDTH,C_M_AXI_INPUT_BUNDLE_AWUSER_WIDTH,C_M_AXI_INPUT_BUNDLE_ARUSER_WIDTH,C_M_AXI_INPUT_BUNDLE_WUSER_WIDTH,C_M_AXI_INPUT_BUNDLE_RUSER_WIDTH,C_M_AXI_INPUT_BUNDLE_BUSER_WIDTH,C_M_AXI_INPUT_BUNDLE_USER_VALUE,C_M_AXI_INPUT_BUNDLE_PROT_VALUE,C_M_AXI_INPUT_BUNDLE_CACHE_VALUE>("sobel_INPUT_BUNDLE_m_axi_U");
    sobel_INPUT_BUNDLE_m_axi_U->AWVALID(m_axi_INPUT_BUNDLE_AWVALID);
    sobel_INPUT_BUNDLE_m_axi_U->AWREADY(m_axi_INPUT_BUNDLE_AWREADY);
    sobel_INPUT_BUNDLE_m_axi_U->AWADDR(m_axi_INPUT_BUNDLE_AWADDR);
    sobel_INPUT_BUNDLE_m_axi_U->AWID(m_axi_INPUT_BUNDLE_AWID);
    sobel_INPUT_BUNDLE_m_axi_U->AWLEN(m_axi_INPUT_BUNDLE_AWLEN);
    sobel_INPUT_BUNDLE_m_axi_U->AWSIZE(m_axi_INPUT_BUNDLE_AWSIZE);
    sobel_INPUT_BUNDLE_m_axi_U->AWBURST(m_axi_INPUT_BUNDLE_AWBURST);
    sobel_INPUT_BUNDLE_m_axi_U->AWLOCK(m_axi_INPUT_BUNDLE_AWLOCK);
    sobel_INPUT_BUNDLE_m_axi_U->AWCACHE(m_axi_INPUT_BUNDLE_AWCACHE);
    sobel_INPUT_BUNDLE_m_axi_U->AWPROT(m_axi_INPUT_BUNDLE_AWPROT);
    sobel_INPUT_BUNDLE_m_axi_U->AWQOS(m_axi_INPUT_BUNDLE_AWQOS);
    sobel_INPUT_BUNDLE_m_axi_U->AWREGION(m_axi_INPUT_BUNDLE_AWREGION);
    sobel_INPUT_BUNDLE_m_axi_U->AWUSER(m_axi_INPUT_BUNDLE_AWUSER);
    sobel_INPUT_BUNDLE_m_axi_U->WVALID(m_axi_INPUT_BUNDLE_WVALID);
    sobel_INPUT_BUNDLE_m_axi_U->WREADY(m_axi_INPUT_BUNDLE_WREADY);
    sobel_INPUT_BUNDLE_m_axi_U->WDATA(m_axi_INPUT_BUNDLE_WDATA);
    sobel_INPUT_BUNDLE_m_axi_U->WSTRB(m_axi_INPUT_BUNDLE_WSTRB);
    sobel_INPUT_BUNDLE_m_axi_U->WLAST(m_axi_INPUT_BUNDLE_WLAST);
    sobel_INPUT_BUNDLE_m_axi_U->WID(m_axi_INPUT_BUNDLE_WID);
    sobel_INPUT_BUNDLE_m_axi_U->WUSER(m_axi_INPUT_BUNDLE_WUSER);
    sobel_INPUT_BUNDLE_m_axi_U->ARVALID(m_axi_INPUT_BUNDLE_ARVALID);
    sobel_INPUT_BUNDLE_m_axi_U->ARREADY(m_axi_INPUT_BUNDLE_ARREADY);
    sobel_INPUT_BUNDLE_m_axi_U->ARADDR(m_axi_INPUT_BUNDLE_ARADDR);
    sobel_INPUT_BUNDLE_m_axi_U->ARID(m_axi_INPUT_BUNDLE_ARID);
    sobel_INPUT_BUNDLE_m_axi_U->ARLEN(m_axi_INPUT_BUNDLE_ARLEN);
    sobel_INPUT_BUNDLE_m_axi_U->ARSIZE(m_axi_INPUT_BUNDLE_ARSIZE);
    sobel_INPUT_BUNDLE_m_axi_U->ARBURST(m_axi_INPUT_BUNDLE_ARBURST);
    sobel_INPUT_BUNDLE_m_axi_U->ARLOCK(m_axi_INPUT_BUNDLE_ARLOCK);
    sobel_INPUT_BUNDLE_m_axi_U->ARCACHE(m_axi_INPUT_BUNDLE_ARCACHE);
    sobel_INPUT_BUNDLE_m_axi_U->ARPROT(m_axi_INPUT_BUNDLE_ARPROT);
    sobel_INPUT_BUNDLE_m_axi_U->ARQOS(m_axi_INPUT_BUNDLE_ARQOS);
    sobel_INPUT_BUNDLE_m_axi_U->ARREGION(m_axi_INPUT_BUNDLE_ARREGION);
    sobel_INPUT_BUNDLE_m_axi_U->ARUSER(m_axi_INPUT_BUNDLE_ARUSER);
    sobel_INPUT_BUNDLE_m_axi_U->RVALID(m_axi_INPUT_BUNDLE_RVALID);
    sobel_INPUT_BUNDLE_m_axi_U->RREADY(m_axi_INPUT_BUNDLE_RREADY);
    sobel_INPUT_BUNDLE_m_axi_U->RDATA(m_axi_INPUT_BUNDLE_RDATA);
    sobel_INPUT_BUNDLE_m_axi_U->RLAST(m_axi_INPUT_BUNDLE_RLAST);
    sobel_INPUT_BUNDLE_m_axi_U->RID(m_axi_INPUT_BUNDLE_RID);
    sobel_INPUT_BUNDLE_m_axi_U->RUSER(m_axi_INPUT_BUNDLE_RUSER);
    sobel_INPUT_BUNDLE_m_axi_U->RRESP(m_axi_INPUT_BUNDLE_RRESP);
    sobel_INPUT_BUNDLE_m_axi_U->BVALID(m_axi_INPUT_BUNDLE_BVALID);
    sobel_INPUT_BUNDLE_m_axi_U->BREADY(m_axi_INPUT_BUNDLE_BREADY);
    sobel_INPUT_BUNDLE_m_axi_U->BRESP(m_axi_INPUT_BUNDLE_BRESP);
    sobel_INPUT_BUNDLE_m_axi_U->BID(m_axi_INPUT_BUNDLE_BID);
    sobel_INPUT_BUNDLE_m_axi_U->BUSER(m_axi_INPUT_BUNDLE_BUSER);
    sobel_INPUT_BUNDLE_m_axi_U->ACLK(ap_clk);
    sobel_INPUT_BUNDLE_m_axi_U->ARESET(ap_rst_n_inv);
    sobel_INPUT_BUNDLE_m_axi_U->ACLK_EN(ap_var_for_const0);
    sobel_INPUT_BUNDLE_m_axi_U->I_ARVALID(INPUT_BUNDLE_ARVALID);
    sobel_INPUT_BUNDLE_m_axi_U->I_ARREADY(INPUT_BUNDLE_ARREADY);
    sobel_INPUT_BUNDLE_m_axi_U->I_ARADDR(INPUT_BUNDLE_ARADDR);
    sobel_INPUT_BUNDLE_m_axi_U->I_ARID(ap_var_for_const1);
    sobel_INPUT_BUNDLE_m_axi_U->I_ARLEN(ap_var_for_const2);
    sobel_INPUT_BUNDLE_m_axi_U->I_ARSIZE(ap_var_for_const3);
    sobel_INPUT_BUNDLE_m_axi_U->I_ARLOCK(ap_var_for_const4);
    sobel_INPUT_BUNDLE_m_axi_U->I_ARCACHE(ap_var_for_const5);
    sobel_INPUT_BUNDLE_m_axi_U->I_ARQOS(ap_var_for_const5);
    sobel_INPUT_BUNDLE_m_axi_U->I_ARPROT(ap_var_for_const3);
    sobel_INPUT_BUNDLE_m_axi_U->I_ARUSER(ap_var_for_const1);
    sobel_INPUT_BUNDLE_m_axi_U->I_ARBURST(ap_var_for_const4);
    sobel_INPUT_BUNDLE_m_axi_U->I_ARREGION(ap_var_for_const5);
    sobel_INPUT_BUNDLE_m_axi_U->I_RVALID(INPUT_BUNDLE_RVALID);
    sobel_INPUT_BUNDLE_m_axi_U->I_RREADY(INPUT_BUNDLE_RREADY);
    sobel_INPUT_BUNDLE_m_axi_U->I_RDATA(INPUT_BUNDLE_RDATA);
    sobel_INPUT_BUNDLE_m_axi_U->I_RID(INPUT_BUNDLE_RID);
    sobel_INPUT_BUNDLE_m_axi_U->I_RUSER(INPUT_BUNDLE_RUSER);
    sobel_INPUT_BUNDLE_m_axi_U->I_RRESP(INPUT_BUNDLE_RRESP);
    sobel_INPUT_BUNDLE_m_axi_U->I_RLAST(INPUT_BUNDLE_RLAST);
    sobel_INPUT_BUNDLE_m_axi_U->I_AWVALID(ap_var_for_const6);
    sobel_INPUT_BUNDLE_m_axi_U->I_AWREADY(INPUT_BUNDLE_AWREADY);
    sobel_INPUT_BUNDLE_m_axi_U->I_AWADDR(ap_var_for_const7);
    sobel_INPUT_BUNDLE_m_axi_U->I_AWID(ap_var_for_const1);
    sobel_INPUT_BUNDLE_m_axi_U->I_AWLEN(ap_var_for_const7);
    sobel_INPUT_BUNDLE_m_axi_U->I_AWSIZE(ap_var_for_const3);
    sobel_INPUT_BUNDLE_m_axi_U->I_AWLOCK(ap_var_for_const4);
    sobel_INPUT_BUNDLE_m_axi_U->I_AWCACHE(ap_var_for_const5);
    sobel_INPUT_BUNDLE_m_axi_U->I_AWQOS(ap_var_for_const5);
    sobel_INPUT_BUNDLE_m_axi_U->I_AWPROT(ap_var_for_const3);
    sobel_INPUT_BUNDLE_m_axi_U->I_AWUSER(ap_var_for_const1);
    sobel_INPUT_BUNDLE_m_axi_U->I_AWBURST(ap_var_for_const4);
    sobel_INPUT_BUNDLE_m_axi_U->I_AWREGION(ap_var_for_const5);
    sobel_INPUT_BUNDLE_m_axi_U->I_WVALID(ap_var_for_const6);
    sobel_INPUT_BUNDLE_m_axi_U->I_WREADY(INPUT_BUNDLE_WREADY);
    sobel_INPUT_BUNDLE_m_axi_U->I_WDATA(ap_var_for_const8);
    sobel_INPUT_BUNDLE_m_axi_U->I_WID(ap_var_for_const1);
    sobel_INPUT_BUNDLE_m_axi_U->I_WUSER(ap_var_for_const1);
    sobel_INPUT_BUNDLE_m_axi_U->I_WLAST(ap_var_for_const6);
    sobel_INPUT_BUNDLE_m_axi_U->I_WSTRB(ap_var_for_const1);
    sobel_INPUT_BUNDLE_m_axi_U->I_BVALID(INPUT_BUNDLE_BVALID);
    sobel_INPUT_BUNDLE_m_axi_U->I_BREADY(ap_var_for_const6);
    sobel_INPUT_BUNDLE_m_axi_U->I_BRESP(INPUT_BUNDLE_BRESP);
    sobel_INPUT_BUNDLE_m_axi_U->I_BID(INPUT_BUNDLE_BID);
    sobel_INPUT_BUNDLE_m_axi_U->I_BUSER(INPUT_BUNDLE_BUSER);
    sobel_OUTPUT_BUNDLE_m_axi_U = new sobel_OUTPUT_BUNDLE_m_axi<8,32,5,16,16,16,16,C_M_AXI_OUTPUT_BUNDLE_ID_WIDTH,C_M_AXI_OUTPUT_BUNDLE_ADDR_WIDTH,C_M_AXI_OUTPUT_BUNDLE_DATA_WIDTH,C_M_AXI_OUTPUT_BUNDLE_AWUSER_WIDTH,C_M_AXI_OUTPUT_BUNDLE_ARUSER_WIDTH,C_M_AXI_OUTPUT_BUNDLE_WUSER_WIDTH,C_M_AXI_OUTPUT_BUNDLE_RUSER_WIDTH,C_M_AXI_OUTPUT_BUNDLE_BUSER_WIDTH,C_M_AXI_OUTPUT_BUNDLE_USER_VALUE,C_M_AXI_OUTPUT_BUNDLE_PROT_VALUE,C_M_AXI_OUTPUT_BUNDLE_CACHE_VALUE>("sobel_OUTPUT_BUNDLE_m_axi_U");
    sobel_OUTPUT_BUNDLE_m_axi_U->AWVALID(m_axi_OUTPUT_BUNDLE_AWVALID);
    sobel_OUTPUT_BUNDLE_m_axi_U->AWREADY(m_axi_OUTPUT_BUNDLE_AWREADY);
    sobel_OUTPUT_BUNDLE_m_axi_U->AWADDR(m_axi_OUTPUT_BUNDLE_AWADDR);
    sobel_OUTPUT_BUNDLE_m_axi_U->AWID(m_axi_OUTPUT_BUNDLE_AWID);
    sobel_OUTPUT_BUNDLE_m_axi_U->AWLEN(m_axi_OUTPUT_BUNDLE_AWLEN);
    sobel_OUTPUT_BUNDLE_m_axi_U->AWSIZE(m_axi_OUTPUT_BUNDLE_AWSIZE);
    sobel_OUTPUT_BUNDLE_m_axi_U->AWBURST(m_axi_OUTPUT_BUNDLE_AWBURST);
    sobel_OUTPUT_BUNDLE_m_axi_U->AWLOCK(m_axi_OUTPUT_BUNDLE_AWLOCK);
    sobel_OUTPUT_BUNDLE_m_axi_U->AWCACHE(m_axi_OUTPUT_BUNDLE_AWCACHE);
    sobel_OUTPUT_BUNDLE_m_axi_U->AWPROT(m_axi_OUTPUT_BUNDLE_AWPROT);
    sobel_OUTPUT_BUNDLE_m_axi_U->AWQOS(m_axi_OUTPUT_BUNDLE_AWQOS);
    sobel_OUTPUT_BUNDLE_m_axi_U->AWREGION(m_axi_OUTPUT_BUNDLE_AWREGION);
    sobel_OUTPUT_BUNDLE_m_axi_U->AWUSER(m_axi_OUTPUT_BUNDLE_AWUSER);
    sobel_OUTPUT_BUNDLE_m_axi_U->WVALID(m_axi_OUTPUT_BUNDLE_WVALID);
    sobel_OUTPUT_BUNDLE_m_axi_U->WREADY(m_axi_OUTPUT_BUNDLE_WREADY);
    sobel_OUTPUT_BUNDLE_m_axi_U->WDATA(m_axi_OUTPUT_BUNDLE_WDATA);
    sobel_OUTPUT_BUNDLE_m_axi_U->WSTRB(m_axi_OUTPUT_BUNDLE_WSTRB);
    sobel_OUTPUT_BUNDLE_m_axi_U->WLAST(m_axi_OUTPUT_BUNDLE_WLAST);
    sobel_OUTPUT_BUNDLE_m_axi_U->WID(m_axi_OUTPUT_BUNDLE_WID);
    sobel_OUTPUT_BUNDLE_m_axi_U->WUSER(m_axi_OUTPUT_BUNDLE_WUSER);
    sobel_OUTPUT_BUNDLE_m_axi_U->ARVALID(m_axi_OUTPUT_BUNDLE_ARVALID);
    sobel_OUTPUT_BUNDLE_m_axi_U->ARREADY(m_axi_OUTPUT_BUNDLE_ARREADY);
    sobel_OUTPUT_BUNDLE_m_axi_U->ARADDR(m_axi_OUTPUT_BUNDLE_ARADDR);
    sobel_OUTPUT_BUNDLE_m_axi_U->ARID(m_axi_OUTPUT_BUNDLE_ARID);
    sobel_OUTPUT_BUNDLE_m_axi_U->ARLEN(m_axi_OUTPUT_BUNDLE_ARLEN);
    sobel_OUTPUT_BUNDLE_m_axi_U->ARSIZE(m_axi_OUTPUT_BUNDLE_ARSIZE);
    sobel_OUTPUT_BUNDLE_m_axi_U->ARBURST(m_axi_OUTPUT_BUNDLE_ARBURST);
    sobel_OUTPUT_BUNDLE_m_axi_U->ARLOCK(m_axi_OUTPUT_BUNDLE_ARLOCK);
    sobel_OUTPUT_BUNDLE_m_axi_U->ARCACHE(m_axi_OUTPUT_BUNDLE_ARCACHE);
    sobel_OUTPUT_BUNDLE_m_axi_U->ARPROT(m_axi_OUTPUT_BUNDLE_ARPROT);
    sobel_OUTPUT_BUNDLE_m_axi_U->ARQOS(m_axi_OUTPUT_BUNDLE_ARQOS);
    sobel_OUTPUT_BUNDLE_m_axi_U->ARREGION(m_axi_OUTPUT_BUNDLE_ARREGION);
    sobel_OUTPUT_BUNDLE_m_axi_U->ARUSER(m_axi_OUTPUT_BUNDLE_ARUSER);
    sobel_OUTPUT_BUNDLE_m_axi_U->RVALID(m_axi_OUTPUT_BUNDLE_RVALID);
    sobel_OUTPUT_BUNDLE_m_axi_U->RREADY(m_axi_OUTPUT_BUNDLE_RREADY);
    sobel_OUTPUT_BUNDLE_m_axi_U->RDATA(m_axi_OUTPUT_BUNDLE_RDATA);
    sobel_OUTPUT_BUNDLE_m_axi_U->RLAST(m_axi_OUTPUT_BUNDLE_RLAST);
    sobel_OUTPUT_BUNDLE_m_axi_U->RID(m_axi_OUTPUT_BUNDLE_RID);
    sobel_OUTPUT_BUNDLE_m_axi_U->RUSER(m_axi_OUTPUT_BUNDLE_RUSER);
    sobel_OUTPUT_BUNDLE_m_axi_U->RRESP(m_axi_OUTPUT_BUNDLE_RRESP);
    sobel_OUTPUT_BUNDLE_m_axi_U->BVALID(m_axi_OUTPUT_BUNDLE_BVALID);
    sobel_OUTPUT_BUNDLE_m_axi_U->BREADY(m_axi_OUTPUT_BUNDLE_BREADY);
    sobel_OUTPUT_BUNDLE_m_axi_U->BRESP(m_axi_OUTPUT_BUNDLE_BRESP);
    sobel_OUTPUT_BUNDLE_m_axi_U->BID(m_axi_OUTPUT_BUNDLE_BID);
    sobel_OUTPUT_BUNDLE_m_axi_U->BUSER(m_axi_OUTPUT_BUNDLE_BUSER);
    sobel_OUTPUT_BUNDLE_m_axi_U->ACLK(ap_clk);
    sobel_OUTPUT_BUNDLE_m_axi_U->ARESET(ap_rst_n_inv);
    sobel_OUTPUT_BUNDLE_m_axi_U->ACLK_EN(ap_var_for_const0);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_ARVALID(ap_var_for_const6);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_ARREADY(OUTPUT_BUNDLE_ARREADY);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_ARADDR(ap_var_for_const7);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_ARID(ap_var_for_const1);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_ARLEN(ap_var_for_const7);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_ARSIZE(ap_var_for_const3);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_ARLOCK(ap_var_for_const4);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_ARCACHE(ap_var_for_const5);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_ARQOS(ap_var_for_const5);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_ARPROT(ap_var_for_const3);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_ARUSER(ap_var_for_const1);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_ARBURST(ap_var_for_const4);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_ARREGION(ap_var_for_const5);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_RVALID(OUTPUT_BUNDLE_RVALID);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_RREADY(ap_var_for_const6);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_RDATA(OUTPUT_BUNDLE_RDATA);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_RID(OUTPUT_BUNDLE_RID);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_RUSER(OUTPUT_BUNDLE_RUSER);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_RRESP(OUTPUT_BUNDLE_RRESP);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_RLAST(OUTPUT_BUNDLE_RLAST);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_AWVALID(OUTPUT_BUNDLE_AWVALID);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_AWREADY(OUTPUT_BUNDLE_AWREADY);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_AWADDR(ap_reg_pp0_iter7_OUTPUT_BUNDLE_addr_reg_924);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_AWID(ap_var_for_const1);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_AWLEN(ap_var_for_const9);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_AWSIZE(ap_var_for_const3);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_AWLOCK(ap_var_for_const4);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_AWCACHE(ap_var_for_const5);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_AWQOS(ap_var_for_const5);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_AWPROT(ap_var_for_const3);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_AWUSER(ap_var_for_const1);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_AWBURST(ap_var_for_const4);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_AWREGION(ap_var_for_const5);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_WVALID(OUTPUT_BUNDLE_WVALID);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_WREADY(OUTPUT_BUNDLE_WREADY);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_WDATA(tmp_28_reg_1104);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_WID(ap_var_for_const1);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_WUSER(ap_var_for_const1);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_WLAST(ap_var_for_const6);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_WSTRB(ap_var_for_const10);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_BVALID(OUTPUT_BUNDLE_BVALID);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_BREADY(OUTPUT_BUNDLE_BREADY);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_BRESP(OUTPUT_BUNDLE_BRESP);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_BID(OUTPUT_BUNDLE_BID);
    sobel_OUTPUT_BUNDLE_m_axi_U->I_BUSER(OUTPUT_BUNDLE_BUSER);
    sobel_uitodp_32nsbkb_U0 = new sobel_uitodp_32nsbkb<1,6,32,64>("sobel_uitodp_32nsbkb_U0");
    sobel_uitodp_32nsbkb_U0->clk(ap_clk);
    sobel_uitodp_32nsbkb_U0->reset(ap_rst_n_inv);
    sobel_uitodp_32nsbkb_U0->din0(grp_fu_221_p0);
    sobel_uitodp_32nsbkb_U0->ce(grp_fu_221_ce);
    sobel_uitodp_32nsbkb_U0->dout(grp_fu_221_p1);
    sobel_dsqrt_64ns_cud_U1 = new sobel_dsqrt_64ns_cud<1,31,64,64,64>("sobel_dsqrt_64ns_cud_U1");
    sobel_dsqrt_64ns_cud_U1->clk(ap_clk);
    sobel_dsqrt_64ns_cud_U1->reset(ap_rst_n_inv);
    sobel_dsqrt_64ns_cud_U1->din0(ap_var_for_const11);
    sobel_dsqrt_64ns_cud_U1->din1(tmp_23_reg_1068);
    sobel_dsqrt_64ns_cud_U1->ce(grp_fu_224_ce);
    sobel_dsqrt_64ns_cud_U1->dout(grp_fu_224_p2);
    sobel_urem_20ns_1dEe_U2 = new sobel_urem_20ns_1dEe<1,24,20,11,20>("sobel_urem_20ns_1dEe_U2");
    sobel_urem_20ns_1dEe_U2->clk(ap_clk);
    sobel_urem_20ns_1dEe_U2->reset(ap_rst_n_inv);
    sobel_urem_20ns_1dEe_U2->din0(indvar_flatten_phi_fu_191_p4);
    sobel_urem_20ns_1dEe_U2->din1(grp_fu_312_p1);
    sobel_urem_20ns_1dEe_U2->ce(grp_fu_312_ce);
    sobel_urem_20ns_1dEe_U2->dout(grp_fu_312_p2);
    sobel_urem_20ns_1dEe_U3 = new sobel_urem_20ns_1dEe<1,24,20,11,20>("sobel_urem_20ns_1dEe_U3");
    sobel_urem_20ns_1dEe_U3->clk(ap_clk);
    sobel_urem_20ns_1dEe_U3->reset(ap_rst_n_inv);
    sobel_urem_20ns_1dEe_U3->din0(indvar_flatten_next_reg_900);
    sobel_urem_20ns_1dEe_U3->din1(grp_fu_349_p1);
    sobel_urem_20ns_1dEe_U3->ce(grp_fu_349_ce);
    sobel_urem_20ns_1dEe_U3->dout(grp_fu_349_p2);
    sobel_mul_mul_11seOg_U4 = new sobel_mul_mul_11seOg<1,1,11,11,20>("sobel_mul_mul_11seOg_U4");
    sobel_mul_mul_11seOg_U4->din0(tmp_21_fu_866_p0);
    sobel_mul_mul_11seOg_U4->din1(tmp_21_fu_866_p1);
    sobel_mul_mul_11seOg_U4->dout(tmp_21_fu_866_p2);
    sobel_mac_muladd_fYi_U5 = new sobel_mac_muladd_fYi<1,1,11,11,20,20>("sobel_mac_muladd_fYi_U5");
    sobel_mac_muladd_fYi_U5->din0(grp_fu_872_p0);
    sobel_mac_muladd_fYi_U5->din1(grp_fu_872_p1);
    sobel_mac_muladd_fYi_U5->din2(tmp_21_reg_1045);
    sobel_mac_muladd_fYi_U5->dout(grp_fu_872_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_INPUT_BUNDLE_ARADDR);
    sensitive << ( INPUT_BUNDLE_addr_reg_936 );
    sensitive << ( INPUT_BUNDLE_addr_1_reg_942 );
    sensitive << ( INPUT_BUNDLE_addr_2_reg_948 );
    sensitive << ( INPUT_BUNDLE_addr_3_reg_954 );
    sensitive << ( INPUT_BUNDLE_addr_5_reg_960 );
    sensitive << ( INPUT_BUNDLE_addr_4_reg_966 );
    sensitive << ( INPUT_BUNDLE_addr_6_reg_972 );
    sensitive << ( INPUT_BUNDLE_addr_7_reg_978 );
    sensitive << ( ap_reg_ioackin_INPUT_BUNDLE_ARREADY );
    sensitive << ( ap_condition_853 );
    sensitive << ( ap_condition_867 );
    sensitive << ( ap_condition_879 );
    sensitive << ( ap_condition_891 );
    sensitive << ( ap_condition_901 );
    sensitive << ( ap_condition_913 );
    sensitive << ( ap_condition_925 );
    sensitive << ( ap_condition_936 );

    SC_METHOD(thread_INPUT_BUNDLE_ARVALID);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_reg_ioackin_INPUT_BUNDLE_ARREADY );
    sensitive << ( ap_block_pp0_stage2_flag00001001 );
    sensitive << ( ap_block_pp0_stage3_flag00001001 );
    sensitive << ( ap_block_pp0_stage4_flag00001001 );
    sensitive << ( ap_block_pp0_stage5_flag00001001 );
    sensitive << ( ap_block_pp0_stage6_flag00001001 );
    sensitive << ( ap_block_pp0_stage7_flag00001001 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( ap_block_pp0_stage1_flag00001001 );

    SC_METHOD(thread_INPUT_BUNDLE_RREADY);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_block_pp0_stage2_flag00011001 );
    sensitive << ( ap_block_pp0_stage3_flag00011001 );
    sensitive << ( ap_block_pp0_stage5_flag00011001 );
    sensitive << ( ap_block_pp0_stage4_flag00011001 );
    sensitive << ( ap_block_pp0_stage6_flag00011001 );
    sensitive << ( ap_block_pp0_stage7_flag00011001 );

    SC_METHOD(thread_INPUT_BUNDLE_blk_n_AR);
    sensitive << ( m_axi_INPUT_BUNDLE_ARREADY );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage2_flag00000000 );
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_flag00000000 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_flag00000000 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_flag00000000 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_flag00000000 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_flag00000000 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_INPUT_BUNDLE_blk_n_R);
    sensitive << ( m_axi_INPUT_BUNDLE_RVALID );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_flag00000000 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_flag00000000 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_flag00000000 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_flag00000000 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_flag00000000 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_flag00000000 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_OUTPUT_BUNDLE_AWVALID);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_reg_pp0_iter6_tmp_30_reg_1060 );
    sensitive << ( ap_block_pp0_stage3_flag00001001 );
    sensitive << ( ap_reg_ioackin_OUTPUT_BUNDLE_AWREADY );

    SC_METHOD(thread_OUTPUT_BUNDLE_BREADY);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_reg_pp0_iter8_tmp_32_reg_1064 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );

    SC_METHOD(thread_OUTPUT_BUNDLE_WVALID);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_896 );
    sensitive << ( ap_block_pp0_stage4_flag00001001 );
    sensitive << ( ap_reg_ioackin_OUTPUT_BUNDLE_WREADY );

    SC_METHOD(thread_OUTPUT_BUNDLE_blk_n_AW);
    sensitive << ( m_axi_OUTPUT_BUNDLE_AWREADY );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_reg_pp0_iter6_tmp_30_reg_1060 );

    SC_METHOD(thread_OUTPUT_BUNDLE_blk_n_B);
    sensitive << ( m_axi_OUTPUT_BUNDLE_BVALID );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_reg_pp0_iter8_tmp_32_reg_1064 );

    SC_METHOD(thread_OUTPUT_BUNDLE_blk_n_W);
    sensitive << ( m_axi_OUTPUT_BUNDLE_WREADY );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_896 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state68);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00001001);
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( INPUT_BUNDLE_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( ap_block_state10_io );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( ap_block_state10_io );

    SC_METHOD(thread_ap_block_pp0_stage1_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00001001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_reg_pp0_iter8_tmp_32_reg_1064 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( OUTPUT_BUNDLE_BVALID );

    SC_METHOD(thread_ap_block_pp0_stage1_flag00011001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_reg_pp0_iter8_tmp_32_reg_1064 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( OUTPUT_BUNDLE_BVALID );
    sensitive << ( ap_block_state11_io );

    SC_METHOD(thread_ap_block_pp0_stage1_flag00011011);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_reg_pp0_iter8_tmp_32_reg_1064 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( OUTPUT_BUNDLE_BVALID );
    sensitive << ( ap_block_state11_io );

    SC_METHOD(thread_ap_block_pp0_stage2_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage2_flag00001001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage2_flag00011001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_pp0_stage2_flag00011011);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_pp0_stage3_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage3_flag00001001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage3_flag00011001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( ap_block_state5_io );
    sensitive << ( ap_block_state61_io );

    SC_METHOD(thread_ap_block_pp0_stage3_flag00011011);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( ap_block_state5_io );
    sensitive << ( ap_block_state61_io );

    SC_METHOD(thread_ap_block_pp0_stage4_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage4_flag00001001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage4_flag00011001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( ap_block_state6_io );
    sensitive << ( ap_block_state62_io );

    SC_METHOD(thread_ap_block_pp0_stage4_flag00011011);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( ap_block_state6_io );
    sensitive << ( ap_block_state62_io );

    SC_METHOD(thread_ap_block_pp0_stage5_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage5_flag00001001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage5_flag00011001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( ap_block_state7_io );

    SC_METHOD(thread_ap_block_pp0_stage5_flag00011011);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( ap_block_state7_io );

    SC_METHOD(thread_ap_block_pp0_stage6_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage6_flag00001001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage6_flag00011001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( ap_block_state8_io );

    SC_METHOD(thread_ap_block_pp0_stage6_flag00011011);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( ap_block_state8_io );

    SC_METHOD(thread_ap_block_pp0_stage7_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage7_flag00001001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage7_flag00011001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( ap_block_state9_io );

    SC_METHOD(thread_ap_block_pp0_stage7_flag00011011);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );
    sensitive << ( ap_block_state9_io );

    SC_METHOD(thread_ap_block_state10_io);
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_sig_ioackin_INPUT_BUNDLE_ARREADY );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state11_io);
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( ap_sig_ioackin_INPUT_BUNDLE_ARREADY );

    SC_METHOD(thread_ap_block_state11_pp0_stage1_iter1);
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );

    SC_METHOD(thread_ap_block_state12_pp0_stage2_iter1);
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );

    SC_METHOD(thread_ap_block_state13_pp0_stage3_iter1);
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );

    SC_METHOD(thread_ap_block_state14_pp0_stage4_iter1);
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );

    SC_METHOD(thread_ap_block_state15_pp0_stage5_iter1);
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );

    SC_METHOD(thread_ap_block_state16_pp0_stage6_iter1);
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );

    SC_METHOD(thread_ap_block_state17_pp0_stage7_iter1);
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter2);
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( INPUT_BUNDLE_RVALID );

    SC_METHOD(thread_ap_block_state19_pp0_stage1_iter2);

    SC_METHOD(thread_ap_block_state20_pp0_stage2_iter2);

    SC_METHOD(thread_ap_block_state21_pp0_stage3_iter2);

    SC_METHOD(thread_ap_block_state22_pp0_stage4_iter2);

    SC_METHOD(thread_ap_block_state23_pp0_stage5_iter2);

    SC_METHOD(thread_ap_block_state24_pp0_stage6_iter2);

    SC_METHOD(thread_ap_block_state25_pp0_stage7_iter2);

    SC_METHOD(thread_ap_block_state26_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state27_pp0_stage1_iter3);

    SC_METHOD(thread_ap_block_state28_pp0_stage2_iter3);

    SC_METHOD(thread_ap_block_state29_pp0_stage3_iter3);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state30_pp0_stage4_iter3);

    SC_METHOD(thread_ap_block_state31_pp0_stage5_iter3);

    SC_METHOD(thread_ap_block_state32_pp0_stage6_iter3);

    SC_METHOD(thread_ap_block_state33_pp0_stage7_iter3);

    SC_METHOD(thread_ap_block_state34_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state35_pp0_stage1_iter4);

    SC_METHOD(thread_ap_block_state36_pp0_stage2_iter4);

    SC_METHOD(thread_ap_block_state37_pp0_stage3_iter4);

    SC_METHOD(thread_ap_block_state38_pp0_stage4_iter4);

    SC_METHOD(thread_ap_block_state39_pp0_stage5_iter4);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state40_pp0_stage6_iter4);

    SC_METHOD(thread_ap_block_state41_pp0_stage7_iter4);

    SC_METHOD(thread_ap_block_state42_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state43_pp0_stage1_iter5);

    SC_METHOD(thread_ap_block_state44_pp0_stage2_iter5);

    SC_METHOD(thread_ap_block_state45_pp0_stage3_iter5);

    SC_METHOD(thread_ap_block_state46_pp0_stage4_iter5);

    SC_METHOD(thread_ap_block_state47_pp0_stage5_iter5);

    SC_METHOD(thread_ap_block_state48_pp0_stage6_iter5);

    SC_METHOD(thread_ap_block_state49_pp0_stage7_iter5);

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_sig_ioackin_INPUT_BUNDLE_ARREADY );

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state50_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state51_pp0_stage1_iter6);

    SC_METHOD(thread_ap_block_state52_pp0_stage2_iter6);

    SC_METHOD(thread_ap_block_state53_pp0_stage3_iter6);

    SC_METHOD(thread_ap_block_state54_pp0_stage4_iter6);

    SC_METHOD(thread_ap_block_state55_pp0_stage5_iter6);

    SC_METHOD(thread_ap_block_state56_pp0_stage6_iter6);

    SC_METHOD(thread_ap_block_state57_pp0_stage7_iter6);

    SC_METHOD(thread_ap_block_state58_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state59_pp0_stage1_iter7);

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_sig_ioackin_INPUT_BUNDLE_ARREADY );

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state60_pp0_stage2_iter7);

    SC_METHOD(thread_ap_block_state61_io);
    sensitive << ( ap_reg_pp0_iter6_tmp_30_reg_1060 );
    sensitive << ( ap_sig_ioackin_OUTPUT_BUNDLE_AWREADY );

    SC_METHOD(thread_ap_block_state61_pp0_stage3_iter7);

    SC_METHOD(thread_ap_block_state62_io);
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_896 );
    sensitive << ( ap_sig_ioackin_OUTPUT_BUNDLE_WREADY );

    SC_METHOD(thread_ap_block_state62_pp0_stage4_iter7);

    SC_METHOD(thread_ap_block_state63_pp0_stage5_iter7);

    SC_METHOD(thread_ap_block_state64_pp0_stage6_iter7);

    SC_METHOD(thread_ap_block_state65_pp0_stage7_iter7);

    SC_METHOD(thread_ap_block_state66_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state67_pp0_stage1_iter8);
    sensitive << ( ap_reg_pp0_iter8_tmp_32_reg_1064 );
    sensitive << ( OUTPUT_BUNDLE_BVALID );

    SC_METHOD(thread_ap_block_state6_io);
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_sig_ioackin_INPUT_BUNDLE_ARREADY );

    SC_METHOD(thread_ap_block_state6_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state7_io);
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_sig_ioackin_INPUT_BUNDLE_ARREADY );

    SC_METHOD(thread_ap_block_state7_pp0_stage5_iter0);

    SC_METHOD(thread_ap_block_state8_io);
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_sig_ioackin_INPUT_BUNDLE_ARREADY );

    SC_METHOD(thread_ap_block_state8_pp0_stage6_iter0);

    SC_METHOD(thread_ap_block_state9_io);
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_sig_ioackin_INPUT_BUNDLE_ARREADY );

    SC_METHOD(thread_ap_block_state9_pp0_stage7_iter0);

    SC_METHOD(thread_ap_condition_1547);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_reg_pp0_iter6_tmp_30_reg_1060 );

    SC_METHOD(thread_ap_condition_1551);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_896 );

    SC_METHOD(thread_ap_condition_853);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_block_pp0_stage2_flag00001001 );

    SC_METHOD(thread_ap_condition_867);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_flag00001001 );

    SC_METHOD(thread_ap_condition_879);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_flag00001001 );

    SC_METHOD(thread_ap_condition_891);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_flag00001001 );

    SC_METHOD(thread_ap_condition_901);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_flag00001001 );

    SC_METHOD(thread_ap_condition_913);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_flag00001001 );

    SC_METHOD(thread_ap_condition_925);
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );

    SC_METHOD(thread_ap_condition_936);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_896 );
    sensitive << ( ap_block_pp0_stage1_flag00001001 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_233_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state68 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state68 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_INPUT_BUNDLE_ARREADY);
    sensitive << ( INPUT_BUNDLE_ARREADY );
    sensitive << ( ap_reg_ioackin_INPUT_BUNDLE_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_OUTPUT_BUNDLE_AWREADY);
    sensitive << ( OUTPUT_BUNDLE_AWREADY );
    sensitive << ( ap_reg_ioackin_OUTPUT_BUNDLE_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_OUTPUT_BUNDLE_WREADY);
    sensitive << ( OUTPUT_BUNDLE_WREADY );
    sensitive << ( ap_reg_ioackin_OUTPUT_BUNDLE_WREADY );

    SC_METHOD(thread_convulution_horizont_fu_657_p2);
    sensitive << ( tmp3_cast_fu_654_p1 );
    sensitive << ( tmp_5_fu_648_p2 );

    SC_METHOD(thread_convulution_vertical_fu_695_p2);
    sensitive << ( tmp_17_fu_689_p2 );
    sensitive << ( tmp_28_cast_fu_682_p1 );

    SC_METHOD(thread_exitcond_flatten_fu_233_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( indvar_flatten_phi_fu_191_p4 );

    SC_METHOD(thread_grp_fu_221_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_block_pp0_stage5_flag00011001 );
    sensitive << ( ap_block_pp0_stage4_flag00011001 );
    sensitive << ( ap_block_pp0_stage6_flag00011001 );
    sensitive << ( ap_block_pp0_stage7_flag00011001 );

    SC_METHOD(thread_grp_fu_221_p0);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( p_reg_1050 );

    SC_METHOD(thread_grp_fu_224_ce);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_block_pp0_stage2_flag00011001 );
    sensitive << ( ap_block_pp0_stage3_flag00011001 );
    sensitive << ( ap_block_pp0_stage5_flag00011001 );
    sensitive << ( ap_block_pp0_stage4_flag00011001 );
    sensitive << ( ap_block_pp0_stage6_flag00011001 );
    sensitive << ( ap_block_pp0_stage7_flag00011001 );

    SC_METHOD(thread_grp_fu_312_ce);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_block_pp0_stage2_flag00011001 );
    sensitive << ( ap_block_pp0_stage3_flag00011001 );
    sensitive << ( ap_block_pp0_stage5_flag00011001 );
    sensitive << ( ap_block_pp0_stage4_flag00011001 );
    sensitive << ( ap_block_pp0_stage6_flag00011001 );
    sensitive << ( ap_block_pp0_stage7_flag00011001 );

    SC_METHOD(thread_grp_fu_312_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_grp_fu_349_ce);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_block_pp0_stage2_flag00011001 );
    sensitive << ( ap_block_pp0_stage3_flag00011001 );
    sensitive << ( ap_block_pp0_stage5_flag00011001 );
    sensitive << ( ap_block_pp0_stage4_flag00011001 );
    sensitive << ( ap_block_pp0_stage6_flag00011001 );
    sensitive << ( ap_block_pp0_stage7_flag00011001 );

    SC_METHOD(thread_grp_fu_349_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );

    SC_METHOD(thread_grp_fu_872_p0);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_896 );
    sensitive << ( tmp_18_fu_704_p1 );

    SC_METHOD(thread_grp_fu_872_p1);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_896 );
    sensitive << ( tmp_18_fu_704_p1 );

    SC_METHOD(thread_i_1_fu_558_p2);
    sensitive << ( i_mid2_reg_906 );

    SC_METHOD(thread_i_mid2_fu_251_p3);
    sensitive << ( i_phi_fu_214_p4 );
    sensitive << ( tmp_1_fu_245_p2 );

    SC_METHOD(thread_i_phi_fu_214_p4);
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( i_reg_210 );
    sensitive << ( i_1_reg_984 );

    SC_METHOD(thread_icmp_fu_850_p2);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_896 );
    sensitive << ( ap_block_pp0_stage2_flag00011001 );
    sensitive << ( tmp_26_fu_840_p4 );

    SC_METHOD(thread_indvar_flatten_next_fu_239_p2);
    sensitive << ( indvar_flatten_phi_fu_191_p4 );

    SC_METHOD(thread_indvar_flatten_phi_fu_191_p4);
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( indvar_flatten_reg_187 );
    sensitive << ( indvar_flatten_next_reg_900 );

    SC_METHOD(thread_input2_sum1_fu_515_p2);
    sensitive << ( input_read_reg_884 );
    sensitive << ( tmp_10_fu_511_p1 );

    SC_METHOD(thread_input2_sum2_fu_547_p2);
    sensitive << ( input_read_reg_884 );
    sensitive << ( tmp_14_fu_543_p1 );

    SC_METHOD(thread_input2_sum5_fu_370_p2);
    sensitive << ( input_read_reg_884 );
    sensitive << ( sum4_cast_fu_366_p1 );

    SC_METHOD(thread_input2_sum6_fu_390_p2);
    sensitive << ( input_read_reg_884 );
    sensitive << ( sum6_cast_fu_386_p1 );

    SC_METHOD(thread_input2_sum7_fu_410_p2);
    sensitive << ( input_read_reg_884 );
    sensitive << ( sum8_cast_fu_406_p1 );

    SC_METHOD(thread_input2_sum8_fu_483_p2);
    sensitive << ( input_read_reg_884 );
    sensitive << ( sum3_cast_fu_479_p1 );

    SC_METHOD(thread_input2_sum9_fu_430_p2);
    sensitive << ( input_read_reg_884 );
    sensitive << ( sum5_cast_fu_426_p1 );

    SC_METHOD(thread_input2_sum_fu_338_p2);
    sensitive << ( input_read_reg_884 );
    sensitive << ( sum2_cast_fu_334_p1 );

    SC_METHOD(thread_isNeg_fu_750_p3);
    sensitive << ( sh_assign_fu_744_p2 );

    SC_METHOD(thread_j_phi_fu_203_p4);
    sensitive << ( exitcond_flatten_reg_896 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( j_reg_199 );
    sensitive << ( tmp_3_cast_mid2_v_v_s_reg_916 );

    SC_METHOD(thread_j_s_fu_259_p2);
    sensitive << ( j_phi_fu_203_p4 );

    SC_METHOD(thread_loc_V_1_fu_737_p1);
    sensitive << ( p_Val2_s_fu_723_p1 );

    SC_METHOD(thread_output4_sum1_fu_301_p2);
    sensitive << ( output_read_reg_879 );
    sensitive << ( tmp_7_mid2_fu_297_p1 );

    SC_METHOD(thread_p_Val2_s_fu_723_p1);
    sensitive << ( grp_fu_224_p2 );

    SC_METHOD(thread_sh_assign_1_cast_fu_788_p1);
    sensitive << ( sh_assign_1_reg_1089 );

    SC_METHOD(thread_sh_assign_1_fu_767_p3);
    sensitive << ( isNeg_fu_750_p3 );
    sensitive << ( sh_assign_fu_744_p2 );
    sensitive << ( tmp_41_i_i_i_cast_fu_763_p1 );

    SC_METHOD(thread_sh_assign_fu_744_p2);
    sensitive << ( tmp_i_i_i_i_cast4_fu_741_p1 );

    SC_METHOD(thread_sum1_cast_fu_645_p1);
    sensitive << ( sum1_reg_1020 );

    SC_METHOD(thread_sum1_fu_608_p2);
    sensitive << ( tmp2_cast_fu_604_p1 );
    sensitive << ( tmp_12_cast_fu_574_p1 );

    SC_METHOD(thread_sum2_cast_fu_334_p1);
    sensitive << ( sum2_fu_328_p2 );

    SC_METHOD(thread_sum2_fu_328_p2);
    sensitive << ( tmp_9_cast_fu_324_p1 );

    SC_METHOD(thread_sum3_cast_fu_479_p1);
    sensitive << ( sum3_fu_473_p2 );

    SC_METHOD(thread_sum3_fu_473_p2);
    sensitive << ( tmp_3_cast_mid2_fu_454_p1 );
    sensitive << ( tmp_8_cast5_fu_470_p1 );

    SC_METHOD(thread_sum4_cast_fu_366_p1);
    sensitive << ( sum4_fu_359_p3 );

    SC_METHOD(thread_sum4_fu_359_p3);
    sensitive << ( tmp_3_cast_mid2_v_v_s_reg_916 );
    sensitive << ( tmp1_fu_354_p2 );

    SC_METHOD(thread_sum5_cast_fu_426_p1);
    sensitive << ( sum5_fu_421_p2 );

    SC_METHOD(thread_sum5_fu_421_p2);
    sensitive << ( tmp_9_cast_reg_929 );

    SC_METHOD(thread_sum5_neg_cast_fu_626_p1);
    sensitive << ( sum5_neg_fu_620_p2 );

    SC_METHOD(thread_sum5_neg_fu_620_p2);
    sensitive << ( tmp_7_cast_fu_563_p1 );
    sensitive << ( tmp_13_cast_fu_578_p1 );

    SC_METHOD(thread_sum6_cast_fu_386_p1);
    sensitive << ( sum6_fu_381_p2 );

    SC_METHOD(thread_sum6_fu_381_p2);
    sensitive << ( tmp_9_cast_reg_929 );

    SC_METHOD(thread_sum6_neg_fu_630_p2);
    sensitive << ( sum5_neg_cast_fu_626_p1 );
    sensitive << ( tmp_15_cast_fu_581_p1 );

    SC_METHOD(thread_sum8_cast_fu_406_p1);
    sensitive << ( sum8_fu_401_p2 );

    SC_METHOD(thread_sum8_fu_401_p2);
    sensitive << ( tmp_9_cast_reg_929 );

    SC_METHOD(thread_tmp1_fu_354_p2);
    sensitive << ( i_mid2_reg_906 );

    SC_METHOD(thread_tmp2_cast_fu_604_p1);
    sensitive << ( tmp2_fu_598_p2 );

    SC_METHOD(thread_tmp2_fu_598_p2);
    sensitive << ( tmp_7_cast_fu_563_p1 );
    sensitive << ( tmp_13_cast_fu_578_p1 );

    SC_METHOD(thread_tmp3_cast_fu_654_p1);
    sensitive << ( tmp3_reg_1025 );

    SC_METHOD(thread_tmp3_fu_614_p2);
    sensitive << ( tmp_17_cast_fu_591_p1 );
    sensitive << ( tmp_18_cast_fu_595_p1 );

    SC_METHOD(thread_tmp_10_fu_511_p1);
    sensitive << ( tmp_9_fu_504_p3 );

    SC_METHOD(thread_tmp_11_fu_663_p3);
    sensitive << ( INPUT_BUNDLE_addr_6_s_reg_1015 );

    SC_METHOD(thread_tmp_12_cast_fu_574_p1);
    sensitive << ( tmp_2_fu_567_p3 );

    SC_METHOD(thread_tmp_12_fu_526_p4);
    sensitive << ( tmp_5_mid2_fu_464_p2 );

    SC_METHOD(thread_tmp_13_cast_fu_578_p1);
    sensitive << ( INPUT_BUNDLE_addr_2_s_reg_994 );

    SC_METHOD(thread_tmp_13_fu_536_p3);
    sensitive << ( i_mid2_reg_906 );
    sensitive << ( tmp_12_fu_526_p4 );

    SC_METHOD(thread_tmp_14_fu_543_p1);
    sensitive << ( tmp_13_fu_536_p3 );

    SC_METHOD(thread_tmp_15_cast_fu_581_p1);
    sensitive << ( INPUT_BUNDLE_addr_3_s_reg_999 );

    SC_METHOD(thread_tmp_15_fu_674_p3);
    sensitive << ( reg_229 );

    SC_METHOD(thread_tmp_16_fu_636_p2);
    sensitive << ( tmp_18_cast_fu_595_p1 );
    sensitive << ( sum6_neg_fu_630_p2 );

    SC_METHOD(thread_tmp_17_cast_fu_591_p1);
    sensitive << ( tmp_4_fu_584_p3 );

    SC_METHOD(thread_tmp_17_fu_689_p2);
    sensitive << ( tmp_29_cast_fu_686_p1 );
    sensitive << ( tmp_24_cast_fu_670_p1 );

    SC_METHOD(thread_tmp_18_cast_fu_595_p1);
    sensitive << ( INPUT_BUNDLE_addr_5_s_reg_1010 );

    SC_METHOD(thread_tmp_18_fu_704_p1);
    sensitive << ( convulution_horizont_reg_1035 );

    SC_METHOD(thread_tmp_1_fu_245_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( exitcond_flatten_fu_233_p2 );
    sensitive << ( i_phi_fu_214_p4 );

    SC_METHOD(thread_tmp_1_mid1_fu_273_p3);
    sensitive << ( j_s_fu_259_p2 );

    SC_METHOD(thread_tmp_20_fu_701_p1);
    sensitive << ( convulution_vertical_reg_1040 );

    SC_METHOD(thread_tmp_21_fu_866_p0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_20_fu_701_p1 );

    SC_METHOD(thread_tmp_21_fu_866_p1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_20_fu_701_p1 );

    SC_METHOD(thread_tmp_24_cast1_fu_819_p1);
    sensitive << ( tmp_fu_811_p3 );

    SC_METHOD(thread_tmp_24_cast_fu_670_p1);
    sensitive << ( tmp_11_fu_663_p3 );

    SC_METHOD(thread_tmp_24_fu_823_p4);
    sensitive << ( tmp_44_i_i_i_fu_805_p2 );

    SC_METHOD(thread_tmp_25_fu_833_p3);
    sensitive << ( isNeg_reg_1084 );
    sensitive << ( tmp_24_cast1_fu_819_p1 );
    sensitive << ( tmp_24_fu_823_p4 );

    SC_METHOD(thread_tmp_26_fu_840_p4);
    sensitive << ( tmp_25_fu_833_p3 );

    SC_METHOD(thread_tmp_27_fu_856_p1);
    sensitive << ( tmp_25_fu_833_p3 );

    SC_METHOD(thread_tmp_28_cast_fu_682_p1);
    sensitive << ( tmp_15_fu_674_p3 );

    SC_METHOD(thread_tmp_28_fu_860_p3);
    sensitive << ( icmp_reg_1094 );
    sensitive << ( tmp_27_reg_1099 );

    SC_METHOD(thread_tmp_29_cast_fu_686_p1);
    sensitive << ( tmp_16_reg_1030 );

    SC_METHOD(thread_tmp_2_fu_567_p3);
    sensitive << ( INPUT_BUNDLE_addr_1_s_reg_989 );

    SC_METHOD(thread_tmp_30_fu_711_p2);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_896 );
    sensitive << ( ap_block_pp0_stage7_flag00011001 );
    sensitive << ( grp_fu_312_p2 );

    SC_METHOD(thread_tmp_32_fu_717_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_896 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( grp_fu_349_p2 );

    SC_METHOD(thread_tmp_3_cast_mid2_fu_454_p1);
    sensitive << ( tmp_3_cast_mid2_v_fu_448_p2 );

    SC_METHOD(thread_tmp_3_cast_mid2_v_fu_448_p2);
    sensitive << ( tmp_3_cast_mid2_v_v_fu_441_p3 );

    SC_METHOD(thread_tmp_3_cast_mid2_v_v_fu_441_p3);
    sensitive << ( tmp_3_cast_mid2_v_v_s_reg_916 );

    SC_METHOD(thread_tmp_3_cast_mid2_v_v_s_fu_265_p3);
    sensitive << ( j_phi_fu_203_p4 );
    sensitive << ( tmp_1_fu_245_p2 );
    sensitive << ( j_s_fu_259_p2 );

    SC_METHOD(thread_tmp_3_fu_642_p1);
    sensitive << ( INPUT_BUNDLE_addr_3_s_reg_999 );

    SC_METHOD(thread_tmp_41_i_i_i_cast_fu_763_p1);
    sensitive << ( tmp_41_i_i_i_fu_758_p2 );

    SC_METHOD(thread_tmp_41_i_i_i_fu_758_p2);
    sensitive << ( loc_V_reg_1073 );

    SC_METHOD(thread_tmp_42_i_i_i_cast_fu_795_p1);
    sensitive << ( sh_assign_1_cast_fu_788_p1 );

    SC_METHOD(thread_tmp_42_i_i_i_fu_791_p1);
    sensitive << ( sh_assign_1_cast_fu_788_p1 );

    SC_METHOD(thread_tmp_43_i_i_i_fu_799_p2);
    sensitive << ( tmp_i_i_i_fu_775_p4 );
    sensitive << ( tmp_42_i_i_i_cast_fu_795_p1 );

    SC_METHOD(thread_tmp_44_i_i_i_fu_805_p2);
    sensitive << ( tmp_i_i_i_cast_fu_784_p1 );
    sensitive << ( tmp_42_i_i_i_fu_791_p1 );

    SC_METHOD(thread_tmp_4_fu_584_p3);
    sensitive << ( INPUT_BUNDLE_addr_4_s_reg_1005 );

    SC_METHOD(thread_tmp_4_mid2_fu_458_p2);
    sensitive << ( tmp_3_cast_mid2_v_v_fu_441_p3 );

    SC_METHOD(thread_tmp_5_fu_648_p2);
    sensitive << ( tmp_3_fu_642_p1 );
    sensitive << ( sum1_cast_fu_645_p1 );

    SC_METHOD(thread_tmp_5_mid2_fu_464_p2);
    sensitive << ( tmp_3_cast_mid2_v_v_fu_441_p3 );

    SC_METHOD(thread_tmp_6_fu_281_p3);
    sensitive << ( j_phi_fu_203_p4 );

    SC_METHOD(thread_tmp_7_cast_fu_563_p1);
    sensitive << ( reg_229 );

    SC_METHOD(thread_tmp_7_fu_494_p4);
    sensitive << ( tmp_4_mid2_fu_458_p2 );

    SC_METHOD(thread_tmp_7_mid2_fu_297_p1);
    sensitive << ( tmp_7_mid2_v_fu_289_p3 );

    SC_METHOD(thread_tmp_7_mid2_v_fu_289_p3);
    sensitive << ( tmp_1_fu_245_p2 );
    sensitive << ( tmp_1_mid1_fu_273_p3 );
    sensitive << ( tmp_6_fu_281_p3 );

    SC_METHOD(thread_tmp_8_cast5_fu_470_p1);
    sensitive << ( i_mid2_reg_906 );

    SC_METHOD(thread_tmp_8_fu_318_p3);
    sensitive << ( i_mid2_reg_906 );
    sensitive << ( tmp_3_cast_mid2_v_v_s_reg_916 );

    SC_METHOD(thread_tmp_9_cast_fu_324_p1);
    sensitive << ( tmp_8_fu_318_p3 );

    SC_METHOD(thread_tmp_9_fu_504_p3);
    sensitive << ( i_mid2_reg_906 );
    sensitive << ( tmp_7_fu_494_p4 );

    SC_METHOD(thread_tmp_fu_811_p3);
    sensitive << ( tmp_43_i_i_i_fu_799_p2 );

    SC_METHOD(thread_tmp_i_i_i_cast_fu_784_p1);
    sensitive << ( tmp_i_i_i_fu_775_p4 );

    SC_METHOD(thread_tmp_i_i_i_fu_775_p4);
    sensitive << ( loc_V_1_reg_1079 );

    SC_METHOD(thread_tmp_i_i_i_i_cast4_fu_741_p1);
    sensitive << ( loc_V_reg_1073 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( exitcond_flatten_fu_233_p2 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_block_pp0_stage7_flag00011011 );
    sensitive << ( ap_block_pp0_stage1_flag00011011 );
    sensitive << ( ap_block_pp0_stage2_flag00011011 );
    sensitive << ( ap_block_pp0_stage3_flag00011011 );
    sensitive << ( ap_block_pp0_stage4_flag00011011 );
    sensitive << ( ap_block_pp0_stage5_flag00011011 );
    sensitive << ( ap_block_pp0_stage6_flag00011011 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const10);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const9);

    SC_THREAD(thread_ap_var_for_const8);

    SC_THREAD(thread_ap_var_for_const11);

    ap_CS_fsm = "0000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_reg_ioackin_INPUT_BUNDLE_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_OUTPUT_BUNDLE_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_OUTPUT_BUNDLE_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sobel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_AWVALID, "(port)m_axi_INPUT_BUNDLE_AWVALID");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_AWREADY, "(port)m_axi_INPUT_BUNDLE_AWREADY");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_AWADDR, "(port)m_axi_INPUT_BUNDLE_AWADDR");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_AWID, "(port)m_axi_INPUT_BUNDLE_AWID");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_AWLEN, "(port)m_axi_INPUT_BUNDLE_AWLEN");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_AWSIZE, "(port)m_axi_INPUT_BUNDLE_AWSIZE");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_AWBURST, "(port)m_axi_INPUT_BUNDLE_AWBURST");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_AWLOCK, "(port)m_axi_INPUT_BUNDLE_AWLOCK");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_AWCACHE, "(port)m_axi_INPUT_BUNDLE_AWCACHE");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_AWPROT, "(port)m_axi_INPUT_BUNDLE_AWPROT");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_AWQOS, "(port)m_axi_INPUT_BUNDLE_AWQOS");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_AWREGION, "(port)m_axi_INPUT_BUNDLE_AWREGION");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_AWUSER, "(port)m_axi_INPUT_BUNDLE_AWUSER");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_WVALID, "(port)m_axi_INPUT_BUNDLE_WVALID");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_WREADY, "(port)m_axi_INPUT_BUNDLE_WREADY");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_WDATA, "(port)m_axi_INPUT_BUNDLE_WDATA");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_WSTRB, "(port)m_axi_INPUT_BUNDLE_WSTRB");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_WLAST, "(port)m_axi_INPUT_BUNDLE_WLAST");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_WID, "(port)m_axi_INPUT_BUNDLE_WID");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_WUSER, "(port)m_axi_INPUT_BUNDLE_WUSER");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_ARVALID, "(port)m_axi_INPUT_BUNDLE_ARVALID");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_ARREADY, "(port)m_axi_INPUT_BUNDLE_ARREADY");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_ARADDR, "(port)m_axi_INPUT_BUNDLE_ARADDR");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_ARID, "(port)m_axi_INPUT_BUNDLE_ARID");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_ARLEN, "(port)m_axi_INPUT_BUNDLE_ARLEN");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_ARSIZE, "(port)m_axi_INPUT_BUNDLE_ARSIZE");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_ARBURST, "(port)m_axi_INPUT_BUNDLE_ARBURST");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_ARLOCK, "(port)m_axi_INPUT_BUNDLE_ARLOCK");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_ARCACHE, "(port)m_axi_INPUT_BUNDLE_ARCACHE");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_ARPROT, "(port)m_axi_INPUT_BUNDLE_ARPROT");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_ARQOS, "(port)m_axi_INPUT_BUNDLE_ARQOS");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_ARREGION, "(port)m_axi_INPUT_BUNDLE_ARREGION");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_ARUSER, "(port)m_axi_INPUT_BUNDLE_ARUSER");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_RVALID, "(port)m_axi_INPUT_BUNDLE_RVALID");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_RREADY, "(port)m_axi_INPUT_BUNDLE_RREADY");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_RDATA, "(port)m_axi_INPUT_BUNDLE_RDATA");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_RLAST, "(port)m_axi_INPUT_BUNDLE_RLAST");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_RID, "(port)m_axi_INPUT_BUNDLE_RID");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_RUSER, "(port)m_axi_INPUT_BUNDLE_RUSER");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_RRESP, "(port)m_axi_INPUT_BUNDLE_RRESP");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_BVALID, "(port)m_axi_INPUT_BUNDLE_BVALID");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_BREADY, "(port)m_axi_INPUT_BUNDLE_BREADY");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_BRESP, "(port)m_axi_INPUT_BUNDLE_BRESP");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_BID, "(port)m_axi_INPUT_BUNDLE_BID");
    sc_trace(mVcdFile, m_axi_INPUT_BUNDLE_BUSER, "(port)m_axi_INPUT_BUNDLE_BUSER");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_AWVALID, "(port)m_axi_OUTPUT_BUNDLE_AWVALID");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_AWREADY, "(port)m_axi_OUTPUT_BUNDLE_AWREADY");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_AWADDR, "(port)m_axi_OUTPUT_BUNDLE_AWADDR");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_AWID, "(port)m_axi_OUTPUT_BUNDLE_AWID");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_AWLEN, "(port)m_axi_OUTPUT_BUNDLE_AWLEN");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_AWSIZE, "(port)m_axi_OUTPUT_BUNDLE_AWSIZE");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_AWBURST, "(port)m_axi_OUTPUT_BUNDLE_AWBURST");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_AWLOCK, "(port)m_axi_OUTPUT_BUNDLE_AWLOCK");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_AWCACHE, "(port)m_axi_OUTPUT_BUNDLE_AWCACHE");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_AWPROT, "(port)m_axi_OUTPUT_BUNDLE_AWPROT");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_AWQOS, "(port)m_axi_OUTPUT_BUNDLE_AWQOS");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_AWREGION, "(port)m_axi_OUTPUT_BUNDLE_AWREGION");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_AWUSER, "(port)m_axi_OUTPUT_BUNDLE_AWUSER");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_WVALID, "(port)m_axi_OUTPUT_BUNDLE_WVALID");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_WREADY, "(port)m_axi_OUTPUT_BUNDLE_WREADY");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_WDATA, "(port)m_axi_OUTPUT_BUNDLE_WDATA");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_WSTRB, "(port)m_axi_OUTPUT_BUNDLE_WSTRB");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_WLAST, "(port)m_axi_OUTPUT_BUNDLE_WLAST");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_WID, "(port)m_axi_OUTPUT_BUNDLE_WID");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_WUSER, "(port)m_axi_OUTPUT_BUNDLE_WUSER");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_ARVALID, "(port)m_axi_OUTPUT_BUNDLE_ARVALID");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_ARREADY, "(port)m_axi_OUTPUT_BUNDLE_ARREADY");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_ARADDR, "(port)m_axi_OUTPUT_BUNDLE_ARADDR");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_ARID, "(port)m_axi_OUTPUT_BUNDLE_ARID");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_ARLEN, "(port)m_axi_OUTPUT_BUNDLE_ARLEN");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_ARSIZE, "(port)m_axi_OUTPUT_BUNDLE_ARSIZE");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_ARBURST, "(port)m_axi_OUTPUT_BUNDLE_ARBURST");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_ARLOCK, "(port)m_axi_OUTPUT_BUNDLE_ARLOCK");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_ARCACHE, "(port)m_axi_OUTPUT_BUNDLE_ARCACHE");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_ARPROT, "(port)m_axi_OUTPUT_BUNDLE_ARPROT");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_ARQOS, "(port)m_axi_OUTPUT_BUNDLE_ARQOS");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_ARREGION, "(port)m_axi_OUTPUT_BUNDLE_ARREGION");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_ARUSER, "(port)m_axi_OUTPUT_BUNDLE_ARUSER");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_RVALID, "(port)m_axi_OUTPUT_BUNDLE_RVALID");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_RREADY, "(port)m_axi_OUTPUT_BUNDLE_RREADY");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_RDATA, "(port)m_axi_OUTPUT_BUNDLE_RDATA");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_RLAST, "(port)m_axi_OUTPUT_BUNDLE_RLAST");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_RID, "(port)m_axi_OUTPUT_BUNDLE_RID");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_RUSER, "(port)m_axi_OUTPUT_BUNDLE_RUSER");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_RRESP, "(port)m_axi_OUTPUT_BUNDLE_RRESP");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_BVALID, "(port)m_axi_OUTPUT_BUNDLE_BVALID");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_BREADY, "(port)m_axi_OUTPUT_BUNDLE_BREADY");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_BRESP, "(port)m_axi_OUTPUT_BUNDLE_BRESP");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_BID, "(port)m_axi_OUTPUT_BUNDLE_BID");
    sc_trace(mVcdFile, m_axi_OUTPUT_BUNDLE_BUSER, "(port)m_axi_OUTPUT_BUNDLE_BUSER");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, input_r, "input_r");
    sc_trace(mVcdFile, output_r, "output_r");
    sc_trace(mVcdFile, INPUT_BUNDLE_blk_n_AR, "INPUT_BUNDLE_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_flag00000000, "ap_block_pp0_stage2_flag00000000");
    sc_trace(mVcdFile, exitcond_flatten_reg_896, "exitcond_flatten_reg_896");
    sc_trace(mVcdFile, INPUT_BUNDLE_blk_n_R, "INPUT_BUNDLE_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00000000, "ap_block_pp0_stage1_flag00000000");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_896, "ap_reg_pp0_iter1_exitcond_flatten_reg_896");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_pp0_stage3_flag00000000, "ap_block_pp0_stage3_flag00000000");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_pp0_stage4_flag00000000, "ap_block_pp0_stage4_flag00000000");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_block_pp0_stage5_flag00000000, "ap_block_pp0_stage5_flag00000000");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_block_pp0_stage6_flag00000000, "ap_block_pp0_stage6_flag00000000");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_block_pp0_stage7_flag00000000, "ap_block_pp0_stage7_flag00000000");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_blk_n_AW, "OUTPUT_BUNDLE_blk_n_AW");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, tmp_30_reg_1060, "tmp_30_reg_1060");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_tmp_30_reg_1060, "ap_reg_pp0_iter6_tmp_30_reg_1060");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_blk_n_W, "OUTPUT_BUNDLE_blk_n_W");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_exitcond_flatten_reg_896, "ap_reg_pp0_iter7_exitcond_flatten_reg_896");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_blk_n_B, "OUTPUT_BUNDLE_blk_n_B");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, tmp_32_reg_1064, "tmp_32_reg_1064");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_tmp_32_reg_1064, "ap_reg_pp0_iter8_tmp_32_reg_1064");
    sc_trace(mVcdFile, INPUT_BUNDLE_AWREADY, "INPUT_BUNDLE_AWREADY");
    sc_trace(mVcdFile, INPUT_BUNDLE_WREADY, "INPUT_BUNDLE_WREADY");
    sc_trace(mVcdFile, INPUT_BUNDLE_ARVALID, "INPUT_BUNDLE_ARVALID");
    sc_trace(mVcdFile, INPUT_BUNDLE_ARREADY, "INPUT_BUNDLE_ARREADY");
    sc_trace(mVcdFile, INPUT_BUNDLE_ARADDR, "INPUT_BUNDLE_ARADDR");
    sc_trace(mVcdFile, INPUT_BUNDLE_RVALID, "INPUT_BUNDLE_RVALID");
    sc_trace(mVcdFile, INPUT_BUNDLE_RREADY, "INPUT_BUNDLE_RREADY");
    sc_trace(mVcdFile, INPUT_BUNDLE_RDATA, "INPUT_BUNDLE_RDATA");
    sc_trace(mVcdFile, INPUT_BUNDLE_RLAST, "INPUT_BUNDLE_RLAST");
    sc_trace(mVcdFile, INPUT_BUNDLE_RID, "INPUT_BUNDLE_RID");
    sc_trace(mVcdFile, INPUT_BUNDLE_RUSER, "INPUT_BUNDLE_RUSER");
    sc_trace(mVcdFile, INPUT_BUNDLE_RRESP, "INPUT_BUNDLE_RRESP");
    sc_trace(mVcdFile, INPUT_BUNDLE_BVALID, "INPUT_BUNDLE_BVALID");
    sc_trace(mVcdFile, INPUT_BUNDLE_BRESP, "INPUT_BUNDLE_BRESP");
    sc_trace(mVcdFile, INPUT_BUNDLE_BID, "INPUT_BUNDLE_BID");
    sc_trace(mVcdFile, INPUT_BUNDLE_BUSER, "INPUT_BUNDLE_BUSER");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_AWVALID, "OUTPUT_BUNDLE_AWVALID");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_AWREADY, "OUTPUT_BUNDLE_AWREADY");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_WVALID, "OUTPUT_BUNDLE_WVALID");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_WREADY, "OUTPUT_BUNDLE_WREADY");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_ARREADY, "OUTPUT_BUNDLE_ARREADY");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_RVALID, "OUTPUT_BUNDLE_RVALID");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_RDATA, "OUTPUT_BUNDLE_RDATA");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_RLAST, "OUTPUT_BUNDLE_RLAST");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_RID, "OUTPUT_BUNDLE_RID");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_RUSER, "OUTPUT_BUNDLE_RUSER");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_RRESP, "OUTPUT_BUNDLE_RRESP");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_BVALID, "OUTPUT_BUNDLE_BVALID");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_BREADY, "OUTPUT_BUNDLE_BREADY");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_BRESP, "OUTPUT_BUNDLE_BRESP");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_BID, "OUTPUT_BUNDLE_BID");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_BUSER, "OUTPUT_BUNDLE_BUSER");
    sc_trace(mVcdFile, indvar_flatten_reg_187, "indvar_flatten_reg_187");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter1, "ap_block_state10_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_sig_ioackin_INPUT_BUNDLE_ARREADY, "ap_sig_ioackin_INPUT_BUNDLE_ARREADY");
    sc_trace(mVcdFile, ap_block_state10_io, "ap_block_state10_io");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter2, "ap_block_state18_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage0_iter3, "ap_block_state26_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state34_pp0_stage0_iter4, "ap_block_state34_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state42_pp0_stage0_iter5, "ap_block_state42_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state50_pp0_stage0_iter6, "ap_block_state50_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state58_pp0_stage0_iter7, "ap_block_state58_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state66_pp0_stage0_iter8, "ap_block_state66_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, j_reg_199, "j_reg_199");
    sc_trace(mVcdFile, i_reg_210, "i_reg_210");
    sc_trace(mVcdFile, reg_229, "reg_229");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage1_iter1, "ap_block_state11_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state11_io, "ap_block_state11_io");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage1_iter2, "ap_block_state19_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage1_iter3, "ap_block_state27_pp0_stage1_iter3");
    sc_trace(mVcdFile, ap_block_state35_pp0_stage1_iter4, "ap_block_state35_pp0_stage1_iter4");
    sc_trace(mVcdFile, ap_block_state43_pp0_stage1_iter5, "ap_block_state43_pp0_stage1_iter5");
    sc_trace(mVcdFile, ap_block_state51_pp0_stage1_iter6, "ap_block_state51_pp0_stage1_iter6");
    sc_trace(mVcdFile, ap_block_state59_pp0_stage1_iter7, "ap_block_state59_pp0_stage1_iter7");
    sc_trace(mVcdFile, ap_block_state67_pp0_stage1_iter8, "ap_block_state67_pp0_stage1_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00011001, "ap_block_pp0_stage1_flag00011001");
    sc_trace(mVcdFile, output_read_reg_879, "output_read_reg_879");
    sc_trace(mVcdFile, input_read_reg_884, "input_read_reg_884");
    sc_trace(mVcdFile, exitcond_flatten_fu_233_p2, "exitcond_flatten_fu_233_p2");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_flatten_reg_896, "ap_reg_pp0_iter2_exitcond_flatten_reg_896");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_flatten_reg_896, "ap_reg_pp0_iter3_exitcond_flatten_reg_896");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_exitcond_flatten_reg_896, "ap_reg_pp0_iter4_exitcond_flatten_reg_896");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_exitcond_flatten_reg_896, "ap_reg_pp0_iter5_exitcond_flatten_reg_896");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_exitcond_flatten_reg_896, "ap_reg_pp0_iter6_exitcond_flatten_reg_896");
    sc_trace(mVcdFile, indvar_flatten_next_fu_239_p2, "indvar_flatten_next_fu_239_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_900, "indvar_flatten_next_reg_900");
    sc_trace(mVcdFile, i_mid2_fu_251_p3, "i_mid2_fu_251_p3");
    sc_trace(mVcdFile, i_mid2_reg_906, "i_mid2_reg_906");
    sc_trace(mVcdFile, tmp_3_cast_mid2_v_v_s_fu_265_p3, "tmp_3_cast_mid2_v_v_s_fu_265_p3");
    sc_trace(mVcdFile, tmp_3_cast_mid2_v_v_s_reg_916, "tmp_3_cast_mid2_v_v_s_reg_916");
    sc_trace(mVcdFile, OUTPUT_BUNDLE_addr_reg_924, "OUTPUT_BUNDLE_addr_reg_924");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_OUTPUT_BUNDLE_addr_reg_924, "ap_reg_pp0_iter1_OUTPUT_BUNDLE_addr_reg_924");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_OUTPUT_BUNDLE_addr_reg_924, "ap_reg_pp0_iter2_OUTPUT_BUNDLE_addr_reg_924");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_OUTPUT_BUNDLE_addr_reg_924, "ap_reg_pp0_iter3_OUTPUT_BUNDLE_addr_reg_924");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_OUTPUT_BUNDLE_addr_reg_924, "ap_reg_pp0_iter4_OUTPUT_BUNDLE_addr_reg_924");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_OUTPUT_BUNDLE_addr_reg_924, "ap_reg_pp0_iter5_OUTPUT_BUNDLE_addr_reg_924");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_OUTPUT_BUNDLE_addr_reg_924, "ap_reg_pp0_iter6_OUTPUT_BUNDLE_addr_reg_924");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_OUTPUT_BUNDLE_addr_reg_924, "ap_reg_pp0_iter7_OUTPUT_BUNDLE_addr_reg_924");
    sc_trace(mVcdFile, tmp_9_cast_fu_324_p1, "tmp_9_cast_fu_324_p1");
    sc_trace(mVcdFile, tmp_9_cast_reg_929, "tmp_9_cast_reg_929");
    sc_trace(mVcdFile, INPUT_BUNDLE_addr_reg_936, "INPUT_BUNDLE_addr_reg_936");
    sc_trace(mVcdFile, INPUT_BUNDLE_addr_1_reg_942, "INPUT_BUNDLE_addr_1_reg_942");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage2_iter1, "ap_block_state12_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage2_iter2, "ap_block_state20_pp0_stage2_iter2");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage2_iter3, "ap_block_state28_pp0_stage2_iter3");
    sc_trace(mVcdFile, ap_block_state36_pp0_stage2_iter4, "ap_block_state36_pp0_stage2_iter4");
    sc_trace(mVcdFile, ap_block_state44_pp0_stage2_iter5, "ap_block_state44_pp0_stage2_iter5");
    sc_trace(mVcdFile, ap_block_state52_pp0_stage2_iter6, "ap_block_state52_pp0_stage2_iter6");
    sc_trace(mVcdFile, ap_block_state60_pp0_stage2_iter7, "ap_block_state60_pp0_stage2_iter7");
    sc_trace(mVcdFile, ap_block_pp0_stage2_flag00011001, "ap_block_pp0_stage2_flag00011001");
    sc_trace(mVcdFile, INPUT_BUNDLE_addr_2_reg_948, "INPUT_BUNDLE_addr_2_reg_948");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage3_iter1, "ap_block_state13_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage3_iter2, "ap_block_state21_pp0_stage3_iter2");
    sc_trace(mVcdFile, ap_block_state29_pp0_stage3_iter3, "ap_block_state29_pp0_stage3_iter3");
    sc_trace(mVcdFile, ap_block_state37_pp0_stage3_iter4, "ap_block_state37_pp0_stage3_iter4");
    sc_trace(mVcdFile, ap_block_state45_pp0_stage3_iter5, "ap_block_state45_pp0_stage3_iter5");
    sc_trace(mVcdFile, ap_block_state53_pp0_stage3_iter6, "ap_block_state53_pp0_stage3_iter6");
    sc_trace(mVcdFile, ap_block_state61_pp0_stage3_iter7, "ap_block_state61_pp0_stage3_iter7");
    sc_trace(mVcdFile, ap_sig_ioackin_OUTPUT_BUNDLE_AWREADY, "ap_sig_ioackin_OUTPUT_BUNDLE_AWREADY");
    sc_trace(mVcdFile, ap_block_state61_io, "ap_block_state61_io");
    sc_trace(mVcdFile, ap_block_pp0_stage3_flag00011001, "ap_block_pp0_stage3_flag00011001");
    sc_trace(mVcdFile, INPUT_BUNDLE_addr_3_reg_954, "INPUT_BUNDLE_addr_3_reg_954");
    sc_trace(mVcdFile, INPUT_BUNDLE_addr_5_reg_960, "INPUT_BUNDLE_addr_5_reg_960");
    sc_trace(mVcdFile, INPUT_BUNDLE_addr_4_reg_966, "INPUT_BUNDLE_addr_4_reg_966");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage5_iter0, "ap_block_state7_pp0_stage5_iter0");
    sc_trace(mVcdFile, ap_block_state7_io, "ap_block_state7_io");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage5_iter1, "ap_block_state15_pp0_stage5_iter1");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage5_iter2, "ap_block_state23_pp0_stage5_iter2");
    sc_trace(mVcdFile, ap_block_state31_pp0_stage5_iter3, "ap_block_state31_pp0_stage5_iter3");
    sc_trace(mVcdFile, ap_block_state39_pp0_stage5_iter4, "ap_block_state39_pp0_stage5_iter4");
    sc_trace(mVcdFile, ap_block_state47_pp0_stage5_iter5, "ap_block_state47_pp0_stage5_iter5");
    sc_trace(mVcdFile, ap_block_state55_pp0_stage5_iter6, "ap_block_state55_pp0_stage5_iter6");
    sc_trace(mVcdFile, ap_block_state63_pp0_stage5_iter7, "ap_block_state63_pp0_stage5_iter7");
    sc_trace(mVcdFile, ap_block_pp0_stage5_flag00011001, "ap_block_pp0_stage5_flag00011001");
    sc_trace(mVcdFile, INPUT_BUNDLE_addr_6_reg_972, "INPUT_BUNDLE_addr_6_reg_972");
    sc_trace(mVcdFile, INPUT_BUNDLE_addr_7_reg_978, "INPUT_BUNDLE_addr_7_reg_978");
    sc_trace(mVcdFile, i_1_fu_558_p2, "i_1_fu_558_p2");
    sc_trace(mVcdFile, i_1_reg_984, "i_1_reg_984");
    sc_trace(mVcdFile, INPUT_BUNDLE_addr_1_s_reg_989, "INPUT_BUNDLE_addr_1_s_reg_989");
    sc_trace(mVcdFile, INPUT_BUNDLE_addr_2_s_reg_994, "INPUT_BUNDLE_addr_2_s_reg_994");
    sc_trace(mVcdFile, INPUT_BUNDLE_addr_3_s_reg_999, "INPUT_BUNDLE_addr_3_s_reg_999");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage4_iter0, "ap_block_state6_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_state6_io, "ap_block_state6_io");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage4_iter1, "ap_block_state14_pp0_stage4_iter1");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage4_iter2, "ap_block_state22_pp0_stage4_iter2");
    sc_trace(mVcdFile, ap_block_state30_pp0_stage4_iter3, "ap_block_state30_pp0_stage4_iter3");
    sc_trace(mVcdFile, ap_block_state38_pp0_stage4_iter4, "ap_block_state38_pp0_stage4_iter4");
    sc_trace(mVcdFile, ap_block_state46_pp0_stage4_iter5, "ap_block_state46_pp0_stage4_iter5");
    sc_trace(mVcdFile, ap_block_state54_pp0_stage4_iter6, "ap_block_state54_pp0_stage4_iter6");
    sc_trace(mVcdFile, ap_block_state62_pp0_stage4_iter7, "ap_block_state62_pp0_stage4_iter7");
    sc_trace(mVcdFile, ap_sig_ioackin_OUTPUT_BUNDLE_WREADY, "ap_sig_ioackin_OUTPUT_BUNDLE_WREADY");
    sc_trace(mVcdFile, ap_block_state62_io, "ap_block_state62_io");
    sc_trace(mVcdFile, ap_block_pp0_stage4_flag00011001, "ap_block_pp0_stage4_flag00011001");
    sc_trace(mVcdFile, INPUT_BUNDLE_addr_4_s_reg_1005, "INPUT_BUNDLE_addr_4_s_reg_1005");
    sc_trace(mVcdFile, INPUT_BUNDLE_addr_5_s_reg_1010, "INPUT_BUNDLE_addr_5_s_reg_1010");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage6_iter0, "ap_block_state8_pp0_stage6_iter0");
    sc_trace(mVcdFile, ap_block_state8_io, "ap_block_state8_io");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage6_iter1, "ap_block_state16_pp0_stage6_iter1");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage6_iter2, "ap_block_state24_pp0_stage6_iter2");
    sc_trace(mVcdFile, ap_block_state32_pp0_stage6_iter3, "ap_block_state32_pp0_stage6_iter3");
    sc_trace(mVcdFile, ap_block_state40_pp0_stage6_iter4, "ap_block_state40_pp0_stage6_iter4");
    sc_trace(mVcdFile, ap_block_state48_pp0_stage6_iter5, "ap_block_state48_pp0_stage6_iter5");
    sc_trace(mVcdFile, ap_block_state56_pp0_stage6_iter6, "ap_block_state56_pp0_stage6_iter6");
    sc_trace(mVcdFile, ap_block_state64_pp0_stage6_iter7, "ap_block_state64_pp0_stage6_iter7");
    sc_trace(mVcdFile, ap_block_pp0_stage6_flag00011001, "ap_block_pp0_stage6_flag00011001");
    sc_trace(mVcdFile, INPUT_BUNDLE_addr_6_s_reg_1015, "INPUT_BUNDLE_addr_6_s_reg_1015");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage7_iter0, "ap_block_state9_pp0_stage7_iter0");
    sc_trace(mVcdFile, ap_block_state9_io, "ap_block_state9_io");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage7_iter1, "ap_block_state17_pp0_stage7_iter1");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage7_iter2, "ap_block_state25_pp0_stage7_iter2");
    sc_trace(mVcdFile, ap_block_state33_pp0_stage7_iter3, "ap_block_state33_pp0_stage7_iter3");
    sc_trace(mVcdFile, ap_block_state41_pp0_stage7_iter4, "ap_block_state41_pp0_stage7_iter4");
    sc_trace(mVcdFile, ap_block_state49_pp0_stage7_iter5, "ap_block_state49_pp0_stage7_iter5");
    sc_trace(mVcdFile, ap_block_state57_pp0_stage7_iter6, "ap_block_state57_pp0_stage7_iter6");
    sc_trace(mVcdFile, ap_block_state65_pp0_stage7_iter7, "ap_block_state65_pp0_stage7_iter7");
    sc_trace(mVcdFile, ap_block_pp0_stage7_flag00011001, "ap_block_pp0_stage7_flag00011001");
    sc_trace(mVcdFile, sum1_fu_608_p2, "sum1_fu_608_p2");
    sc_trace(mVcdFile, sum1_reg_1020, "sum1_reg_1020");
    sc_trace(mVcdFile, tmp3_fu_614_p2, "tmp3_fu_614_p2");
    sc_trace(mVcdFile, tmp3_reg_1025, "tmp3_reg_1025");
    sc_trace(mVcdFile, tmp_16_fu_636_p2, "tmp_16_fu_636_p2");
    sc_trace(mVcdFile, tmp_16_reg_1030, "tmp_16_reg_1030");
    sc_trace(mVcdFile, convulution_horizont_fu_657_p2, "convulution_horizont_fu_657_p2");
    sc_trace(mVcdFile, convulution_horizont_reg_1035, "convulution_horizont_reg_1035");
    sc_trace(mVcdFile, convulution_vertical_fu_695_p2, "convulution_vertical_fu_695_p2");
    sc_trace(mVcdFile, convulution_vertical_reg_1040, "convulution_vertical_reg_1040");
    sc_trace(mVcdFile, tmp_21_fu_866_p2, "tmp_21_fu_866_p2");
    sc_trace(mVcdFile, tmp_21_reg_1045, "tmp_21_reg_1045");
    sc_trace(mVcdFile, grp_fu_872_p3, "grp_fu_872_p3");
    sc_trace(mVcdFile, p_reg_1050, "p_reg_1050");
    sc_trace(mVcdFile, tmp_30_fu_711_p2, "tmp_30_fu_711_p2");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_tmp_30_reg_1060, "ap_reg_pp0_iter3_tmp_30_reg_1060");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_tmp_30_reg_1060, "ap_reg_pp0_iter4_tmp_30_reg_1060");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_tmp_30_reg_1060, "ap_reg_pp0_iter5_tmp_30_reg_1060");
    sc_trace(mVcdFile, tmp_32_fu_717_p2, "tmp_32_fu_717_p2");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_tmp_32_reg_1064, "ap_reg_pp0_iter4_tmp_32_reg_1064");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_tmp_32_reg_1064, "ap_reg_pp0_iter5_tmp_32_reg_1064");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_tmp_32_reg_1064, "ap_reg_pp0_iter6_tmp_32_reg_1064");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_tmp_32_reg_1064, "ap_reg_pp0_iter7_tmp_32_reg_1064");
    sc_trace(mVcdFile, grp_fu_221_p1, "grp_fu_221_p1");
    sc_trace(mVcdFile, tmp_23_reg_1068, "tmp_23_reg_1068");
    sc_trace(mVcdFile, loc_V_reg_1073, "loc_V_reg_1073");
    sc_trace(mVcdFile, loc_V_1_fu_737_p1, "loc_V_1_fu_737_p1");
    sc_trace(mVcdFile, loc_V_1_reg_1079, "loc_V_1_reg_1079");
    sc_trace(mVcdFile, isNeg_fu_750_p3, "isNeg_fu_750_p3");
    sc_trace(mVcdFile, isNeg_reg_1084, "isNeg_reg_1084");
    sc_trace(mVcdFile, sh_assign_1_fu_767_p3, "sh_assign_1_fu_767_p3");
    sc_trace(mVcdFile, sh_assign_1_reg_1089, "sh_assign_1_reg_1089");
    sc_trace(mVcdFile, icmp_fu_850_p2, "icmp_fu_850_p2");
    sc_trace(mVcdFile, icmp_reg_1094, "icmp_reg_1094");
    sc_trace(mVcdFile, tmp_27_fu_856_p1, "tmp_27_fu_856_p1");
    sc_trace(mVcdFile, tmp_27_reg_1099, "tmp_27_reg_1099");
    sc_trace(mVcdFile, tmp_28_fu_860_p3, "tmp_28_fu_860_p3");
    sc_trace(mVcdFile, tmp_28_reg_1104, "tmp_28_reg_1104");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage7_flag00011011, "ap_block_pp0_stage7_flag00011011");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00011011, "ap_block_pp0_stage1_flag00011011");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, indvar_flatten_phi_fu_191_p4, "indvar_flatten_phi_fu_191_p4");
    sc_trace(mVcdFile, j_phi_fu_203_p4, "j_phi_fu_203_p4");
    sc_trace(mVcdFile, i_phi_fu_214_p4, "i_phi_fu_214_p4");
    sc_trace(mVcdFile, output4_sum1_fu_301_p2, "output4_sum1_fu_301_p2");
    sc_trace(mVcdFile, input2_sum_fu_338_p2, "input2_sum_fu_338_p2");
    sc_trace(mVcdFile, input2_sum5_fu_370_p2, "input2_sum5_fu_370_p2");
    sc_trace(mVcdFile, input2_sum6_fu_390_p2, "input2_sum6_fu_390_p2");
    sc_trace(mVcdFile, input2_sum7_fu_410_p2, "input2_sum7_fu_410_p2");
    sc_trace(mVcdFile, input2_sum9_fu_430_p2, "input2_sum9_fu_430_p2");
    sc_trace(mVcdFile, input2_sum8_fu_483_p2, "input2_sum8_fu_483_p2");
    sc_trace(mVcdFile, input2_sum1_fu_515_p2, "input2_sum1_fu_515_p2");
    sc_trace(mVcdFile, input2_sum2_fu_547_p2, "input2_sum2_fu_547_p2");
    sc_trace(mVcdFile, ap_reg_ioackin_INPUT_BUNDLE_ARREADY, "ap_reg_ioackin_INPUT_BUNDLE_ARREADY");
    sc_trace(mVcdFile, ap_block_pp0_stage2_flag00001001, "ap_block_pp0_stage2_flag00001001");
    sc_trace(mVcdFile, ap_block_pp0_stage3_flag00001001, "ap_block_pp0_stage3_flag00001001");
    sc_trace(mVcdFile, ap_block_pp0_stage4_flag00001001, "ap_block_pp0_stage4_flag00001001");
    sc_trace(mVcdFile, ap_block_pp0_stage5_flag00001001, "ap_block_pp0_stage5_flag00001001");
    sc_trace(mVcdFile, ap_block_pp0_stage6_flag00001001, "ap_block_pp0_stage6_flag00001001");
    sc_trace(mVcdFile, ap_block_pp0_stage7_flag00001001, "ap_block_pp0_stage7_flag00001001");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00001001, "ap_block_pp0_stage0_flag00001001");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00001001, "ap_block_pp0_stage1_flag00001001");
    sc_trace(mVcdFile, ap_reg_ioackin_OUTPUT_BUNDLE_AWREADY, "ap_reg_ioackin_OUTPUT_BUNDLE_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_OUTPUT_BUNDLE_WREADY, "ap_reg_ioackin_OUTPUT_BUNDLE_WREADY");
    sc_trace(mVcdFile, grp_fu_221_p0, "grp_fu_221_p0");
    sc_trace(mVcdFile, tmp_1_fu_245_p2, "tmp_1_fu_245_p2");
    sc_trace(mVcdFile, j_s_fu_259_p2, "j_s_fu_259_p2");
    sc_trace(mVcdFile, tmp_1_mid1_fu_273_p3, "tmp_1_mid1_fu_273_p3");
    sc_trace(mVcdFile, tmp_6_fu_281_p3, "tmp_6_fu_281_p3");
    sc_trace(mVcdFile, tmp_7_mid2_v_fu_289_p3, "tmp_7_mid2_v_fu_289_p3");
    sc_trace(mVcdFile, tmp_7_mid2_fu_297_p1, "tmp_7_mid2_fu_297_p1");
    sc_trace(mVcdFile, grp_fu_312_p1, "grp_fu_312_p1");
    sc_trace(mVcdFile, tmp_8_fu_318_p3, "tmp_8_fu_318_p3");
    sc_trace(mVcdFile, sum2_fu_328_p2, "sum2_fu_328_p2");
    sc_trace(mVcdFile, sum2_cast_fu_334_p1, "sum2_cast_fu_334_p1");
    sc_trace(mVcdFile, grp_fu_349_p1, "grp_fu_349_p1");
    sc_trace(mVcdFile, tmp1_fu_354_p2, "tmp1_fu_354_p2");
    sc_trace(mVcdFile, sum4_fu_359_p3, "sum4_fu_359_p3");
    sc_trace(mVcdFile, sum4_cast_fu_366_p1, "sum4_cast_fu_366_p1");
    sc_trace(mVcdFile, sum6_fu_381_p2, "sum6_fu_381_p2");
    sc_trace(mVcdFile, sum6_cast_fu_386_p1, "sum6_cast_fu_386_p1");
    sc_trace(mVcdFile, sum8_fu_401_p2, "sum8_fu_401_p2");
    sc_trace(mVcdFile, sum8_cast_fu_406_p1, "sum8_cast_fu_406_p1");
    sc_trace(mVcdFile, sum5_fu_421_p2, "sum5_fu_421_p2");
    sc_trace(mVcdFile, sum5_cast_fu_426_p1, "sum5_cast_fu_426_p1");
    sc_trace(mVcdFile, tmp_3_cast_mid2_v_v_fu_441_p3, "tmp_3_cast_mid2_v_v_fu_441_p3");
    sc_trace(mVcdFile, tmp_3_cast_mid2_v_fu_448_p2, "tmp_3_cast_mid2_v_fu_448_p2");
    sc_trace(mVcdFile, tmp_3_cast_mid2_fu_454_p1, "tmp_3_cast_mid2_fu_454_p1");
    sc_trace(mVcdFile, tmp_8_cast5_fu_470_p1, "tmp_8_cast5_fu_470_p1");
    sc_trace(mVcdFile, sum3_fu_473_p2, "sum3_fu_473_p2");
    sc_trace(mVcdFile, sum3_cast_fu_479_p1, "sum3_cast_fu_479_p1");
    sc_trace(mVcdFile, tmp_4_mid2_fu_458_p2, "tmp_4_mid2_fu_458_p2");
    sc_trace(mVcdFile, tmp_7_fu_494_p4, "tmp_7_fu_494_p4");
    sc_trace(mVcdFile, tmp_9_fu_504_p3, "tmp_9_fu_504_p3");
    sc_trace(mVcdFile, tmp_10_fu_511_p1, "tmp_10_fu_511_p1");
    sc_trace(mVcdFile, tmp_5_mid2_fu_464_p2, "tmp_5_mid2_fu_464_p2");
    sc_trace(mVcdFile, tmp_12_fu_526_p4, "tmp_12_fu_526_p4");
    sc_trace(mVcdFile, tmp_13_fu_536_p3, "tmp_13_fu_536_p3");
    sc_trace(mVcdFile, tmp_14_fu_543_p1, "tmp_14_fu_543_p1");
    sc_trace(mVcdFile, tmp_2_fu_567_p3, "tmp_2_fu_567_p3");
    sc_trace(mVcdFile, tmp_4_fu_584_p3, "tmp_4_fu_584_p3");
    sc_trace(mVcdFile, tmp_7_cast_fu_563_p1, "tmp_7_cast_fu_563_p1");
    sc_trace(mVcdFile, tmp_13_cast_fu_578_p1, "tmp_13_cast_fu_578_p1");
    sc_trace(mVcdFile, tmp2_fu_598_p2, "tmp2_fu_598_p2");
    sc_trace(mVcdFile, tmp2_cast_fu_604_p1, "tmp2_cast_fu_604_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_574_p1, "tmp_12_cast_fu_574_p1");
    sc_trace(mVcdFile, tmp_17_cast_fu_591_p1, "tmp_17_cast_fu_591_p1");
    sc_trace(mVcdFile, tmp_18_cast_fu_595_p1, "tmp_18_cast_fu_595_p1");
    sc_trace(mVcdFile, sum5_neg_fu_620_p2, "sum5_neg_fu_620_p2");
    sc_trace(mVcdFile, sum5_neg_cast_fu_626_p1, "sum5_neg_cast_fu_626_p1");
    sc_trace(mVcdFile, tmp_15_cast_fu_581_p1, "tmp_15_cast_fu_581_p1");
    sc_trace(mVcdFile, sum6_neg_fu_630_p2, "sum6_neg_fu_630_p2");
    sc_trace(mVcdFile, tmp_3_fu_642_p1, "tmp_3_fu_642_p1");
    sc_trace(mVcdFile, sum1_cast_fu_645_p1, "sum1_cast_fu_645_p1");
    sc_trace(mVcdFile, tmp3_cast_fu_654_p1, "tmp3_cast_fu_654_p1");
    sc_trace(mVcdFile, tmp_5_fu_648_p2, "tmp_5_fu_648_p2");
    sc_trace(mVcdFile, tmp_11_fu_663_p3, "tmp_11_fu_663_p3");
    sc_trace(mVcdFile, tmp_15_fu_674_p3, "tmp_15_fu_674_p3");
    sc_trace(mVcdFile, tmp_29_cast_fu_686_p1, "tmp_29_cast_fu_686_p1");
    sc_trace(mVcdFile, tmp_24_cast_fu_670_p1, "tmp_24_cast_fu_670_p1");
    sc_trace(mVcdFile, tmp_17_fu_689_p2, "tmp_17_fu_689_p2");
    sc_trace(mVcdFile, tmp_28_cast_fu_682_p1, "tmp_28_cast_fu_682_p1");
    sc_trace(mVcdFile, grp_fu_312_p2, "grp_fu_312_p2");
    sc_trace(mVcdFile, grp_fu_349_p2, "grp_fu_349_p2");
    sc_trace(mVcdFile, grp_fu_224_p2, "grp_fu_224_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_723_p1, "p_Val2_s_fu_723_p1");
    sc_trace(mVcdFile, tmp_i_i_i_i_cast4_fu_741_p1, "tmp_i_i_i_i_cast4_fu_741_p1");
    sc_trace(mVcdFile, sh_assign_fu_744_p2, "sh_assign_fu_744_p2");
    sc_trace(mVcdFile, tmp_41_i_i_i_fu_758_p2, "tmp_41_i_i_i_fu_758_p2");
    sc_trace(mVcdFile, tmp_41_i_i_i_cast_fu_763_p1, "tmp_41_i_i_i_cast_fu_763_p1");
    sc_trace(mVcdFile, tmp_i_i_i_fu_775_p4, "tmp_i_i_i_fu_775_p4");
    sc_trace(mVcdFile, sh_assign_1_cast_fu_788_p1, "sh_assign_1_cast_fu_788_p1");
    sc_trace(mVcdFile, tmp_42_i_i_i_cast_fu_795_p1, "tmp_42_i_i_i_cast_fu_795_p1");
    sc_trace(mVcdFile, tmp_i_i_i_cast_fu_784_p1, "tmp_i_i_i_cast_fu_784_p1");
    sc_trace(mVcdFile, tmp_42_i_i_i_fu_791_p1, "tmp_42_i_i_i_fu_791_p1");
    sc_trace(mVcdFile, tmp_43_i_i_i_fu_799_p2, "tmp_43_i_i_i_fu_799_p2");
    sc_trace(mVcdFile, tmp_fu_811_p3, "tmp_fu_811_p3");
    sc_trace(mVcdFile, tmp_44_i_i_i_fu_805_p2, "tmp_44_i_i_i_fu_805_p2");
    sc_trace(mVcdFile, tmp_24_cast1_fu_819_p1, "tmp_24_cast1_fu_819_p1");
    sc_trace(mVcdFile, tmp_24_fu_823_p4, "tmp_24_fu_823_p4");
    sc_trace(mVcdFile, tmp_25_fu_833_p3, "tmp_25_fu_833_p3");
    sc_trace(mVcdFile, tmp_26_fu_840_p4, "tmp_26_fu_840_p4");
    sc_trace(mVcdFile, tmp_21_fu_866_p0, "tmp_21_fu_866_p0");
    sc_trace(mVcdFile, tmp_20_fu_701_p1, "tmp_20_fu_701_p1");
    sc_trace(mVcdFile, tmp_21_fu_866_p1, "tmp_21_fu_866_p1");
    sc_trace(mVcdFile, grp_fu_872_p0, "grp_fu_872_p0");
    sc_trace(mVcdFile, tmp_18_fu_704_p1, "tmp_18_fu_704_p1");
    sc_trace(mVcdFile, grp_fu_872_p1, "grp_fu_872_p1");
    sc_trace(mVcdFile, grp_fu_221_ce, "grp_fu_221_ce");
    sc_trace(mVcdFile, grp_fu_224_ce, "grp_fu_224_ce");
    sc_trace(mVcdFile, grp_fu_312_ce, "grp_fu_312_ce");
    sc_trace(mVcdFile, grp_fu_349_ce, "grp_fu_349_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state68, "ap_CS_fsm_state68");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage2_flag00011011, "ap_block_pp0_stage2_flag00011011");
    sc_trace(mVcdFile, ap_block_pp0_stage3_flag00011011, "ap_block_pp0_stage3_flag00011011");
    sc_trace(mVcdFile, ap_block_pp0_stage4_flag00011011, "ap_block_pp0_stage4_flag00011011");
    sc_trace(mVcdFile, ap_block_pp0_stage5_flag00011011, "ap_block_pp0_stage5_flag00011011");
    sc_trace(mVcdFile, ap_block_pp0_stage6_flag00011011, "ap_block_pp0_stage6_flag00011011");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_853, "ap_condition_853");
    sc_trace(mVcdFile, ap_condition_867, "ap_condition_867");
    sc_trace(mVcdFile, ap_condition_879, "ap_condition_879");
    sc_trace(mVcdFile, ap_condition_891, "ap_condition_891");
    sc_trace(mVcdFile, ap_condition_901, "ap_condition_901");
    sc_trace(mVcdFile, ap_condition_913, "ap_condition_913");
    sc_trace(mVcdFile, ap_condition_925, "ap_condition_925");
    sc_trace(mVcdFile, ap_condition_936, "ap_condition_936");
    sc_trace(mVcdFile, ap_condition_1547, "ap_condition_1547");
    sc_trace(mVcdFile, ap_condition_1551, "ap_condition_1551");
#endif

    }
    mHdltvinHandle.open("sobel.hdltvin.dat");
    mHdltvoutHandle.open("sobel.hdltvout.dat");
}

sobel::~sobel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete sobel_AXILiteS_s_axi_U;
    delete sobel_INPUT_BUNDLE_m_axi_U;
    delete sobel_OUTPUT_BUNDLE_m_axi_U;
    delete sobel_uitodp_32nsbkb_U0;
    delete sobel_dsqrt_64ns_cud_U1;
    delete sobel_urem_20ns_1dEe_U2;
    delete sobel_urem_20ns_1dEe_U3;
    delete sobel_mul_mul_11seOg_U4;
    delete sobel_mac_muladd_fYi_U5;
}

void sobel::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void sobel::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void sobel::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_0;
}

void sobel::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void sobel::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_1;
}

void sobel::thread_ap_var_for_const10() {
    ap_var_for_const10 = ap_const_lv1_1;
}

void sobel::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void sobel::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void sobel::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void sobel::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv32_3FE;
}

void sobel::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv8_0;
}

void sobel::thread_ap_var_for_const11() {
    ap_var_for_const11 = ap_const_lv64_0;
}

void sobel::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011011.read(), ap_const_boolean_0))) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011011.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011011.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011011.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011011.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011011.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011011.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011011.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter8 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_INPUT_BUNDLE_ARREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
              esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
              esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
              esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00011001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
              esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00011001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
              esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00011001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
              esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_INPUT_BUNDLE_ARREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                     esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, INPUT_BUNDLE_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00001001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                     esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, INPUT_BUNDLE_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00001001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                     esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, INPUT_BUNDLE_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00001001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                     esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, INPUT_BUNDLE_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00001001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                     esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, INPUT_BUNDLE_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00001001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                     esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, INPUT_BUNDLE_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00001001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, INPUT_BUNDLE_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, INPUT_BUNDLE_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00001001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_INPUT_BUNDLE_ARREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_OUTPUT_BUNDLE_AWREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_1547.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00011001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_OUTPUT_BUNDLE_AWREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00001001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, OUTPUT_BUNDLE_AWREADY.read()))) {
                ap_reg_ioackin_OUTPUT_BUNDLE_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_OUTPUT_BUNDLE_WREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_1551.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00011001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_OUTPUT_BUNDLE_WREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00001001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, OUTPUT_BUNDLE_WREADY.read()))) {
                ap_reg_ioackin_OUTPUT_BUNDLE_WREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        i_reg_210 = i_1_reg_984.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_210 = ap_const_lv10_1;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        indvar_flatten_reg_187 = indvar_flatten_next_reg_900.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_187 = ap_const_lv20_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        j_reg_199 = tmp_3_cast_mid2_v_v_s_reg_916.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_reg_199 = ap_const_lv10_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0))) {
        INPUT_BUNDLE_addr_1_reg_942 = input2_sum5_fu_370_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0))) {
        INPUT_BUNDLE_addr_1_s_reg_989 = INPUT_BUNDLE_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00011001.read(), ap_const_boolean_0))) {
        INPUT_BUNDLE_addr_2_reg_948 = input2_sum6_fu_390_p2.read();
        INPUT_BUNDLE_addr_3_reg_954 = input2_sum7_fu_410_p2.read();
        INPUT_BUNDLE_addr_5_reg_960 = input2_sum9_fu_430_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00011001.read(), ap_const_boolean_0))) {
        INPUT_BUNDLE_addr_2_s_reg_994 = INPUT_BUNDLE_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00011001.read(), ap_const_boolean_0))) {
        INPUT_BUNDLE_addr_3_s_reg_999 = INPUT_BUNDLE_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0))) {
        INPUT_BUNDLE_addr_4_reg_966 = input2_sum8_fu_483_p2.read();
        INPUT_BUNDLE_addr_6_reg_972 = input2_sum1_fu_515_p2.read();
        INPUT_BUNDLE_addr_7_reg_978 = input2_sum2_fu_547_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0))) {
        INPUT_BUNDLE_addr_4_s_reg_1005 = INPUT_BUNDLE_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00011001.read(), ap_const_boolean_0))) {
        INPUT_BUNDLE_addr_5_s_reg_1010 = INPUT_BUNDLE_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011001.read(), ap_const_boolean_0))) {
        INPUT_BUNDLE_addr_6_s_reg_1015 = INPUT_BUNDLE_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0))) {
        INPUT_BUNDLE_addr_reg_936 = input2_sum_fu_338_p2.read();
        tmp_9_cast_reg_929 = tmp_9_cast_fu_324_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_233_p2.read()))) {
        OUTPUT_BUNDLE_addr_reg_924 = output4_sum1_fu_301_p2.read();
        i_mid2_reg_906 = i_mid2_fu_251_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_OUTPUT_BUNDLE_addr_reg_924 = OUTPUT_BUNDLE_addr_reg_924.read();
        ap_reg_pp0_iter1_exitcond_flatten_reg_896 = exitcond_flatten_reg_896.read();
        ap_reg_pp0_iter2_OUTPUT_BUNDLE_addr_reg_924 = ap_reg_pp0_iter1_OUTPUT_BUNDLE_addr_reg_924.read();
        ap_reg_pp0_iter2_exitcond_flatten_reg_896 = ap_reg_pp0_iter1_exitcond_flatten_reg_896.read();
        ap_reg_pp0_iter3_OUTPUT_BUNDLE_addr_reg_924 = ap_reg_pp0_iter2_OUTPUT_BUNDLE_addr_reg_924.read();
        ap_reg_pp0_iter3_exitcond_flatten_reg_896 = ap_reg_pp0_iter2_exitcond_flatten_reg_896.read();
        ap_reg_pp0_iter4_OUTPUT_BUNDLE_addr_reg_924 = ap_reg_pp0_iter3_OUTPUT_BUNDLE_addr_reg_924.read();
        ap_reg_pp0_iter4_exitcond_flatten_reg_896 = ap_reg_pp0_iter3_exitcond_flatten_reg_896.read();
        ap_reg_pp0_iter4_tmp_32_reg_1064 = tmp_32_reg_1064.read();
        ap_reg_pp0_iter5_OUTPUT_BUNDLE_addr_reg_924 = ap_reg_pp0_iter4_OUTPUT_BUNDLE_addr_reg_924.read();
        ap_reg_pp0_iter5_exitcond_flatten_reg_896 = ap_reg_pp0_iter4_exitcond_flatten_reg_896.read();
        ap_reg_pp0_iter5_tmp_32_reg_1064 = ap_reg_pp0_iter4_tmp_32_reg_1064.read();
        ap_reg_pp0_iter6_OUTPUT_BUNDLE_addr_reg_924 = ap_reg_pp0_iter5_OUTPUT_BUNDLE_addr_reg_924.read();
        ap_reg_pp0_iter6_exitcond_flatten_reg_896 = ap_reg_pp0_iter5_exitcond_flatten_reg_896.read();
        ap_reg_pp0_iter6_tmp_32_reg_1064 = ap_reg_pp0_iter5_tmp_32_reg_1064.read();
        ap_reg_pp0_iter7_OUTPUT_BUNDLE_addr_reg_924 = ap_reg_pp0_iter6_OUTPUT_BUNDLE_addr_reg_924.read();
        ap_reg_pp0_iter7_exitcond_flatten_reg_896 = ap_reg_pp0_iter6_exitcond_flatten_reg_896.read();
        ap_reg_pp0_iter7_tmp_32_reg_1064 = ap_reg_pp0_iter6_tmp_32_reg_1064.read();
        ap_reg_pp0_iter8_tmp_32_reg_1064 = ap_reg_pp0_iter7_tmp_32_reg_1064.read();
        exitcond_flatten_reg_896 = exitcond_flatten_fu_233_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter3_tmp_30_reg_1060 = tmp_30_reg_1060.read();
        ap_reg_pp0_iter4_tmp_30_reg_1060 = ap_reg_pp0_iter3_tmp_30_reg_1060.read();
        ap_reg_pp0_iter5_tmp_30_reg_1060 = ap_reg_pp0_iter4_tmp_30_reg_1060.read();
        ap_reg_pp0_iter6_tmp_30_reg_1060 = ap_reg_pp0_iter5_tmp_30_reg_1060.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_896.read()))) {
        convulution_horizont_reg_1035 = convulution_horizont_fu_657_p2.read();
        convulution_vertical_reg_1040 = convulution_vertical_fu_695_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0))) {
        i_1_reg_984 = i_1_fu_558_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter7_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0))) {
        icmp_reg_1094 = icmp_fu_850_p2.read();
        tmp_27_reg_1099 = tmp_27_fu_856_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        indvar_flatten_next_reg_900 = indvar_flatten_next_fu_239_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        input_read_reg_884 = input_r.read();
        output_read_reg_879 = output_r.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter7_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0))) {
        isNeg_reg_1084 = sh_assign_fu_744_p2.read().range(11, 11);
        sh_assign_1_reg_1089 = sh_assign_1_fu_767_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter6_exitcond_flatten_reg_896.read()))) {
        loc_V_1_reg_1079 = loc_V_1_fu_737_p1.read();
        loc_V_reg_1073 = p_Val2_s_fu_723_p1.read().range(62, 52);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_896.read()))) {
        p_reg_1050 = grp_fu_872_p3.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)))) {
        reg_229 = INPUT_BUNDLE_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        sum1_reg_1020 = sum1_fu_608_p2.read();
        tmp3_reg_1025 = tmp3_fu_614_p2.read();
        tmp_16_reg_1030 = tmp_16_fu_636_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_896.read()))) {
        tmp_21_reg_1045 = tmp_21_fu_866_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_896.read()))) {
        tmp_23_reg_1068 = grp_fu_221_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter7_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00011001.read(), ap_const_boolean_0))) {
        tmp_28_reg_1104 = tmp_28_fu_860_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_896.read()))) {
        tmp_30_reg_1060 = tmp_30_fu_711_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_896.read()))) {
        tmp_32_reg_1064 = tmp_32_fu_717_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_233_p2.read()))) {
        tmp_3_cast_mid2_v_v_s_reg_916 = tmp_3_cast_mid2_v_v_s_fu_265_p3.read();
    }
}

void sobel::thread_INPUT_BUNDLE_ARADDR() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_BUNDLE_ARREADY.read())) {
        if (esl_seteq<1,1,1>(ap_condition_936.read(), ap_const_boolean_1)) {
            INPUT_BUNDLE_ARADDR = INPUT_BUNDLE_addr_7_reg_978.read();
        } else if (esl_seteq<1,1,1>(ap_condition_925.read(), ap_const_boolean_1)) {
            INPUT_BUNDLE_ARADDR = INPUT_BUNDLE_addr_6_reg_972.read();
        } else if (esl_seteq<1,1,1>(ap_condition_913.read(), ap_const_boolean_1)) {
            INPUT_BUNDLE_ARADDR = INPUT_BUNDLE_addr_5_reg_960.read();
        } else if (esl_seteq<1,1,1>(ap_condition_901.read(), ap_const_boolean_1)) {
            INPUT_BUNDLE_ARADDR = INPUT_BUNDLE_addr_4_reg_966.read();
        } else if (esl_seteq<1,1,1>(ap_condition_891.read(), ap_const_boolean_1)) {
            INPUT_BUNDLE_ARADDR = INPUT_BUNDLE_addr_3_reg_954.read();
        } else if (esl_seteq<1,1,1>(ap_condition_879.read(), ap_const_boolean_1)) {
            INPUT_BUNDLE_ARADDR = INPUT_BUNDLE_addr_2_reg_948.read();
        } else if (esl_seteq<1,1,1>(ap_condition_867.read(), ap_const_boolean_1)) {
            INPUT_BUNDLE_ARADDR = INPUT_BUNDLE_addr_1_reg_942.read();
        } else if (esl_seteq<1,1,1>(ap_condition_853.read(), ap_const_boolean_1)) {
            INPUT_BUNDLE_ARADDR = INPUT_BUNDLE_addr_reg_936.read();
        } else {
            INPUT_BUNDLE_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        INPUT_BUNDLE_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void sobel::thread_INPUT_BUNDLE_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00001001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_BUNDLE_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_BUNDLE_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00001001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_BUNDLE_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00001001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_BUNDLE_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00001001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_BUNDLE_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00001001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_BUNDLE_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00001001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_BUNDLE_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_BUNDLE_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00001001.read(), ap_const_boolean_0)))) {
        INPUT_BUNDLE_ARVALID = ap_const_logic_1;
    } else {
        INPUT_BUNDLE_ARVALID = ap_const_logic_0;
    }
}

void sobel::thread_INPUT_BUNDLE_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011001.read(), ap_const_boolean_0)))) {
        INPUT_BUNDLE_RREADY = ap_const_logic_1;
    } else {
        INPUT_BUNDLE_RREADY = ap_const_logic_0;
    }
}

void sobel::thread_INPUT_BUNDLE_blk_n_AR() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00000000.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00000000.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00000000.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00000000.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00000000.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0)))) {
        INPUT_BUNDLE_blk_n_AR = m_axi_INPUT_BUNDLE_ARREADY.read();
    } else {
        INPUT_BUNDLE_blk_n_AR = ap_const_logic_1;
    }
}

void sobel::thread_INPUT_BUNDLE_blk_n_R() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00000000.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00000000.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00000000.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00000000.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00000000.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())))) {
        INPUT_BUNDLE_blk_n_R = m_axi_INPUT_BUNDLE_RVALID.read();
    } else {
        INPUT_BUNDLE_blk_n_R = ap_const_logic_1;
    }
}

void sobel::thread_OUTPUT_BUNDLE_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter6_tmp_30_reg_1060.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00001001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUTPUT_BUNDLE_AWREADY.read()))) {
        OUTPUT_BUNDLE_AWVALID = ap_const_logic_1;
    } else {
        OUTPUT_BUNDLE_AWVALID = ap_const_logic_0;
    }
}

void sobel::thread_OUTPUT_BUNDLE_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter8_tmp_32_reg_1064.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0))) {
        OUTPUT_BUNDLE_BREADY = ap_const_logic_1;
    } else {
        OUTPUT_BUNDLE_BREADY = ap_const_logic_0;
    }
}

void sobel::thread_OUTPUT_BUNDLE_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter7_exitcond_flatten_reg_896.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00001001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUTPUT_BUNDLE_WREADY.read()))) {
        OUTPUT_BUNDLE_WVALID = ap_const_logic_1;
    } else {
        OUTPUT_BUNDLE_WVALID = ap_const_logic_0;
    }
}

void sobel::thread_OUTPUT_BUNDLE_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter6_tmp_30_reg_1060.read(), ap_const_lv1_1))) {
        OUTPUT_BUNDLE_blk_n_AW = m_axi_OUTPUT_BUNDLE_AWREADY.read();
    } else {
        OUTPUT_BUNDLE_blk_n_AW = ap_const_logic_1;
    }
}

void sobel::thread_OUTPUT_BUNDLE_blk_n_B() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter8_tmp_32_reg_1064.read()))) {
        OUTPUT_BUNDLE_blk_n_B = m_axi_OUTPUT_BUNDLE_BVALID.read();
    } else {
        OUTPUT_BUNDLE_blk_n_B = ap_const_logic_1;
    }
}

void sobel::thread_OUTPUT_BUNDLE_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter7_exitcond_flatten_reg_896.read()))) {
        OUTPUT_BUNDLE_blk_n_W = m_axi_OUTPUT_BUNDLE_WREADY.read();
    } else {
        OUTPUT_BUNDLE_blk_n_W = ap_const_logic_1;
    }
}

void sobel::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void sobel::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void sobel::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void sobel::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void sobel::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[5];
}

void sobel::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read()[6];
}

void sobel::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read()[7];
}

void sobel::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read()[8];
}

void sobel::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sobel::thread_ap_CS_fsm_state68() {
    ap_CS_fsm_state68 = ap_CS_fsm.read()[9];
}

void sobel::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_pp0_stage0_flag00001001() {
    ap_block_pp0_stage0_flag00001001 = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read()));
}

void sobel::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state10_io.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())));
}

void sobel::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state10_io.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())));
}

void sobel::thread_ap_block_pp0_stage1_flag00000000() {
    ap_block_pp0_stage1_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_pp0_stage1_flag00001001() {
    ap_block_pp0_stage1_flag00001001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter8_tmp_32_reg_1064.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, OUTPUT_BUNDLE_BVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())));
}

void sobel::thread_ap_block_pp0_stage1_flag00011001() {
    ap_block_pp0_stage1_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state11_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter8_tmp_32_reg_1064.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, OUTPUT_BUNDLE_BVALID.read())));
}

void sobel::thread_ap_block_pp0_stage1_flag00011011() {
    ap_block_pp0_stage1_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state11_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter8_tmp_32_reg_1064.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, OUTPUT_BUNDLE_BVALID.read())));
}

void sobel::thread_ap_block_pp0_stage2_flag00000000() {
    ap_block_pp0_stage2_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_pp0_stage2_flag00001001() {
    ap_block_pp0_stage2_flag00001001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read()));
}

void sobel::thread_ap_block_pp0_stage2_flag00011001() {
    ap_block_pp0_stage2_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())));
}

void sobel::thread_ap_block_pp0_stage2_flag00011011() {
    ap_block_pp0_stage2_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())));
}

void sobel::thread_ap_block_pp0_stage3_flag00000000() {
    ap_block_pp0_stage3_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_pp0_stage3_flag00001001() {
    ap_block_pp0_stage3_flag00001001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read()));
}

void sobel::thread_ap_block_pp0_stage3_flag00011001() {
    ap_block_pp0_stage3_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state61_io.read())));
}

void sobel::thread_ap_block_pp0_stage3_flag00011011() {
    ap_block_pp0_stage3_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state61_io.read())));
}

void sobel::thread_ap_block_pp0_stage4_flag00000000() {
    ap_block_pp0_stage4_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_pp0_stage4_flag00001001() {
    ap_block_pp0_stage4_flag00001001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read()));
}

void sobel::thread_ap_block_pp0_stage4_flag00011001() {
    ap_block_pp0_stage4_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state62_io.read())));
}

void sobel::thread_ap_block_pp0_stage4_flag00011011() {
    ap_block_pp0_stage4_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state62_io.read())));
}

void sobel::thread_ap_block_pp0_stage5_flag00000000() {
    ap_block_pp0_stage5_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_pp0_stage5_flag00001001() {
    ap_block_pp0_stage5_flag00001001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read()));
}

void sobel::thread_ap_block_pp0_stage5_flag00011001() {
    ap_block_pp0_stage5_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state7_io.read())));
}

void sobel::thread_ap_block_pp0_stage5_flag00011011() {
    ap_block_pp0_stage5_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state7_io.read())));
}

void sobel::thread_ap_block_pp0_stage6_flag00000000() {
    ap_block_pp0_stage6_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_pp0_stage6_flag00001001() {
    ap_block_pp0_stage6_flag00001001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read()));
}

void sobel::thread_ap_block_pp0_stage6_flag00011001() {
    ap_block_pp0_stage6_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state8_io.read())));
}

void sobel::thread_ap_block_pp0_stage6_flag00011011() {
    ap_block_pp0_stage6_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state8_io.read())));
}

void sobel::thread_ap_block_pp0_stage7_flag00000000() {
    ap_block_pp0_stage7_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_pp0_stage7_flag00001001() {
    ap_block_pp0_stage7_flag00001001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read()));
}

void sobel::thread_ap_block_pp0_stage7_flag00011001() {
    ap_block_pp0_stage7_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state9_io.read())));
}

void sobel::thread_ap_block_pp0_stage7_flag00011011() {
    ap_block_pp0_stage7_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state9_io.read())));
}

void sobel::thread_ap_block_state10_io() {
    ap_block_state10_io = (esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_INPUT_BUNDLE_ARREADY.read()));
}

void sobel::thread_ap_block_state10_pp0_stage0_iter1() {
    ap_block_state10_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state11_io() {
    ap_block_state11_io = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_INPUT_BUNDLE_ARREADY.read()));
}

void sobel::thread_ap_block_state11_pp0_stage1_iter1() {
    ap_block_state11_pp0_stage1_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read()));
}

void sobel::thread_ap_block_state12_pp0_stage2_iter1() {
    ap_block_state12_pp0_stage2_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read()));
}

void sobel::thread_ap_block_state13_pp0_stage3_iter1() {
    ap_block_state13_pp0_stage3_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read()));
}

void sobel::thread_ap_block_state14_pp0_stage4_iter1() {
    ap_block_state14_pp0_stage4_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read()));
}

void sobel::thread_ap_block_state15_pp0_stage5_iter1() {
    ap_block_state15_pp0_stage5_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read()));
}

void sobel::thread_ap_block_state16_pp0_stage6_iter1() {
    ap_block_state16_pp0_stage6_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read()));
}

void sobel::thread_ap_block_state17_pp0_stage7_iter1() {
    ap_block_state17_pp0_stage7_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read()));
}

void sobel::thread_ap_block_state18_pp0_stage0_iter2() {
    ap_block_state18_pp0_stage0_iter2 = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_BUNDLE_RVALID.read()));
}

void sobel::thread_ap_block_state19_pp0_stage1_iter2() {
    ap_block_state19_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state20_pp0_stage2_iter2() {
    ap_block_state20_pp0_stage2_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state21_pp0_stage3_iter2() {
    ap_block_state21_pp0_stage3_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state22_pp0_stage4_iter2() {
    ap_block_state22_pp0_stage4_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state23_pp0_stage5_iter2() {
    ap_block_state23_pp0_stage5_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state24_pp0_stage6_iter2() {
    ap_block_state24_pp0_stage6_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state25_pp0_stage7_iter2() {
    ap_block_state25_pp0_stage7_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state26_pp0_stage0_iter3() {
    ap_block_state26_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state27_pp0_stage1_iter3() {
    ap_block_state27_pp0_stage1_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state28_pp0_stage2_iter3() {
    ap_block_state28_pp0_stage2_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state29_pp0_stage3_iter3() {
    ap_block_state29_pp0_stage3_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state30_pp0_stage4_iter3() {
    ap_block_state30_pp0_stage4_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state31_pp0_stage5_iter3() {
    ap_block_state31_pp0_stage5_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state32_pp0_stage6_iter3() {
    ap_block_state32_pp0_stage6_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state33_pp0_stage7_iter3() {
    ap_block_state33_pp0_stage7_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state34_pp0_stage0_iter4() {
    ap_block_state34_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state35_pp0_stage1_iter4() {
    ap_block_state35_pp0_stage1_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state36_pp0_stage2_iter4() {
    ap_block_state36_pp0_stage2_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state37_pp0_stage3_iter4() {
    ap_block_state37_pp0_stage3_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state38_pp0_stage4_iter4() {
    ap_block_state38_pp0_stage4_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state39_pp0_stage5_iter4() {
    ap_block_state39_pp0_stage5_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state40_pp0_stage6_iter4() {
    ap_block_state40_pp0_stage6_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state41_pp0_stage7_iter4() {
    ap_block_state41_pp0_stage7_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state42_pp0_stage0_iter5() {
    ap_block_state42_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state43_pp0_stage1_iter5() {
    ap_block_state43_pp0_stage1_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state44_pp0_stage2_iter5() {
    ap_block_state44_pp0_stage2_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state45_pp0_stage3_iter5() {
    ap_block_state45_pp0_stage3_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state46_pp0_stage4_iter5() {
    ap_block_state46_pp0_stage4_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state47_pp0_stage5_iter5() {
    ap_block_state47_pp0_stage5_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state48_pp0_stage6_iter5() {
    ap_block_state48_pp0_stage6_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state49_pp0_stage7_iter5() {
    ap_block_state49_pp0_stage7_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_INPUT_BUNDLE_ARREADY.read()));
}

void sobel::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state50_pp0_stage0_iter6() {
    ap_block_state50_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state51_pp0_stage1_iter6() {
    ap_block_state51_pp0_stage1_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state52_pp0_stage2_iter6() {
    ap_block_state52_pp0_stage2_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state53_pp0_stage3_iter6() {
    ap_block_state53_pp0_stage3_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state54_pp0_stage4_iter6() {
    ap_block_state54_pp0_stage4_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state55_pp0_stage5_iter6() {
    ap_block_state55_pp0_stage5_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state56_pp0_stage6_iter6() {
    ap_block_state56_pp0_stage6_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state57_pp0_stage7_iter6() {
    ap_block_state57_pp0_stage7_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state58_pp0_stage0_iter7() {
    ap_block_state58_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state59_pp0_stage1_iter7() {
    ap_block_state59_pp0_stage1_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_INPUT_BUNDLE_ARREADY.read()));
}

void sobel::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state60_pp0_stage2_iter7() {
    ap_block_state60_pp0_stage2_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state61_io() {
    ap_block_state61_io = (esl_seteq<1,1,1>(ap_reg_pp0_iter6_tmp_30_reg_1060.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_OUTPUT_BUNDLE_AWREADY.read()));
}

void sobel::thread_ap_block_state61_pp0_stage3_iter7() {
    ap_block_state61_pp0_stage3_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state62_io() {
    ap_block_state62_io = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter7_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_OUTPUT_BUNDLE_WREADY.read()));
}

void sobel::thread_ap_block_state62_pp0_stage4_iter7() {
    ap_block_state62_pp0_stage4_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state63_pp0_stage5_iter7() {
    ap_block_state63_pp0_stage5_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state64_pp0_stage6_iter7() {
    ap_block_state64_pp0_stage6_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state65_pp0_stage7_iter7() {
    ap_block_state65_pp0_stage7_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state66_pp0_stage0_iter8() {
    ap_block_state66_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state67_pp0_stage1_iter8() {
    ap_block_state67_pp0_stage1_iter8 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter8_tmp_32_reg_1064.read()) && esl_seteq<1,1,1>(ap_const_logic_0, OUTPUT_BUNDLE_BVALID.read()));
}

void sobel::thread_ap_block_state6_io() {
    ap_block_state6_io = (esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_INPUT_BUNDLE_ARREADY.read()));
}

void sobel::thread_ap_block_state6_pp0_stage4_iter0() {
    ap_block_state6_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state7_io() {
    ap_block_state7_io = (esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_INPUT_BUNDLE_ARREADY.read()));
}

void sobel::thread_ap_block_state7_pp0_stage5_iter0() {
    ap_block_state7_pp0_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state8_io() {
    ap_block_state8_io = (esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_INPUT_BUNDLE_ARREADY.read()));
}

void sobel::thread_ap_block_state8_pp0_stage6_iter0() {
    ap_block_state8_pp0_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_block_state9_io() {
    ap_block_state9_io = (esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_INPUT_BUNDLE_ARREADY.read()));
}

void sobel::thread_ap_block_state9_pp0_stage7_iter0() {
    ap_block_state9_pp0_stage7_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel::thread_ap_condition_1547() {
    ap_condition_1547 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && esl_seteq<1,1,1>(ap_reg_pp0_iter6_tmp_30_reg_1060.read(), ap_const_lv1_1));
}

void sobel::thread_ap_condition_1551() {
    ap_condition_1551 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter7_exitcond_flatten_reg_896.read()));
}

void sobel::thread_ap_condition_853() {
    ap_condition_853 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00001001.read(), ap_const_boolean_0));
}

void sobel::thread_ap_condition_867() {
    ap_condition_867 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00001001.read(), ap_const_boolean_0));
}

void sobel::thread_ap_condition_879() {
    ap_condition_879 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00001001.read(), ap_const_boolean_0));
}

void sobel::thread_ap_condition_891() {
    ap_condition_891 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00001001.read(), ap_const_boolean_0));
}

void sobel::thread_ap_condition_901() {
    ap_condition_901 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00001001.read(), ap_const_boolean_0));
}

void sobel::thread_ap_condition_913() {
    ap_condition_913 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00001001.read(), ap_const_boolean_0));
}

void sobel::thread_ap_condition_925() {
    ap_condition_925 = (esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0));
}

void sobel::thread_ap_condition_936() {
    ap_condition_936 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_896.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00001001.read(), ap_const_boolean_0));
}

void sobel::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_233_p2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void sobel::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sobel::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void sobel::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sobel::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void sobel::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sobel::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void sobel::thread_ap_sig_ioackin_INPUT_BUNDLE_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_BUNDLE_ARREADY.read())) {
        ap_sig_ioackin_INPUT_BUNDLE_ARREADY = INPUT_BUNDLE_ARREADY.read();
    } else {
        ap_sig_ioackin_INPUT_BUNDLE_ARREADY = ap_const_logic_1;
    }
}

void sobel::thread_ap_sig_ioackin_OUTPUT_BUNDLE_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUTPUT_BUNDLE_AWREADY.read())) {
        ap_sig_ioackin_OUTPUT_BUNDLE_AWREADY = OUTPUT_BUNDLE_AWREADY.read();
    } else {
        ap_sig_ioackin_OUTPUT_BUNDLE_AWREADY = ap_const_logic_1;
    }
}

void sobel::thread_ap_sig_ioackin_OUTPUT_BUNDLE_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUTPUT_BUNDLE_WREADY.read())) {
        ap_sig_ioackin_OUTPUT_BUNDLE_WREADY = OUTPUT_BUNDLE_WREADY.read();
    } else {
        ap_sig_ioackin_OUTPUT_BUNDLE_WREADY = ap_const_logic_1;
    }
}

void sobel::thread_convulution_horizont_fu_657_p2() {
    convulution_horizont_fu_657_p2 = (!tmp3_cast_fu_654_p1.read().is_01() || !tmp_5_fu_648_p2.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp3_cast_fu_654_p1.read()) + sc_biguint<11>(tmp_5_fu_648_p2.read()));
}

void sobel::thread_convulution_vertical_fu_695_p2() {
    convulution_vertical_fu_695_p2 = (!tmp_17_fu_689_p2.read().is_01() || !tmp_28_cast_fu_682_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_17_fu_689_p2.read()) + sc_biguint<11>(tmp_28_cast_fu_682_p1.read()));
}

void sobel::thread_exitcond_flatten_fu_233_p2() {
    exitcond_flatten_fu_233_p2 = (!indvar_flatten_phi_fu_191_p4.read().is_01() || !ap_const_lv20_FF004.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_phi_fu_191_p4.read() == ap_const_lv20_FF004);
}

void sobel::thread_grp_fu_221_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00011001.read(), ap_const_boolean_0)))) {
        grp_fu_221_ce = ap_const_logic_1;
    } else {
        grp_fu_221_ce = ap_const_logic_0;
    }
}

void sobel::thread_grp_fu_221_p0() {
    grp_fu_221_p0 = esl_zext<32,20>(p_reg_1050.read());
}

void sobel::thread_grp_fu_224_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00011001.read(), ap_const_boolean_0)))) {
        grp_fu_224_ce = ap_const_logic_1;
    } else {
        grp_fu_224_ce = ap_const_logic_0;
    }
}

void sobel::thread_grp_fu_312_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00011001.read(), ap_const_boolean_0)))) {
        grp_fu_312_ce = ap_const_logic_1;
    } else {
        grp_fu_312_ce = ap_const_logic_0;
    }
}

void sobel::thread_grp_fu_312_p1() {
    grp_fu_312_p1 =  (sc_lv<11>) (ap_const_lv20_3FE);
}

void sobel::thread_grp_fu_349_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00011001.read(), ap_const_boolean_0)))) {
        grp_fu_349_ce = ap_const_logic_1;
    } else {
        grp_fu_349_ce = ap_const_logic_0;
    }
}

void sobel::thread_grp_fu_349_p1() {
    grp_fu_349_p1 =  (sc_lv<11>) (ap_const_lv20_3FE);
}

void sobel::thread_grp_fu_872_p0() {
    grp_fu_872_p0 =  (sc_lv<11>) (tmp_18_fu_704_p1.read());
}

void sobel::thread_grp_fu_872_p1() {
    grp_fu_872_p1 =  (sc_lv<11>) (tmp_18_fu_704_p1.read());
}

void sobel::thread_i_1_fu_558_p2() {
    i_1_fu_558_p2 = (!i_mid2_reg_906.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_mid2_reg_906.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void sobel::thread_i_mid2_fu_251_p3() {
    i_mid2_fu_251_p3 = (!tmp_1_fu_245_p2.read()[0].is_01())? sc_lv<10>(): ((tmp_1_fu_245_p2.read()[0].to_bool())? ap_const_lv10_1: i_phi_fu_214_p4.read());
}

void sobel::thread_i_phi_fu_214_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        i_phi_fu_214_p4 = i_1_reg_984.read();
    } else {
        i_phi_fu_214_p4 = i_reg_210.read();
    }
}

void sobel::thread_icmp_fu_850_p2() {
    icmp_fu_850_p2 = (!tmp_26_fu_840_p4.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_26_fu_840_p4.read() != ap_const_lv2_0);
}

void sobel::thread_indvar_flatten_next_fu_239_p2() {
    indvar_flatten_next_fu_239_p2 = (!indvar_flatten_phi_fu_191_p4.read().is_01() || !ap_const_lv20_1.is_01())? sc_lv<20>(): (sc_biguint<20>(indvar_flatten_phi_fu_191_p4.read()) + sc_biguint<20>(ap_const_lv20_1));
}

void sobel::thread_indvar_flatten_phi_fu_191_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        indvar_flatten_phi_fu_191_p4 = indvar_flatten_next_reg_900.read();
    } else {
        indvar_flatten_phi_fu_191_p4 = indvar_flatten_reg_187.read();
    }
}

void sobel::thread_input2_sum1_fu_515_p2() {
    input2_sum1_fu_515_p2 = (!tmp_10_fu_511_p1.read().is_01() || !input_read_reg_884.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_10_fu_511_p1.read()) + sc_biguint<32>(input_read_reg_884.read()));
}

void sobel::thread_input2_sum2_fu_547_p2() {
    input2_sum2_fu_547_p2 = (!tmp_14_fu_543_p1.read().is_01() || !input_read_reg_884.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_14_fu_543_p1.read()) + sc_biguint<32>(input_read_reg_884.read()));
}

void sobel::thread_input2_sum5_fu_370_p2() {
    input2_sum5_fu_370_p2 = (!sum4_cast_fu_366_p1.read().is_01() || !input_read_reg_884.read().is_01())? sc_lv<32>(): (sc_biguint<32>(sum4_cast_fu_366_p1.read()) + sc_biguint<32>(input_read_reg_884.read()));
}

void sobel::thread_input2_sum6_fu_390_p2() {
    input2_sum6_fu_390_p2 = (!sum6_cast_fu_386_p1.read().is_01() || !input_read_reg_884.read().is_01())? sc_lv<32>(): (sc_biguint<32>(sum6_cast_fu_386_p1.read()) + sc_biguint<32>(input_read_reg_884.read()));
}

void sobel::thread_input2_sum7_fu_410_p2() {
    input2_sum7_fu_410_p2 = (!sum8_cast_fu_406_p1.read().is_01() || !input_read_reg_884.read().is_01())? sc_lv<32>(): (sc_bigint<32>(sum8_cast_fu_406_p1.read()) + sc_biguint<32>(input_read_reg_884.read()));
}

void sobel::thread_input2_sum8_fu_483_p2() {
    input2_sum8_fu_483_p2 = (!sum3_cast_fu_479_p1.read().is_01() || !input_read_reg_884.read().is_01())? sc_lv<32>(): (sc_biguint<32>(sum3_cast_fu_479_p1.read()) + sc_biguint<32>(input_read_reg_884.read()));
}

void sobel::thread_input2_sum9_fu_430_p2() {
    input2_sum9_fu_430_p2 = (!sum5_cast_fu_426_p1.read().is_01() || !input_read_reg_884.read().is_01())? sc_lv<32>(): (sc_biguint<32>(sum5_cast_fu_426_p1.read()) + sc_biguint<32>(input_read_reg_884.read()));
}

void sobel::thread_input2_sum_fu_338_p2() {
    input2_sum_fu_338_p2 = (!sum2_cast_fu_334_p1.read().is_01() || !input_read_reg_884.read().is_01())? sc_lv<32>(): (sc_bigint<32>(sum2_cast_fu_334_p1.read()) + sc_biguint<32>(input_read_reg_884.read()));
}

void sobel::thread_isNeg_fu_750_p3() {
    isNeg_fu_750_p3 = sh_assign_fu_744_p2.read().range(11, 11);
}

void sobel::thread_j_phi_fu_203_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_896.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        j_phi_fu_203_p4 = tmp_3_cast_mid2_v_v_s_reg_916.read();
    } else {
        j_phi_fu_203_p4 = j_reg_199.read();
    }
}

void sobel::thread_j_s_fu_259_p2() {
    j_s_fu_259_p2 = (!ap_const_lv10_1.is_01() || !j_phi_fu_203_p4.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1) + sc_biguint<10>(j_phi_fu_203_p4.read()));
}

void sobel::thread_loc_V_1_fu_737_p1() {
    loc_V_1_fu_737_p1 = p_Val2_s_fu_723_p1.read().range(52-1, 0);
}

void sobel::thread_output4_sum1_fu_301_p2() {
    output4_sum1_fu_301_p2 = (!tmp_7_mid2_fu_297_p1.read().is_01() || !output_read_reg_879.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_mid2_fu_297_p1.read()) + sc_biguint<32>(output_read_reg_879.read()));
}

void sobel::thread_p_Val2_s_fu_723_p1() {
    p_Val2_s_fu_723_p1 = grp_fu_224_p2.read();
}

void sobel::thread_sh_assign_1_cast_fu_788_p1() {
    sh_assign_1_cast_fu_788_p1 = esl_sext<32,12>(sh_assign_1_reg_1089.read());
}

void sobel::thread_sh_assign_1_fu_767_p3() {
    sh_assign_1_fu_767_p3 = (!isNeg_fu_750_p3.read()[0].is_01())? sc_lv<12>(): ((isNeg_fu_750_p3.read()[0].to_bool())? tmp_41_i_i_i_cast_fu_763_p1.read(): sh_assign_fu_744_p2.read());
}

void sobel::thread_sh_assign_fu_744_p2() {
    sh_assign_fu_744_p2 = (!ap_const_lv12_C01.is_01() || !tmp_i_i_i_i_cast4_fu_741_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_C01) + sc_biguint<12>(tmp_i_i_i_i_cast4_fu_741_p1.read()));
}

void sobel::thread_sum1_cast_fu_645_p1() {
    sum1_cast_fu_645_p1 = esl_zext<11,10>(sum1_reg_1020.read());
}

void sobel::thread_sum1_fu_608_p2() {
    sum1_fu_608_p2 = (!tmp2_cast_fu_604_p1.read().is_01() || !tmp_12_cast_fu_574_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp2_cast_fu_604_p1.read()) + sc_biguint<10>(tmp_12_cast_fu_574_p1.read()));
}

void sobel::thread_sum2_cast_fu_334_p1() {
    sum2_cast_fu_334_p1 = esl_sext<32,21>(sum2_fu_328_p2.read());
}

void sobel::thread_sum2_fu_328_p2() {
    sum2_fu_328_p2 = (!ap_const_lv21_1FFBFF.is_01() || !tmp_9_cast_fu_324_p1.read().is_01())? sc_lv<21>(): (sc_bigint<21>(ap_const_lv21_1FFBFF) + sc_biguint<21>(tmp_9_cast_fu_324_p1.read()));
}

void sobel::thread_sum3_cast_fu_479_p1() {
    sum3_cast_fu_479_p1 = esl_zext<32,21>(sum3_fu_473_p2.read());
}

void sobel::thread_sum3_fu_473_p2() {
    sum3_fu_473_p2 = (!tmp_3_cast_mid2_fu_454_p1.read().is_01() || !tmp_8_cast5_fu_470_p1.read().is_01())? sc_lv<21>(): (sc_biguint<21>(tmp_3_cast_mid2_fu_454_p1.read()) + sc_biguint<21>(tmp_8_cast5_fu_470_p1.read()));
}

void sobel::thread_sum4_cast_fu_366_p1() {
    sum4_cast_fu_366_p1 = esl_zext<32,20>(sum4_fu_359_p3.read());
}

void sobel::thread_sum4_fu_359_p3() {
    sum4_fu_359_p3 = esl_concat<10,10>(tmp_3_cast_mid2_v_v_s_reg_916.read(), tmp1_fu_354_p2.read());
}

void sobel::thread_sum5_cast_fu_426_p1() {
    sum5_cast_fu_426_p1 = esl_zext<32,21>(sum5_fu_421_p2.read());
}

void sobel::thread_sum5_fu_421_p2() {
    sum5_fu_421_p2 = (!ap_const_lv21_401.is_01() || !tmp_9_cast_reg_929.read().is_01())? sc_lv<21>(): (sc_biguint<21>(ap_const_lv21_401) + sc_biguint<21>(tmp_9_cast_reg_929.read()));
}

void sobel::thread_sum5_neg_cast_fu_626_p1() {
    sum5_neg_cast_fu_626_p1 = esl_sext<10,9>(sum5_neg_fu_620_p2.read());
}

void sobel::thread_sum5_neg_fu_620_p2() {
    sum5_neg_fu_620_p2 = (!tmp_7_cast_fu_563_p1.read().is_01() || !tmp_13_cast_fu_578_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_7_cast_fu_563_p1.read()) - sc_biguint<9>(tmp_13_cast_fu_578_p1.read()));
}

void sobel::thread_sum6_cast_fu_386_p1() {
    sum6_cast_fu_386_p1 = esl_zext<32,21>(sum6_fu_381_p2.read());
}

void sobel::thread_sum6_fu_381_p2() {
    sum6_fu_381_p2 = (!ap_const_lv21_3FF.is_01() || !tmp_9_cast_reg_929.read().is_01())? sc_lv<21>(): (sc_biguint<21>(ap_const_lv21_3FF) + sc_biguint<21>(tmp_9_cast_reg_929.read()));
}

void sobel::thread_sum6_neg_fu_630_p2() {
    sum6_neg_fu_630_p2 = (!sum5_neg_cast_fu_626_p1.read().is_01() || !tmp_15_cast_fu_581_p1.read().is_01())? sc_lv<10>(): (sc_bigint<10>(sum5_neg_cast_fu_626_p1.read()) + sc_biguint<10>(tmp_15_cast_fu_581_p1.read()));
}

void sobel::thread_sum8_cast_fu_406_p1() {
    sum8_cast_fu_406_p1 = esl_sext<32,21>(sum8_fu_401_p2.read());
}

void sobel::thread_sum8_fu_401_p2() {
    sum8_fu_401_p2 = (!ap_const_lv21_1FFC01.is_01() || !tmp_9_cast_reg_929.read().is_01())? sc_lv<21>(): (sc_bigint<21>(ap_const_lv21_1FFC01) + sc_biguint<21>(tmp_9_cast_reg_929.read()));
}

void sobel::thread_tmp1_fu_354_p2() {
    tmp1_fu_354_p2 = (!ap_const_lv10_3FF.is_01() || !i_mid2_reg_906.read().is_01())? sc_lv<10>(): (sc_bigint<10>(ap_const_lv10_3FF) + sc_biguint<10>(i_mid2_reg_906.read()));
}

void sobel::thread_tmp2_cast_fu_604_p1() {
    tmp2_cast_fu_604_p1 = esl_zext<10,9>(tmp2_fu_598_p2.read());
}

void sobel::thread_tmp2_fu_598_p2() {
    tmp2_fu_598_p2 = (!tmp_7_cast_fu_563_p1.read().is_01() || !tmp_13_cast_fu_578_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_7_cast_fu_563_p1.read()) + sc_biguint<9>(tmp_13_cast_fu_578_p1.read()));
}

void sobel::thread_tmp3_cast_fu_654_p1() {
    tmp3_cast_fu_654_p1 = esl_zext<11,10>(tmp3_reg_1025.read());
}

void sobel::thread_tmp3_fu_614_p2() {
    tmp3_fu_614_p2 = (!tmp_17_cast_fu_591_p1.read().is_01() || !tmp_18_cast_fu_595_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_17_cast_fu_591_p1.read()) + sc_biguint<10>(tmp_18_cast_fu_595_p1.read()));
}

void sobel::thread_tmp_10_fu_511_p1() {
    tmp_10_fu_511_p1 = esl_zext<32,20>(tmp_9_fu_504_p3.read());
}

void sobel::thread_tmp_11_fu_663_p3() {
    tmp_11_fu_663_p3 = esl_concat<8,1>(INPUT_BUNDLE_addr_6_s_reg_1015.read(), ap_const_lv1_0);
}

void sobel::thread_tmp_12_cast_fu_574_p1() {
    tmp_12_cast_fu_574_p1 = esl_zext<10,9>(tmp_2_fu_567_p3.read());
}

void sobel::thread_tmp_12_fu_526_p4() {
    tmp_12_fu_526_p4 = tmp_5_mid2_fu_464_p2.read().range(19, 10);
}

void sobel::thread_tmp_13_cast_fu_578_p1() {
    tmp_13_cast_fu_578_p1 = esl_zext<9,8>(INPUT_BUNDLE_addr_2_s_reg_994.read());
}

void sobel::thread_tmp_13_fu_536_p3() {
    tmp_13_fu_536_p3 = esl_concat<10,10>(tmp_12_fu_526_p4.read(), i_mid2_reg_906.read());
}

void sobel::thread_tmp_14_fu_543_p1() {
    tmp_14_fu_543_p1 = esl_zext<32,20>(tmp_13_fu_536_p3.read());
}

void sobel::thread_tmp_15_cast_fu_581_p1() {
    tmp_15_cast_fu_581_p1 = esl_zext<10,8>(INPUT_BUNDLE_addr_3_s_reg_999.read());
}

void sobel::thread_tmp_15_fu_674_p3() {
    tmp_15_fu_674_p3 = esl_concat<8,1>(reg_229.read(), ap_const_lv1_0);
}

void sobel::thread_tmp_16_fu_636_p2() {
    tmp_16_fu_636_p2 = (!sum6_neg_fu_630_p2.read().is_01() || !tmp_18_cast_fu_595_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(sum6_neg_fu_630_p2.read()) - sc_biguint<10>(tmp_18_cast_fu_595_p1.read()));
}

void sobel::thread_tmp_17_cast_fu_591_p1() {
    tmp_17_cast_fu_591_p1 = esl_zext<10,9>(tmp_4_fu_584_p3.read());
}

void sobel::thread_tmp_17_fu_689_p2() {
    tmp_17_fu_689_p2 = (!tmp_29_cast_fu_686_p1.read().is_01() || !tmp_24_cast_fu_670_p1.read().is_01())? sc_lv<11>(): (sc_bigint<11>(tmp_29_cast_fu_686_p1.read()) - sc_biguint<11>(tmp_24_cast_fu_670_p1.read()));
}

void sobel::thread_tmp_18_cast_fu_595_p1() {
    tmp_18_cast_fu_595_p1 = esl_zext<10,8>(INPUT_BUNDLE_addr_5_s_reg_1010.read());
}

void sobel::thread_tmp_18_fu_704_p1() {
    tmp_18_fu_704_p1 = esl_sext<20,11>(convulution_horizont_reg_1035.read());
}

void sobel::thread_tmp_1_fu_245_p2() {
    tmp_1_fu_245_p2 = (!i_phi_fu_214_p4.read().is_01() || !ap_const_lv10_3FF.is_01())? sc_lv<1>(): sc_lv<1>(i_phi_fu_214_p4.read() == ap_const_lv10_3FF);
}

void sobel::thread_tmp_1_mid1_fu_273_p3() {
    tmp_1_mid1_fu_273_p3 = esl_concat<10,10>(j_s_fu_259_p2.read(), ap_const_lv10_1);
}

void sobel::thread_tmp_20_fu_701_p1() {
    tmp_20_fu_701_p1 = esl_sext<20,11>(convulution_vertical_reg_1040.read());
}

void sobel::thread_tmp_21_fu_866_p0() {
    tmp_21_fu_866_p0 =  (sc_lv<11>) (tmp_20_fu_701_p1.read());
}

void sobel::thread_tmp_21_fu_866_p1() {
    tmp_21_fu_866_p1 =  (sc_lv<11>) (tmp_20_fu_701_p1.read());
}

void sobel::thread_tmp_24_cast1_fu_819_p1() {
    tmp_24_cast1_fu_819_p1 = esl_zext<68,1>(tmp_fu_811_p3.read());
}

void sobel::thread_tmp_24_cast_fu_670_p1() {
    tmp_24_cast_fu_670_p1 = esl_zext<11,9>(tmp_11_fu_663_p3.read());
}

void sobel::thread_tmp_24_fu_823_p4() {
    tmp_24_fu_823_p4 = tmp_44_i_i_i_fu_805_p2.read().range(120, 53);
}

void sobel::thread_tmp_25_fu_833_p3() {
    tmp_25_fu_833_p3 = (!isNeg_reg_1084.read()[0].is_01())? sc_lv<68>(): ((isNeg_reg_1084.read()[0].to_bool())? tmp_24_cast1_fu_819_p1.read(): tmp_24_fu_823_p4.read());
}

void sobel::thread_tmp_26_fu_840_p4() {
    tmp_26_fu_840_p4 = tmp_25_fu_833_p3.read().range(9, 8);
}

void sobel::thread_tmp_27_fu_856_p1() {
    tmp_27_fu_856_p1 = tmp_25_fu_833_p3.read().range(8-1, 0);
}

void sobel::thread_tmp_28_cast_fu_682_p1() {
    tmp_28_cast_fu_682_p1 = esl_zext<11,9>(tmp_15_fu_674_p3.read());
}

void sobel::thread_tmp_28_fu_860_p3() {
    tmp_28_fu_860_p3 = (!icmp_reg_1094.read()[0].is_01())? sc_lv<8>(): ((icmp_reg_1094.read()[0].to_bool())? ap_const_lv8_FF: tmp_27_reg_1099.read());
}

void sobel::thread_tmp_29_cast_fu_686_p1() {
    tmp_29_cast_fu_686_p1 = esl_sext<11,10>(tmp_16_reg_1030.read());
}

void sobel::thread_tmp_2_fu_567_p3() {
    tmp_2_fu_567_p3 = esl_concat<8,1>(INPUT_BUNDLE_addr_1_s_reg_989.read(), ap_const_lv1_0);
}

void sobel::thread_tmp_30_fu_711_p2() {
    tmp_30_fu_711_p2 = (!grp_fu_312_p2.read().is_01() || !ap_const_lv20_0.is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_312_p2.read() == ap_const_lv20_0);
}

void sobel::thread_tmp_32_fu_717_p2() {
    tmp_32_fu_717_p2 = (!grp_fu_349_p2.read().is_01() || !ap_const_lv20_0.is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_349_p2.read() == ap_const_lv20_0);
}

void sobel::thread_tmp_3_cast_mid2_fu_454_p1() {
    tmp_3_cast_mid2_fu_454_p1 = esl_zext<21,20>(tmp_3_cast_mid2_v_fu_448_p2.read());
}

void sobel::thread_tmp_3_cast_mid2_v_fu_448_p2() {
    tmp_3_cast_mid2_v_fu_448_p2 = (tmp_3_cast_mid2_v_v_fu_441_p3.read() | ap_const_lv20_1);
}

void sobel::thread_tmp_3_cast_mid2_v_v_fu_441_p3() {
    tmp_3_cast_mid2_v_v_fu_441_p3 = esl_concat<10,10>(tmp_3_cast_mid2_v_v_s_reg_916.read(), ap_const_lv10_0);
}

void sobel::thread_tmp_3_cast_mid2_v_v_s_fu_265_p3() {
    tmp_3_cast_mid2_v_v_s_fu_265_p3 = (!tmp_1_fu_245_p2.read()[0].is_01())? sc_lv<10>(): ((tmp_1_fu_245_p2.read()[0].to_bool())? j_s_fu_259_p2.read(): j_phi_fu_203_p4.read());
}

void sobel::thread_tmp_3_fu_642_p1() {
    tmp_3_fu_642_p1 = esl_zext<11,8>(INPUT_BUNDLE_addr_3_s_reg_999.read());
}

void sobel::thread_tmp_41_i_i_i_cast_fu_763_p1() {
    tmp_41_i_i_i_cast_fu_763_p1 = esl_sext<12,11>(tmp_41_i_i_i_fu_758_p2.read());
}

void sobel::thread_tmp_41_i_i_i_fu_758_p2() {
    tmp_41_i_i_i_fu_758_p2 = (!ap_const_lv11_3FF.is_01() || !loc_V_reg_1073.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3FF) - sc_biguint<11>(loc_V_reg_1073.read()));
}

void sobel::thread_tmp_42_i_i_i_cast_fu_795_p1() {
    tmp_42_i_i_i_cast_fu_795_p1 = esl_zext<54,32>(sh_assign_1_cast_fu_788_p1.read());
}

void sobel::thread_tmp_42_i_i_i_fu_791_p1() {
    tmp_42_i_i_i_fu_791_p1 = esl_zext<121,32>(sh_assign_1_cast_fu_788_p1.read());
}

void sobel::thread_tmp_43_i_i_i_fu_799_p2() {
    tmp_43_i_i_i_fu_799_p2 = (!tmp_42_i_i_i_cast_fu_795_p1.read().is_01())? sc_lv<54>(): tmp_i_i_i_fu_775_p4.read() >> (unsigned short)tmp_42_i_i_i_cast_fu_795_p1.read().to_uint();
}

void sobel::thread_tmp_44_i_i_i_fu_805_p2() {
    tmp_44_i_i_i_fu_805_p2 = (!tmp_42_i_i_i_fu_791_p1.read().is_01())? sc_lv<121>(): tmp_i_i_i_cast_fu_784_p1.read() << (unsigned short)tmp_42_i_i_i_fu_791_p1.read().to_uint();
}

void sobel::thread_tmp_4_fu_584_p3() {
    tmp_4_fu_584_p3 = esl_concat<8,1>(INPUT_BUNDLE_addr_4_s_reg_1005.read(), ap_const_lv1_0);
}

void sobel::thread_tmp_4_mid2_fu_458_p2() {
    tmp_4_mid2_fu_458_p2 = (!ap_const_lv20_400.is_01() || !tmp_3_cast_mid2_v_v_fu_441_p3.read().is_01())? sc_lv<20>(): (sc_biguint<20>(ap_const_lv20_400) + sc_biguint<20>(tmp_3_cast_mid2_v_v_fu_441_p3.read()));
}

void sobel::thread_tmp_5_fu_648_p2() {
    tmp_5_fu_648_p2 = (!tmp_3_fu_642_p1.read().is_01() || !sum1_cast_fu_645_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_3_fu_642_p1.read()) - sc_biguint<11>(sum1_cast_fu_645_p1.read()));
}

void sobel::thread_tmp_5_mid2_fu_464_p2() {
    tmp_5_mid2_fu_464_p2 = (!ap_const_lv20_FFC00.is_01() || !tmp_3_cast_mid2_v_v_fu_441_p3.read().is_01())? sc_lv<20>(): (sc_bigint<20>(ap_const_lv20_FFC00) + sc_biguint<20>(tmp_3_cast_mid2_v_v_fu_441_p3.read()));
}

void sobel::thread_tmp_6_fu_281_p3() {
    tmp_6_fu_281_p3 = esl_concat<10,10>(j_phi_fu_203_p4.read(), ap_const_lv10_1);
}

void sobel::thread_tmp_7_cast_fu_563_p1() {
    tmp_7_cast_fu_563_p1 = esl_zext<9,8>(reg_229.read());
}

void sobel::thread_tmp_7_fu_494_p4() {
    tmp_7_fu_494_p4 = tmp_4_mid2_fu_458_p2.read().range(19, 10);
}

void sobel::thread_tmp_7_mid2_fu_297_p1() {
    tmp_7_mid2_fu_297_p1 = esl_zext<32,20>(tmp_7_mid2_v_fu_289_p3.read());
}

void sobel::thread_tmp_7_mid2_v_fu_289_p3() {
    tmp_7_mid2_v_fu_289_p3 = (!tmp_1_fu_245_p2.read()[0].is_01())? sc_lv<20>(): ((tmp_1_fu_245_p2.read()[0].to_bool())? tmp_1_mid1_fu_273_p3.read(): tmp_6_fu_281_p3.read());
}

void sobel::thread_tmp_8_cast5_fu_470_p1() {
    tmp_8_cast5_fu_470_p1 = esl_zext<21,10>(i_mid2_reg_906.read());
}

void sobel::thread_tmp_8_fu_318_p3() {
    tmp_8_fu_318_p3 = esl_concat<10,10>(tmp_3_cast_mid2_v_v_s_reg_916.read(), i_mid2_reg_906.read());
}

void sobel::thread_tmp_9_cast_fu_324_p1() {
    tmp_9_cast_fu_324_p1 = esl_zext<21,20>(tmp_8_fu_318_p3.read());
}

void sobel::thread_tmp_9_fu_504_p3() {
    tmp_9_fu_504_p3 = esl_concat<10,10>(tmp_7_fu_494_p4.read(), i_mid2_reg_906.read());
}

void sobel::thread_tmp_fu_811_p3() {
    tmp_fu_811_p3 = tmp_43_i_i_i_fu_799_p2.read().range(53, 53);
}

void sobel::thread_tmp_i_i_i_cast_fu_784_p1() {
    tmp_i_i_i_cast_fu_784_p1 = esl_zext<121,54>(tmp_i_i_i_fu_775_p4.read());
}

void sobel::thread_tmp_i_i_i_fu_775_p4() {
    tmp_i_i_i_fu_775_p4 = esl_concat<53,1>(esl_concat<1,52>(ap_const_lv1_1, loc_V_1_reg_1079.read()), ap_const_lv1_0);
}

void sobel::thread_tmp_i_i_i_i_cast4_fu_741_p1() {
    tmp_i_i_i_i_cast4_fu_741_p1 = esl_zext<12,11>(loc_V_reg_1073.read());
}

void sobel::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_233_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_233_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state68;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state68;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage7_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

void sobel::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_INPUT_BUNDLE_AWVALID\" :  \"" << m_axi_INPUT_BUNDLE_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_AWREADY\" :  \"" << m_axi_INPUT_BUNDLE_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_AWADDR\" :  \"" << m_axi_INPUT_BUNDLE_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_AWID\" :  \"" << m_axi_INPUT_BUNDLE_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_AWLEN\" :  \"" << m_axi_INPUT_BUNDLE_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_AWSIZE\" :  \"" << m_axi_INPUT_BUNDLE_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_AWBURST\" :  \"" << m_axi_INPUT_BUNDLE_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_AWLOCK\" :  \"" << m_axi_INPUT_BUNDLE_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_AWCACHE\" :  \"" << m_axi_INPUT_BUNDLE_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_AWPROT\" :  \"" << m_axi_INPUT_BUNDLE_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_AWQOS\" :  \"" << m_axi_INPUT_BUNDLE_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_AWREGION\" :  \"" << m_axi_INPUT_BUNDLE_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_AWUSER\" :  \"" << m_axi_INPUT_BUNDLE_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_WVALID\" :  \"" << m_axi_INPUT_BUNDLE_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_WREADY\" :  \"" << m_axi_INPUT_BUNDLE_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_WDATA\" :  \"" << m_axi_INPUT_BUNDLE_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_WSTRB\" :  \"" << m_axi_INPUT_BUNDLE_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_WLAST\" :  \"" << m_axi_INPUT_BUNDLE_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_WID\" :  \"" << m_axi_INPUT_BUNDLE_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_WUSER\" :  \"" << m_axi_INPUT_BUNDLE_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_ARVALID\" :  \"" << m_axi_INPUT_BUNDLE_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_ARREADY\" :  \"" << m_axi_INPUT_BUNDLE_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_ARADDR\" :  \"" << m_axi_INPUT_BUNDLE_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_ARID\" :  \"" << m_axi_INPUT_BUNDLE_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_ARLEN\" :  \"" << m_axi_INPUT_BUNDLE_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_ARSIZE\" :  \"" << m_axi_INPUT_BUNDLE_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_ARBURST\" :  \"" << m_axi_INPUT_BUNDLE_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_ARLOCK\" :  \"" << m_axi_INPUT_BUNDLE_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_ARCACHE\" :  \"" << m_axi_INPUT_BUNDLE_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_ARPROT\" :  \"" << m_axi_INPUT_BUNDLE_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_ARQOS\" :  \"" << m_axi_INPUT_BUNDLE_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_ARREGION\" :  \"" << m_axi_INPUT_BUNDLE_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_ARUSER\" :  \"" << m_axi_INPUT_BUNDLE_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_RVALID\" :  \"" << m_axi_INPUT_BUNDLE_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_RREADY\" :  \"" << m_axi_INPUT_BUNDLE_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_RDATA\" :  \"" << m_axi_INPUT_BUNDLE_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_RLAST\" :  \"" << m_axi_INPUT_BUNDLE_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_RID\" :  \"" << m_axi_INPUT_BUNDLE_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_RUSER\" :  \"" << m_axi_INPUT_BUNDLE_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_RRESP\" :  \"" << m_axi_INPUT_BUNDLE_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_BVALID\" :  \"" << m_axi_INPUT_BUNDLE_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_BREADY\" :  \"" << m_axi_INPUT_BUNDLE_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_BRESP\" :  \"" << m_axi_INPUT_BUNDLE_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_BID\" :  \"" << m_axi_INPUT_BUNDLE_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_BUNDLE_BUSER\" :  \"" << m_axi_INPUT_BUNDLE_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_AWVALID\" :  \"" << m_axi_OUTPUT_BUNDLE_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_AWREADY\" :  \"" << m_axi_OUTPUT_BUNDLE_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_AWADDR\" :  \"" << m_axi_OUTPUT_BUNDLE_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_AWID\" :  \"" << m_axi_OUTPUT_BUNDLE_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_AWLEN\" :  \"" << m_axi_OUTPUT_BUNDLE_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_AWSIZE\" :  \"" << m_axi_OUTPUT_BUNDLE_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_AWBURST\" :  \"" << m_axi_OUTPUT_BUNDLE_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_AWLOCK\" :  \"" << m_axi_OUTPUT_BUNDLE_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_AWCACHE\" :  \"" << m_axi_OUTPUT_BUNDLE_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_AWPROT\" :  \"" << m_axi_OUTPUT_BUNDLE_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_AWQOS\" :  \"" << m_axi_OUTPUT_BUNDLE_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_AWREGION\" :  \"" << m_axi_OUTPUT_BUNDLE_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_AWUSER\" :  \"" << m_axi_OUTPUT_BUNDLE_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_WVALID\" :  \"" << m_axi_OUTPUT_BUNDLE_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_WREADY\" :  \"" << m_axi_OUTPUT_BUNDLE_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_WDATA\" :  \"" << m_axi_OUTPUT_BUNDLE_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_WSTRB\" :  \"" << m_axi_OUTPUT_BUNDLE_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_WLAST\" :  \"" << m_axi_OUTPUT_BUNDLE_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_WID\" :  \"" << m_axi_OUTPUT_BUNDLE_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_WUSER\" :  \"" << m_axi_OUTPUT_BUNDLE_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_ARVALID\" :  \"" << m_axi_OUTPUT_BUNDLE_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_ARREADY\" :  \"" << m_axi_OUTPUT_BUNDLE_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_ARADDR\" :  \"" << m_axi_OUTPUT_BUNDLE_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_ARID\" :  \"" << m_axi_OUTPUT_BUNDLE_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_ARLEN\" :  \"" << m_axi_OUTPUT_BUNDLE_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_ARSIZE\" :  \"" << m_axi_OUTPUT_BUNDLE_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_ARBURST\" :  \"" << m_axi_OUTPUT_BUNDLE_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_ARLOCK\" :  \"" << m_axi_OUTPUT_BUNDLE_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_ARCACHE\" :  \"" << m_axi_OUTPUT_BUNDLE_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_ARPROT\" :  \"" << m_axi_OUTPUT_BUNDLE_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_ARQOS\" :  \"" << m_axi_OUTPUT_BUNDLE_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_ARREGION\" :  \"" << m_axi_OUTPUT_BUNDLE_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_ARUSER\" :  \"" << m_axi_OUTPUT_BUNDLE_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_RVALID\" :  \"" << m_axi_OUTPUT_BUNDLE_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_RREADY\" :  \"" << m_axi_OUTPUT_BUNDLE_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_RDATA\" :  \"" << m_axi_OUTPUT_BUNDLE_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_RLAST\" :  \"" << m_axi_OUTPUT_BUNDLE_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_RID\" :  \"" << m_axi_OUTPUT_BUNDLE_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_RUSER\" :  \"" << m_axi_OUTPUT_BUNDLE_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_RRESP\" :  \"" << m_axi_OUTPUT_BUNDLE_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_BVALID\" :  \"" << m_axi_OUTPUT_BUNDLE_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_BREADY\" :  \"" << m_axi_OUTPUT_BUNDLE_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_BRESP\" :  \"" << m_axi_OUTPUT_BUNDLE_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_BID\" :  \"" << m_axi_OUTPUT_BUNDLE_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_BUNDLE_BUSER\" :  \"" << m_axi_OUTPUT_BUNDLE_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

