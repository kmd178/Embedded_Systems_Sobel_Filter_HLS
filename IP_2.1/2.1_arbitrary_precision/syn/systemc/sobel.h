// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sobel_HH_
#define _sobel_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sobel_uitodp_32nsbkb.h"
#include "sobel_dsqrt_64ns_cud.h"
#include "sobel_mul_mul_11sdEe.h"
#include "sobel_mac_muladd_eOg.h"
#include "sobel_AXILiteS_s_axi.h"
#include "sobel_INPUT_BUNDLE_m_axi.h"
#include "sobel_OUTPUT_BUNDLE_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_INPUT_BUNDLE_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_INPUT_BUNDLE_ID_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_BUNDLE_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_BUNDLE_DATA_WIDTH = 32,
         unsigned int C_M_AXI_INPUT_BUNDLE_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_BUNDLE_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_BUNDLE_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_BUNDLE_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_BUNDLE_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_OUTPUT_BUNDLE_ID_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_BUNDLE_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_BUNDLE_DATA_WIDTH = 32,
         unsigned int C_M_AXI_OUTPUT_BUNDLE_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_BUNDLE_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_BUNDLE_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_BUNDLE_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct sobel : public sc_module {
    // Port declarations 110
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_INPUT_BUNDLE_AWVALID;
    sc_in< sc_logic > m_axi_INPUT_BUNDLE_AWREADY;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_ADDR_WIDTH> > m_axi_INPUT_BUNDLE_AWADDR;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_ID_WIDTH> > m_axi_INPUT_BUNDLE_AWID;
    sc_out< sc_lv<8> > m_axi_INPUT_BUNDLE_AWLEN;
    sc_out< sc_lv<3> > m_axi_INPUT_BUNDLE_AWSIZE;
    sc_out< sc_lv<2> > m_axi_INPUT_BUNDLE_AWBURST;
    sc_out< sc_lv<2> > m_axi_INPUT_BUNDLE_AWLOCK;
    sc_out< sc_lv<4> > m_axi_INPUT_BUNDLE_AWCACHE;
    sc_out< sc_lv<3> > m_axi_INPUT_BUNDLE_AWPROT;
    sc_out< sc_lv<4> > m_axi_INPUT_BUNDLE_AWQOS;
    sc_out< sc_lv<4> > m_axi_INPUT_BUNDLE_AWREGION;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_AWUSER_WIDTH> > m_axi_INPUT_BUNDLE_AWUSER;
    sc_out< sc_logic > m_axi_INPUT_BUNDLE_WVALID;
    sc_in< sc_logic > m_axi_INPUT_BUNDLE_WREADY;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_DATA_WIDTH> > m_axi_INPUT_BUNDLE_WDATA;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_DATA_WIDTH/8> > m_axi_INPUT_BUNDLE_WSTRB;
    sc_out< sc_logic > m_axi_INPUT_BUNDLE_WLAST;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_ID_WIDTH> > m_axi_INPUT_BUNDLE_WID;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_WUSER_WIDTH> > m_axi_INPUT_BUNDLE_WUSER;
    sc_out< sc_logic > m_axi_INPUT_BUNDLE_ARVALID;
    sc_in< sc_logic > m_axi_INPUT_BUNDLE_ARREADY;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_ADDR_WIDTH> > m_axi_INPUT_BUNDLE_ARADDR;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_ID_WIDTH> > m_axi_INPUT_BUNDLE_ARID;
    sc_out< sc_lv<8> > m_axi_INPUT_BUNDLE_ARLEN;
    sc_out< sc_lv<3> > m_axi_INPUT_BUNDLE_ARSIZE;
    sc_out< sc_lv<2> > m_axi_INPUT_BUNDLE_ARBURST;
    sc_out< sc_lv<2> > m_axi_INPUT_BUNDLE_ARLOCK;
    sc_out< sc_lv<4> > m_axi_INPUT_BUNDLE_ARCACHE;
    sc_out< sc_lv<3> > m_axi_INPUT_BUNDLE_ARPROT;
    sc_out< sc_lv<4> > m_axi_INPUT_BUNDLE_ARQOS;
    sc_out< sc_lv<4> > m_axi_INPUT_BUNDLE_ARREGION;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_ARUSER_WIDTH> > m_axi_INPUT_BUNDLE_ARUSER;
    sc_in< sc_logic > m_axi_INPUT_BUNDLE_RVALID;
    sc_out< sc_logic > m_axi_INPUT_BUNDLE_RREADY;
    sc_in< sc_uint<C_M_AXI_INPUT_BUNDLE_DATA_WIDTH> > m_axi_INPUT_BUNDLE_RDATA;
    sc_in< sc_logic > m_axi_INPUT_BUNDLE_RLAST;
    sc_in< sc_uint<C_M_AXI_INPUT_BUNDLE_ID_WIDTH> > m_axi_INPUT_BUNDLE_RID;
    sc_in< sc_uint<C_M_AXI_INPUT_BUNDLE_RUSER_WIDTH> > m_axi_INPUT_BUNDLE_RUSER;
    sc_in< sc_lv<2> > m_axi_INPUT_BUNDLE_RRESP;
    sc_in< sc_logic > m_axi_INPUT_BUNDLE_BVALID;
    sc_out< sc_logic > m_axi_INPUT_BUNDLE_BREADY;
    sc_in< sc_lv<2> > m_axi_INPUT_BUNDLE_BRESP;
    sc_in< sc_uint<C_M_AXI_INPUT_BUNDLE_ID_WIDTH> > m_axi_INPUT_BUNDLE_BID;
    sc_in< sc_uint<C_M_AXI_INPUT_BUNDLE_BUSER_WIDTH> > m_axi_INPUT_BUNDLE_BUSER;
    sc_out< sc_logic > m_axi_OUTPUT_BUNDLE_AWVALID;
    sc_in< sc_logic > m_axi_OUTPUT_BUNDLE_AWREADY;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_ADDR_WIDTH> > m_axi_OUTPUT_BUNDLE_AWADDR;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_ID_WIDTH> > m_axi_OUTPUT_BUNDLE_AWID;
    sc_out< sc_lv<8> > m_axi_OUTPUT_BUNDLE_AWLEN;
    sc_out< sc_lv<3> > m_axi_OUTPUT_BUNDLE_AWSIZE;
    sc_out< sc_lv<2> > m_axi_OUTPUT_BUNDLE_AWBURST;
    sc_out< sc_lv<2> > m_axi_OUTPUT_BUNDLE_AWLOCK;
    sc_out< sc_lv<4> > m_axi_OUTPUT_BUNDLE_AWCACHE;
    sc_out< sc_lv<3> > m_axi_OUTPUT_BUNDLE_AWPROT;
    sc_out< sc_lv<4> > m_axi_OUTPUT_BUNDLE_AWQOS;
    sc_out< sc_lv<4> > m_axi_OUTPUT_BUNDLE_AWREGION;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_AWUSER_WIDTH> > m_axi_OUTPUT_BUNDLE_AWUSER;
    sc_out< sc_logic > m_axi_OUTPUT_BUNDLE_WVALID;
    sc_in< sc_logic > m_axi_OUTPUT_BUNDLE_WREADY;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_DATA_WIDTH> > m_axi_OUTPUT_BUNDLE_WDATA;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_DATA_WIDTH/8> > m_axi_OUTPUT_BUNDLE_WSTRB;
    sc_out< sc_logic > m_axi_OUTPUT_BUNDLE_WLAST;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_ID_WIDTH> > m_axi_OUTPUT_BUNDLE_WID;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_WUSER_WIDTH> > m_axi_OUTPUT_BUNDLE_WUSER;
    sc_out< sc_logic > m_axi_OUTPUT_BUNDLE_ARVALID;
    sc_in< sc_logic > m_axi_OUTPUT_BUNDLE_ARREADY;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_ADDR_WIDTH> > m_axi_OUTPUT_BUNDLE_ARADDR;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_ID_WIDTH> > m_axi_OUTPUT_BUNDLE_ARID;
    sc_out< sc_lv<8> > m_axi_OUTPUT_BUNDLE_ARLEN;
    sc_out< sc_lv<3> > m_axi_OUTPUT_BUNDLE_ARSIZE;
    sc_out< sc_lv<2> > m_axi_OUTPUT_BUNDLE_ARBURST;
    sc_out< sc_lv<2> > m_axi_OUTPUT_BUNDLE_ARLOCK;
    sc_out< sc_lv<4> > m_axi_OUTPUT_BUNDLE_ARCACHE;
    sc_out< sc_lv<3> > m_axi_OUTPUT_BUNDLE_ARPROT;
    sc_out< sc_lv<4> > m_axi_OUTPUT_BUNDLE_ARQOS;
    sc_out< sc_lv<4> > m_axi_OUTPUT_BUNDLE_ARREGION;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_ARUSER_WIDTH> > m_axi_OUTPUT_BUNDLE_ARUSER;
    sc_in< sc_logic > m_axi_OUTPUT_BUNDLE_RVALID;
    sc_out< sc_logic > m_axi_OUTPUT_BUNDLE_RREADY;
    sc_in< sc_uint<C_M_AXI_OUTPUT_BUNDLE_DATA_WIDTH> > m_axi_OUTPUT_BUNDLE_RDATA;
    sc_in< sc_logic > m_axi_OUTPUT_BUNDLE_RLAST;
    sc_in< sc_uint<C_M_AXI_OUTPUT_BUNDLE_ID_WIDTH> > m_axi_OUTPUT_BUNDLE_RID;
    sc_in< sc_uint<C_M_AXI_OUTPUT_BUNDLE_RUSER_WIDTH> > m_axi_OUTPUT_BUNDLE_RUSER;
    sc_in< sc_lv<2> > m_axi_OUTPUT_BUNDLE_RRESP;
    sc_in< sc_logic > m_axi_OUTPUT_BUNDLE_BVALID;
    sc_out< sc_logic > m_axi_OUTPUT_BUNDLE_BREADY;
    sc_in< sc_lv<2> > m_axi_OUTPUT_BUNDLE_BRESP;
    sc_in< sc_uint<C_M_AXI_OUTPUT_BUNDLE_ID_WIDTH> > m_axi_OUTPUT_BUNDLE_BID;
    sc_in< sc_uint<C_M_AXI_OUTPUT_BUNDLE_BUSER_WIDTH> > m_axi_OUTPUT_BUNDLE_BUSER;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<32> > ap_var_for_const7;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<1> > ap_var_for_const9;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<8> > ap_var_for_const8;
    sc_signal< sc_lv<64> > ap_var_for_const10;


    // Module declarations
    sobel(sc_module_name name);
    SC_HAS_PROCESS(sobel);

    ~sobel();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sobel_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* sobel_AXILiteS_s_axi_U;
    sobel_INPUT_BUNDLE_m_axi<8,32,5,16,16,16,16,C_M_AXI_INPUT_BUNDLE_ID_WIDTH,C_M_AXI_INPUT_BUNDLE_ADDR_WIDTH,C_M_AXI_INPUT_BUNDLE_DATA_WIDTH,C_M_AXI_INPUT_BUNDLE_AWUSER_WIDTH,C_M_AXI_INPUT_BUNDLE_ARUSER_WIDTH,C_M_AXI_INPUT_BUNDLE_WUSER_WIDTH,C_M_AXI_INPUT_BUNDLE_RUSER_WIDTH,C_M_AXI_INPUT_BUNDLE_BUSER_WIDTH,C_M_AXI_INPUT_BUNDLE_USER_VALUE,C_M_AXI_INPUT_BUNDLE_PROT_VALUE,C_M_AXI_INPUT_BUNDLE_CACHE_VALUE>* sobel_INPUT_BUNDLE_m_axi_U;
    sobel_OUTPUT_BUNDLE_m_axi<8,32,5,16,16,16,16,C_M_AXI_OUTPUT_BUNDLE_ID_WIDTH,C_M_AXI_OUTPUT_BUNDLE_ADDR_WIDTH,C_M_AXI_OUTPUT_BUNDLE_DATA_WIDTH,C_M_AXI_OUTPUT_BUNDLE_AWUSER_WIDTH,C_M_AXI_OUTPUT_BUNDLE_ARUSER_WIDTH,C_M_AXI_OUTPUT_BUNDLE_WUSER_WIDTH,C_M_AXI_OUTPUT_BUNDLE_RUSER_WIDTH,C_M_AXI_OUTPUT_BUNDLE_BUSER_WIDTH,C_M_AXI_OUTPUT_BUNDLE_USER_VALUE,C_M_AXI_OUTPUT_BUNDLE_PROT_VALUE,C_M_AXI_OUTPUT_BUNDLE_CACHE_VALUE>* sobel_OUTPUT_BUNDLE_m_axi_U;
    sobel_uitodp_32nsbkb<1,6,32,64>* sobel_uitodp_32nsbkb_U0;
    sobel_dsqrt_64ns_cud<1,31,64,64,64>* sobel_dsqrt_64ns_cud_U1;
    sobel_mul_mul_11sdEe<1,1,11,11,20>* sobel_mul_mul_11sdEe_U2;
    sobel_mac_muladd_eOg<1,1,11,11,20,20>* sobel_mac_muladd_eOg_U3;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<73> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > input_r;
    sc_signal< sc_lv<32> > output_r;
    sc_signal< sc_logic > INPUT_BUNDLE_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > INPUT_BUNDLE_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > OUTPUT_BUNDLE_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state61;
    sc_signal< sc_logic > OUTPUT_BUNDLE_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state62;
    sc_signal< sc_logic > OUTPUT_BUNDLE_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state67;
    sc_signal< sc_lv<1> > icmp_reg_963;
    sc_signal< sc_logic > ap_CS_fsm_state68;
    sc_signal< sc_logic > ap_CS_fsm_state69;
    sc_signal< sc_logic > INPUT_BUNDLE_AWREADY;
    sc_signal< sc_logic > INPUT_BUNDLE_WREADY;
    sc_signal< sc_logic > INPUT_BUNDLE_ARVALID;
    sc_signal< sc_logic > INPUT_BUNDLE_ARREADY;
    sc_signal< sc_lv<32> > INPUT_BUNDLE_ARADDR;
    sc_signal< sc_logic > INPUT_BUNDLE_RVALID;
    sc_signal< sc_logic > INPUT_BUNDLE_RREADY;
    sc_signal< sc_lv<8> > INPUT_BUNDLE_RDATA;
    sc_signal< sc_logic > INPUT_BUNDLE_RLAST;
    sc_signal< sc_lv<1> > INPUT_BUNDLE_RID;
    sc_signal< sc_lv<1> > INPUT_BUNDLE_RUSER;
    sc_signal< sc_lv<2> > INPUT_BUNDLE_RRESP;
    sc_signal< sc_logic > INPUT_BUNDLE_BVALID;
    sc_signal< sc_lv<2> > INPUT_BUNDLE_BRESP;
    sc_signal< sc_lv<1> > INPUT_BUNDLE_BID;
    sc_signal< sc_lv<1> > INPUT_BUNDLE_BUSER;
    sc_signal< sc_logic > OUTPUT_BUNDLE_AWVALID;
    sc_signal< sc_logic > OUTPUT_BUNDLE_AWREADY;
    sc_signal< sc_logic > OUTPUT_BUNDLE_WVALID;
    sc_signal< sc_logic > OUTPUT_BUNDLE_WREADY;
    sc_signal< sc_lv<8> > OUTPUT_BUNDLE_WDATA;
    sc_signal< sc_logic > OUTPUT_BUNDLE_ARREADY;
    sc_signal< sc_logic > OUTPUT_BUNDLE_RVALID;
    sc_signal< sc_lv<8> > OUTPUT_BUNDLE_RDATA;
    sc_signal< sc_logic > OUTPUT_BUNDLE_RLAST;
    sc_signal< sc_lv<1> > OUTPUT_BUNDLE_RID;
    sc_signal< sc_lv<1> > OUTPUT_BUNDLE_RUSER;
    sc_signal< sc_lv<2> > OUTPUT_BUNDLE_RRESP;
    sc_signal< sc_logic > OUTPUT_BUNDLE_BVALID;
    sc_signal< sc_logic > OUTPUT_BUNDLE_BREADY;
    sc_signal< sc_lv<2> > OUTPUT_BUNDLE_BRESP;
    sc_signal< sc_lv<1> > OUTPUT_BUNDLE_BID;
    sc_signal< sc_lv<1> > OUTPUT_BUNDLE_BUSER;
    sc_signal< sc_lv<8> > reg_208;
    sc_signal< sc_logic > ap_sig_ioackin_INPUT_BUNDLE_ARREADY;
    sc_signal< sc_lv<8> > reg_212;
    sc_signal< sc_lv<8> > reg_216;
    sc_signal< sc_lv<32> > reg_220;
    sc_signal< sc_logic > ap_CS_fsm_state60;
    sc_signal< sc_lv<1> > icmp_fu_772_p2;
    sc_signal< sc_lv<32> > output_read_reg_801;
    sc_signal< sc_lv<32> > input_read_reg_806;
    sc_signal< sc_lv<21> > tmp_3_cast_fu_245_p1;
    sc_signal< sc_lv<21> > tmp_3_cast_reg_821;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_fu_225_p2;
    sc_signal< sc_lv<20> > tmp_4_fu_249_p2;
    sc_signal< sc_lv<20> > tmp_4_reg_826;
    sc_signal< sc_lv<20> > tmp_5_fu_255_p2;
    sc_signal< sc_lv<20> > tmp_5_reg_831;
    sc_signal< sc_lv<20> > tmp_s_fu_271_p3;
    sc_signal< sc_lv<20> > tmp_s_reg_839;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_6_fu_261_p2;
    sc_signal< sc_lv<32> > INPUT_BUNDLE_addr_reg_844;
    sc_signal< sc_lv<32> > INPUT_BUNDLE_addr_1_reg_850;
    sc_signal< sc_lv<32> > INPUT_BUNDLE_addr_2_reg_856;
    sc_signal< sc_lv<32> > INPUT_BUNDLE_addr_3_reg_862;
    sc_signal< sc_lv<32> > INPUT_BUNDLE_addr_4_reg_868;
    sc_signal< sc_lv<32> > INPUT_BUNDLE_addr_5_reg_874;
    sc_signal< sc_lv<32> > INPUT_BUNDLE_addr_6_reg_880;
    sc_signal< sc_lv<32> > INPUT_BUNDLE_addr_7_reg_886;
    sc_signal< sc_lv<10> > j_1_fu_480_p2;
    sc_signal< sc_lv<10> > sum1_fu_516_p2;
    sc_signal< sc_lv<10> > sum1_reg_897;
    sc_signal< sc_lv<9> > sum5_neg_fu_522_p2;
    sc_signal< sc_lv<9> > sum5_neg_reg_902;
    sc_signal< sc_lv<11> > convulution_horizont_fu_571_p2;
    sc_signal< sc_lv<11> > convulution_horizont_reg_907;
    sc_signal< sc_lv<10> > tmp_19_fu_586_p2;
    sc_signal< sc_lv<10> > tmp_19_reg_912;
    sc_signal< sc_lv<11> > convulution_vertical_fu_625_p2;
    sc_signal< sc_lv<11> > convulution_vertical_reg_917;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<20> > tmp_24_fu_788_p2;
    sc_signal< sc_lv<20> > tmp_24_reg_922;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<20> > grp_fu_794_p3;
    sc_signal< sc_lv<20> > p_reg_927;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<64> > grp_fu_190_p1;
    sc_signal< sc_lv<64> > tmp_25_reg_937;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_lv<11> > loc_V_reg_942;
    sc_signal< sc_logic > ap_CS_fsm_state58;
    sc_signal< sc_lv<52> > loc_V_1_fu_655_p1;
    sc_signal< sc_lv<52> > loc_V_1_reg_948;
    sc_signal< sc_lv<1> > isNeg_fu_668_p3;
    sc_signal< sc_lv<1> > isNeg_reg_953;
    sc_signal< sc_logic > ap_CS_fsm_state59;
    sc_signal< sc_lv<12> > sh_assign_1_fu_685_p3;
    sc_signal< sc_lv<12> > sh_assign_1_reg_958;
    sc_signal< sc_lv<8> > tmp_31_fu_778_p1;
    sc_signal< sc_lv<8> > tmp_31_reg_967;
    sc_signal< sc_lv<10> > i_1_fu_782_p2;
    sc_signal< bool > ap_block_state67;
    sc_signal< sc_lv<10> > j_reg_166;
    sc_signal< sc_lv<10> > i_reg_178;
    sc_signal< sc_lv<32> > grp_fu_198_p2;
    sc_signal< sc_lv<32> > input2_sum_fu_293_p2;
    sc_signal< sc_lv<32> > input2_sum5_fu_322_p2;
    sc_signal< sc_lv<32> > input2_sum6_fu_343_p2;
    sc_signal< sc_lv<32> > input2_sum7_fu_364_p2;
    sc_signal< sc_lv<32> > input2_sum8_fu_384_p2;
    sc_signal< sc_lv<32> > input2_sum9_fu_405_p2;
    sc_signal< sc_lv<32> > input2_sum1_fu_437_p2;
    sc_signal< sc_lv<32> > input2_sum2_fu_469_p2;
    sc_signal< sc_logic > ap_reg_ioackin_INPUT_BUNDLE_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_OUTPUT_BUNDLE_AWREADY;
    sc_signal< sc_logic > ap_sig_ioackin_OUTPUT_BUNDLE_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_OUTPUT_BUNDLE_WREADY;
    sc_signal< sc_logic > ap_sig_ioackin_OUTPUT_BUNDLE_WREADY;
    sc_signal< sc_lv<32> > grp_fu_190_p0;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_lv<32> > tmp_9_fu_693_p1;
    sc_signal< sc_lv<20> > tmp_2_fu_231_p3;
    sc_signal< sc_lv<20> > tmp_3_fu_239_p2;
    sc_signal< sc_lv<21> > tmp_9_cast_fu_279_p1;
    sc_signal< sc_lv<21> > sum2_fu_283_p2;
    sc_signal< sc_lv<32> > sum2_cast_fu_289_p1;
    sc_signal< sc_lv<10> > tmp1_fu_304_p2;
    sc_signal< sc_lv<20> > sum4_fu_310_p3;
    sc_signal< sc_lv<32> > sum4_cast_fu_318_p1;
    sc_signal< sc_lv<21> > sum6_fu_333_p2;
    sc_signal< sc_lv<32> > sum6_cast_fu_339_p1;
    sc_signal< sc_lv<21> > sum8_fu_354_p2;
    sc_signal< sc_lv<32> > sum8_cast_fu_360_p1;
    sc_signal< sc_lv<21> > tmp_8_cast5_fu_267_p1;
    sc_signal< sc_lv<21> > sum3_fu_375_p2;
    sc_signal< sc_lv<32> > sum3_cast_fu_380_p1;
    sc_signal< sc_lv<21> > sum5_fu_395_p2;
    sc_signal< sc_lv<32> > sum5_cast_fu_401_p1;
    sc_signal< sc_lv<10> > tmp_11_fu_416_p4;
    sc_signal< sc_lv<20> > tmp_12_fu_425_p3;
    sc_signal< sc_lv<32> > tmp_13_fu_433_p1;
    sc_signal< sc_lv<10> > tmp_15_fu_448_p4;
    sc_signal< sc_lv<20> > tmp_16_fu_457_p3;
    sc_signal< sc_lv<32> > tmp_17_fu_465_p1;
    sc_signal< sc_lv<9> > tmp_1_fu_490_p3;
    sc_signal< sc_lv<9> > tmp_7_cast_fu_486_p1;
    sc_signal< sc_lv<9> > tmp_13_cast_fu_502_p1;
    sc_signal< sc_lv<9> > tmp2_fu_506_p2;
    sc_signal< sc_lv<10> > tmp2_cast_fu_512_p1;
    sc_signal< sc_lv<10> > tmp_12_cast_fu_498_p1;
    sc_signal< sc_lv<9> > tmp_8_fu_536_p3;
    sc_signal< sc_lv<11> > tmp_7_fu_528_p1;
    sc_signal< sc_lv<11> > sum1_cast_fu_552_p1;
    sc_signal< sc_lv<10> > tmp_16_cast_fu_544_p1;
    sc_signal< sc_lv<10> > tmp_17_cast_fu_548_p1;
    sc_signal< sc_lv<10> > tmp3_fu_561_p2;
    sc_signal< sc_lv<11> > tmp3_cast_fu_567_p1;
    sc_signal< sc_lv<11> > tmp_10_fu_555_p2;
    sc_signal< sc_lv<10> > sum5_neg_cast_fu_577_p1;
    sc_signal< sc_lv<10> > tmp_14_cast_fu_532_p1;
    sc_signal< sc_lv<10> > sum6_neg_fu_580_p2;
    sc_signal< sc_lv<9> > tmp_14_fu_592_p3;
    sc_signal< sc_lv<9> > tmp_18_fu_604_p3;
    sc_signal< sc_lv<11> > tmp_28_cast_fu_616_p1;
    sc_signal< sc_lv<11> > tmp_23_cast_fu_600_p1;
    sc_signal< sc_lv<11> > tmp_20_fu_619_p2;
    sc_signal< sc_lv<11> > tmp_27_cast_fu_612_p1;
    sc_signal< sc_lv<64> > grp_fu_193_p2;
    sc_signal< sc_lv<64> > p_Val2_s_fu_641_p1;
    sc_signal< sc_lv<12> > tmp_i_i_i_i_cast4_fu_659_p1;
    sc_signal< sc_lv<12> > sh_assign_fu_662_p2;
    sc_signal< sc_lv<11> > tmp_39_i_i_i_fu_676_p2;
    sc_signal< sc_lv<12> > tmp_39_i_i_i_cast_fu_681_p1;
    sc_signal< sc_lv<54> > tmp_i_i_i_fu_697_p4;
    sc_signal< sc_lv<32> > sh_assign_1_cast_fu_710_p1;
    sc_signal< sc_lv<54> > tmp_40_i_i_i_cast_fu_717_p1;
    sc_signal< sc_lv<121> > tmp_i_i_i_cast_fu_706_p1;
    sc_signal< sc_lv<121> > tmp_40_i_i_i_fu_713_p1;
    sc_signal< sc_lv<54> > tmp_41_i_i_i_fu_721_p2;
    sc_signal< sc_lv<1> > tmp_29_fu_733_p3;
    sc_signal< sc_lv<121> > tmp_42_i_i_i_fu_727_p2;
    sc_signal< sc_lv<68> > tmp_29_cast_fu_741_p1;
    sc_signal< sc_lv<68> > tmp_27_fu_745_p4;
    sc_signal< sc_lv<68> > tmp_28_fu_755_p3;
    sc_signal< sc_lv<2> > tmp_30_fu_762_p4;
    sc_signal< sc_lv<11> > tmp_24_fu_788_p0;
    sc_signal< sc_lv<20> > tmp_23_fu_631_p1;
    sc_signal< sc_lv<11> > tmp_24_fu_788_p1;
    sc_signal< sc_lv<11> > grp_fu_794_p0;
    sc_signal< sc_lv<20> > tmp_21_fu_634_p1;
    sc_signal< sc_lv<11> > grp_fu_794_p1;
    sc_signal< sc_lv<73> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<73> ap_ST_fsm_state1;
    static const sc_lv<73> ap_ST_fsm_state2;
    static const sc_lv<73> ap_ST_fsm_state3;
    static const sc_lv<73> ap_ST_fsm_state4;
    static const sc_lv<73> ap_ST_fsm_state5;
    static const sc_lv<73> ap_ST_fsm_state6;
    static const sc_lv<73> ap_ST_fsm_state7;
    static const sc_lv<73> ap_ST_fsm_state8;
    static const sc_lv<73> ap_ST_fsm_state9;
    static const sc_lv<73> ap_ST_fsm_state10;
    static const sc_lv<73> ap_ST_fsm_state11;
    static const sc_lv<73> ap_ST_fsm_state12;
    static const sc_lv<73> ap_ST_fsm_state13;
    static const sc_lv<73> ap_ST_fsm_state14;
    static const sc_lv<73> ap_ST_fsm_state15;
    static const sc_lv<73> ap_ST_fsm_state16;
    static const sc_lv<73> ap_ST_fsm_state17;
    static const sc_lv<73> ap_ST_fsm_state18;
    static const sc_lv<73> ap_ST_fsm_state19;
    static const sc_lv<73> ap_ST_fsm_state20;
    static const sc_lv<73> ap_ST_fsm_state21;
    static const sc_lv<73> ap_ST_fsm_state22;
    static const sc_lv<73> ap_ST_fsm_state23;
    static const sc_lv<73> ap_ST_fsm_state24;
    static const sc_lv<73> ap_ST_fsm_state25;
    static const sc_lv<73> ap_ST_fsm_state26;
    static const sc_lv<73> ap_ST_fsm_state27;
    static const sc_lv<73> ap_ST_fsm_state28;
    static const sc_lv<73> ap_ST_fsm_state29;
    static const sc_lv<73> ap_ST_fsm_state30;
    static const sc_lv<73> ap_ST_fsm_state31;
    static const sc_lv<73> ap_ST_fsm_state32;
    static const sc_lv<73> ap_ST_fsm_state33;
    static const sc_lv<73> ap_ST_fsm_state34;
    static const sc_lv<73> ap_ST_fsm_state35;
    static const sc_lv<73> ap_ST_fsm_state36;
    static const sc_lv<73> ap_ST_fsm_state37;
    static const sc_lv<73> ap_ST_fsm_state38;
    static const sc_lv<73> ap_ST_fsm_state39;
    static const sc_lv<73> ap_ST_fsm_state40;
    static const sc_lv<73> ap_ST_fsm_state41;
    static const sc_lv<73> ap_ST_fsm_state42;
    static const sc_lv<73> ap_ST_fsm_state43;
    static const sc_lv<73> ap_ST_fsm_state44;
    static const sc_lv<73> ap_ST_fsm_state45;
    static const sc_lv<73> ap_ST_fsm_state46;
    static const sc_lv<73> ap_ST_fsm_state47;
    static const sc_lv<73> ap_ST_fsm_state48;
    static const sc_lv<73> ap_ST_fsm_state49;
    static const sc_lv<73> ap_ST_fsm_state50;
    static const sc_lv<73> ap_ST_fsm_state51;
    static const sc_lv<73> ap_ST_fsm_state52;
    static const sc_lv<73> ap_ST_fsm_state53;
    static const sc_lv<73> ap_ST_fsm_state54;
    static const sc_lv<73> ap_ST_fsm_state55;
    static const sc_lv<73> ap_ST_fsm_state56;
    static const sc_lv<73> ap_ST_fsm_state57;
    static const sc_lv<73> ap_ST_fsm_state58;
    static const sc_lv<73> ap_ST_fsm_state59;
    static const sc_lv<73> ap_ST_fsm_state60;
    static const sc_lv<73> ap_ST_fsm_state61;
    static const sc_lv<73> ap_ST_fsm_state62;
    static const sc_lv<73> ap_ST_fsm_state63;
    static const sc_lv<73> ap_ST_fsm_state64;
    static const sc_lv<73> ap_ST_fsm_state65;
    static const sc_lv<73> ap_ST_fsm_state66;
    static const sc_lv<73> ap_ST_fsm_state67;
    static const sc_lv<73> ap_ST_fsm_state68;
    static const sc_lv<73> ap_ST_fsm_state69;
    static const sc_lv<73> ap_ST_fsm_state70;
    static const sc_lv<73> ap_ST_fsm_state71;
    static const sc_lv<73> ap_ST_fsm_state72;
    static const sc_lv<73> ap_ST_fsm_state73;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_3C;
    static const sc_lv<32> ap_const_lv32_3D;
    static const sc_lv<32> ap_const_lv32_42;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_43;
    static const sc_lv<32> ap_const_lv32_44;
    static const sc_lv<1> ap_const_lv1_1;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_INPUT_BUNDLE_USER_VALUE;
    static const int C_M_AXI_INPUT_BUNDLE_PROT_VALUE;
    static const int C_M_AXI_INPUT_BUNDLE_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_OUTPUT_BUNDLE_USER_VALUE;
    static const int C_M_AXI_OUTPUT_BUNDLE_PROT_VALUE;
    static const int C_M_AXI_OUTPUT_BUNDLE_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_3B;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_39;
    static const sc_lv<32> ap_const_lv32_3A;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<10> ap_const_lv10_3FF;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<20> ap_const_lv20_1;
    static const sc_lv<20> ap_const_lv20_400;
    static const sc_lv<20> ap_const_lv20_FFC00;
    static const sc_lv<21> ap_const_lv21_1FFBFF;
    static const sc_lv<21> ap_const_lv21_3FF;
    static const sc_lv<21> ap_const_lv21_1FFC01;
    static const sc_lv<21> ap_const_lv21_401;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<12> ap_const_lv12_C01;
    static const sc_lv<11> ap_const_lv11_3FF;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<32> ap_const_lv32_78;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const10();
    void thread_ap_clk_no_reset_();
    void thread_INPUT_BUNDLE_ARADDR();
    void thread_INPUT_BUNDLE_ARVALID();
    void thread_INPUT_BUNDLE_RREADY();
    void thread_INPUT_BUNDLE_blk_n_AR();
    void thread_INPUT_BUNDLE_blk_n_R();
    void thread_OUTPUT_BUNDLE_AWVALID();
    void thread_OUTPUT_BUNDLE_BREADY();
    void thread_OUTPUT_BUNDLE_WDATA();
    void thread_OUTPUT_BUNDLE_WVALID();
    void thread_OUTPUT_BUNDLE_blk_n_AW();
    void thread_OUTPUT_BUNDLE_blk_n_B();
    void thread_OUTPUT_BUNDLE_blk_n_W();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state58();
    void thread_ap_CS_fsm_state59();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state60();
    void thread_ap_CS_fsm_state61();
    void thread_ap_CS_fsm_state62();
    void thread_ap_CS_fsm_state67();
    void thread_ap_CS_fsm_state68();
    void thread_ap_CS_fsm_state69();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state67();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_INPUT_BUNDLE_ARREADY();
    void thread_ap_sig_ioackin_OUTPUT_BUNDLE_AWREADY();
    void thread_ap_sig_ioackin_OUTPUT_BUNDLE_WREADY();
    void thread_convulution_horizont_fu_571_p2();
    void thread_convulution_vertical_fu_625_p2();
    void thread_grp_fu_190_p0();
    void thread_grp_fu_198_p2();
    void thread_grp_fu_794_p0();
    void thread_grp_fu_794_p1();
    void thread_i_1_fu_782_p2();
    void thread_icmp_fu_772_p2();
    void thread_input2_sum1_fu_437_p2();
    void thread_input2_sum2_fu_469_p2();
    void thread_input2_sum5_fu_322_p2();
    void thread_input2_sum6_fu_343_p2();
    void thread_input2_sum7_fu_364_p2();
    void thread_input2_sum8_fu_384_p2();
    void thread_input2_sum9_fu_405_p2();
    void thread_input2_sum_fu_293_p2();
    void thread_isNeg_fu_668_p3();
    void thread_j_1_fu_480_p2();
    void thread_loc_V_1_fu_655_p1();
    void thread_p_Val2_s_fu_641_p1();
    void thread_sh_assign_1_cast_fu_710_p1();
    void thread_sh_assign_1_fu_685_p3();
    void thread_sh_assign_fu_662_p2();
    void thread_sum1_cast_fu_552_p1();
    void thread_sum1_fu_516_p2();
    void thread_sum2_cast_fu_289_p1();
    void thread_sum2_fu_283_p2();
    void thread_sum3_cast_fu_380_p1();
    void thread_sum3_fu_375_p2();
    void thread_sum4_cast_fu_318_p1();
    void thread_sum4_fu_310_p3();
    void thread_sum5_cast_fu_401_p1();
    void thread_sum5_fu_395_p2();
    void thread_sum5_neg_cast_fu_577_p1();
    void thread_sum5_neg_fu_522_p2();
    void thread_sum6_cast_fu_339_p1();
    void thread_sum6_fu_333_p2();
    void thread_sum6_neg_fu_580_p2();
    void thread_sum8_cast_fu_360_p1();
    void thread_sum8_fu_354_p2();
    void thread_tmp1_fu_304_p2();
    void thread_tmp2_cast_fu_512_p1();
    void thread_tmp2_fu_506_p2();
    void thread_tmp3_cast_fu_567_p1();
    void thread_tmp3_fu_561_p2();
    void thread_tmp_10_fu_555_p2();
    void thread_tmp_11_fu_416_p4();
    void thread_tmp_12_cast_fu_498_p1();
    void thread_tmp_12_fu_425_p3();
    void thread_tmp_13_cast_fu_502_p1();
    void thread_tmp_13_fu_433_p1();
    void thread_tmp_14_cast_fu_532_p1();
    void thread_tmp_14_fu_592_p3();
    void thread_tmp_15_fu_448_p4();
    void thread_tmp_16_cast_fu_544_p1();
    void thread_tmp_16_fu_457_p3();
    void thread_tmp_17_cast_fu_548_p1();
    void thread_tmp_17_fu_465_p1();
    void thread_tmp_18_fu_604_p3();
    void thread_tmp_19_fu_586_p2();
    void thread_tmp_1_fu_490_p3();
    void thread_tmp_20_fu_619_p2();
    void thread_tmp_21_fu_634_p1();
    void thread_tmp_23_cast_fu_600_p1();
    void thread_tmp_23_fu_631_p1();
    void thread_tmp_24_fu_788_p0();
    void thread_tmp_24_fu_788_p1();
    void thread_tmp_27_cast_fu_612_p1();
    void thread_tmp_27_fu_745_p4();
    void thread_tmp_28_cast_fu_616_p1();
    void thread_tmp_28_fu_755_p3();
    void thread_tmp_29_cast_fu_741_p1();
    void thread_tmp_29_fu_733_p3();
    void thread_tmp_2_fu_231_p3();
    void thread_tmp_30_fu_762_p4();
    void thread_tmp_31_fu_778_p1();
    void thread_tmp_39_i_i_i_cast_fu_681_p1();
    void thread_tmp_39_i_i_i_fu_676_p2();
    void thread_tmp_3_cast_fu_245_p1();
    void thread_tmp_3_fu_239_p2();
    void thread_tmp_40_i_i_i_cast_fu_717_p1();
    void thread_tmp_40_i_i_i_fu_713_p1();
    void thread_tmp_41_i_i_i_fu_721_p2();
    void thread_tmp_42_i_i_i_fu_727_p2();
    void thread_tmp_4_fu_249_p2();
    void thread_tmp_5_fu_255_p2();
    void thread_tmp_6_fu_261_p2();
    void thread_tmp_7_cast_fu_486_p1();
    void thread_tmp_7_fu_528_p1();
    void thread_tmp_8_cast5_fu_267_p1();
    void thread_tmp_8_fu_536_p3();
    void thread_tmp_9_cast_fu_279_p1();
    void thread_tmp_9_fu_693_p1();
    void thread_tmp_fu_225_p2();
    void thread_tmp_i_i_i_cast_fu_706_p1();
    void thread_tmp_i_i_i_fu_697_p4();
    void thread_tmp_i_i_i_i_cast4_fu_659_p1();
    void thread_tmp_s_fu_271_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
