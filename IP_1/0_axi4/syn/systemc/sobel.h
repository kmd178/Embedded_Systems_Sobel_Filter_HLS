// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sobel_HH_
#define _sobel_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "convolution2D.h"
#include "sobel_sitodp_32nsdEe.h"
#include "sobel_dsqrt_64ns_eOg.h"
#include "sobel_mul_32s_32sfYi.h"
#include "sobel_horiz_operacud.h"
#include "sobel_vert_operator.h"
#include "sobel_AXILiteS_s_axi.h"
#include "sobel_INPUT_BUNDLE_m_axi.h"
#include "sobel_OUTPUT_BUNDLE_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_INPUT_BUNDLE_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_INPUT_BUNDLE_ID_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_BUNDLE_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_BUNDLE_DATA_WIDTH = 32,
         unsigned int C_M_AXI_INPUT_BUNDLE_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_BUNDLE_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_BUNDLE_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_BUNDLE_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_BUNDLE_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_OUTPUT_BUNDLE_ID_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_BUNDLE_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_BUNDLE_DATA_WIDTH = 32,
         unsigned int C_M_AXI_OUTPUT_BUNDLE_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_BUNDLE_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_BUNDLE_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_BUNDLE_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct sobel : public sc_module {
    // Port declarations 110
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_INPUT_BUNDLE_AWVALID;
    sc_in< sc_logic > m_axi_INPUT_BUNDLE_AWREADY;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_ADDR_WIDTH> > m_axi_INPUT_BUNDLE_AWADDR;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_ID_WIDTH> > m_axi_INPUT_BUNDLE_AWID;
    sc_out< sc_lv<8> > m_axi_INPUT_BUNDLE_AWLEN;
    sc_out< sc_lv<3> > m_axi_INPUT_BUNDLE_AWSIZE;
    sc_out< sc_lv<2> > m_axi_INPUT_BUNDLE_AWBURST;
    sc_out< sc_lv<2> > m_axi_INPUT_BUNDLE_AWLOCK;
    sc_out< sc_lv<4> > m_axi_INPUT_BUNDLE_AWCACHE;
    sc_out< sc_lv<3> > m_axi_INPUT_BUNDLE_AWPROT;
    sc_out< sc_lv<4> > m_axi_INPUT_BUNDLE_AWQOS;
    sc_out< sc_lv<4> > m_axi_INPUT_BUNDLE_AWREGION;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_AWUSER_WIDTH> > m_axi_INPUT_BUNDLE_AWUSER;
    sc_out< sc_logic > m_axi_INPUT_BUNDLE_WVALID;
    sc_in< sc_logic > m_axi_INPUT_BUNDLE_WREADY;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_DATA_WIDTH> > m_axi_INPUT_BUNDLE_WDATA;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_DATA_WIDTH/8> > m_axi_INPUT_BUNDLE_WSTRB;
    sc_out< sc_logic > m_axi_INPUT_BUNDLE_WLAST;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_ID_WIDTH> > m_axi_INPUT_BUNDLE_WID;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_WUSER_WIDTH> > m_axi_INPUT_BUNDLE_WUSER;
    sc_out< sc_logic > m_axi_INPUT_BUNDLE_ARVALID;
    sc_in< sc_logic > m_axi_INPUT_BUNDLE_ARREADY;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_ADDR_WIDTH> > m_axi_INPUT_BUNDLE_ARADDR;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_ID_WIDTH> > m_axi_INPUT_BUNDLE_ARID;
    sc_out< sc_lv<8> > m_axi_INPUT_BUNDLE_ARLEN;
    sc_out< sc_lv<3> > m_axi_INPUT_BUNDLE_ARSIZE;
    sc_out< sc_lv<2> > m_axi_INPUT_BUNDLE_ARBURST;
    sc_out< sc_lv<2> > m_axi_INPUT_BUNDLE_ARLOCK;
    sc_out< sc_lv<4> > m_axi_INPUT_BUNDLE_ARCACHE;
    sc_out< sc_lv<3> > m_axi_INPUT_BUNDLE_ARPROT;
    sc_out< sc_lv<4> > m_axi_INPUT_BUNDLE_ARQOS;
    sc_out< sc_lv<4> > m_axi_INPUT_BUNDLE_ARREGION;
    sc_out< sc_uint<C_M_AXI_INPUT_BUNDLE_ARUSER_WIDTH> > m_axi_INPUT_BUNDLE_ARUSER;
    sc_in< sc_logic > m_axi_INPUT_BUNDLE_RVALID;
    sc_out< sc_logic > m_axi_INPUT_BUNDLE_RREADY;
    sc_in< sc_uint<C_M_AXI_INPUT_BUNDLE_DATA_WIDTH> > m_axi_INPUT_BUNDLE_RDATA;
    sc_in< sc_logic > m_axi_INPUT_BUNDLE_RLAST;
    sc_in< sc_uint<C_M_AXI_INPUT_BUNDLE_ID_WIDTH> > m_axi_INPUT_BUNDLE_RID;
    sc_in< sc_uint<C_M_AXI_INPUT_BUNDLE_RUSER_WIDTH> > m_axi_INPUT_BUNDLE_RUSER;
    sc_in< sc_lv<2> > m_axi_INPUT_BUNDLE_RRESP;
    sc_in< sc_logic > m_axi_INPUT_BUNDLE_BVALID;
    sc_out< sc_logic > m_axi_INPUT_BUNDLE_BREADY;
    sc_in< sc_lv<2> > m_axi_INPUT_BUNDLE_BRESP;
    sc_in< sc_uint<C_M_AXI_INPUT_BUNDLE_ID_WIDTH> > m_axi_INPUT_BUNDLE_BID;
    sc_in< sc_uint<C_M_AXI_INPUT_BUNDLE_BUSER_WIDTH> > m_axi_INPUT_BUNDLE_BUSER;
    sc_out< sc_logic > m_axi_OUTPUT_BUNDLE_AWVALID;
    sc_in< sc_logic > m_axi_OUTPUT_BUNDLE_AWREADY;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_ADDR_WIDTH> > m_axi_OUTPUT_BUNDLE_AWADDR;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_ID_WIDTH> > m_axi_OUTPUT_BUNDLE_AWID;
    sc_out< sc_lv<8> > m_axi_OUTPUT_BUNDLE_AWLEN;
    sc_out< sc_lv<3> > m_axi_OUTPUT_BUNDLE_AWSIZE;
    sc_out< sc_lv<2> > m_axi_OUTPUT_BUNDLE_AWBURST;
    sc_out< sc_lv<2> > m_axi_OUTPUT_BUNDLE_AWLOCK;
    sc_out< sc_lv<4> > m_axi_OUTPUT_BUNDLE_AWCACHE;
    sc_out< sc_lv<3> > m_axi_OUTPUT_BUNDLE_AWPROT;
    sc_out< sc_lv<4> > m_axi_OUTPUT_BUNDLE_AWQOS;
    sc_out< sc_lv<4> > m_axi_OUTPUT_BUNDLE_AWREGION;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_AWUSER_WIDTH> > m_axi_OUTPUT_BUNDLE_AWUSER;
    sc_out< sc_logic > m_axi_OUTPUT_BUNDLE_WVALID;
    sc_in< sc_logic > m_axi_OUTPUT_BUNDLE_WREADY;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_DATA_WIDTH> > m_axi_OUTPUT_BUNDLE_WDATA;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_DATA_WIDTH/8> > m_axi_OUTPUT_BUNDLE_WSTRB;
    sc_out< sc_logic > m_axi_OUTPUT_BUNDLE_WLAST;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_ID_WIDTH> > m_axi_OUTPUT_BUNDLE_WID;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_WUSER_WIDTH> > m_axi_OUTPUT_BUNDLE_WUSER;
    sc_out< sc_logic > m_axi_OUTPUT_BUNDLE_ARVALID;
    sc_in< sc_logic > m_axi_OUTPUT_BUNDLE_ARREADY;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_ADDR_WIDTH> > m_axi_OUTPUT_BUNDLE_ARADDR;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_ID_WIDTH> > m_axi_OUTPUT_BUNDLE_ARID;
    sc_out< sc_lv<8> > m_axi_OUTPUT_BUNDLE_ARLEN;
    sc_out< sc_lv<3> > m_axi_OUTPUT_BUNDLE_ARSIZE;
    sc_out< sc_lv<2> > m_axi_OUTPUT_BUNDLE_ARBURST;
    sc_out< sc_lv<2> > m_axi_OUTPUT_BUNDLE_ARLOCK;
    sc_out< sc_lv<4> > m_axi_OUTPUT_BUNDLE_ARCACHE;
    sc_out< sc_lv<3> > m_axi_OUTPUT_BUNDLE_ARPROT;
    sc_out< sc_lv<4> > m_axi_OUTPUT_BUNDLE_ARQOS;
    sc_out< sc_lv<4> > m_axi_OUTPUT_BUNDLE_ARREGION;
    sc_out< sc_uint<C_M_AXI_OUTPUT_BUNDLE_ARUSER_WIDTH> > m_axi_OUTPUT_BUNDLE_ARUSER;
    sc_in< sc_logic > m_axi_OUTPUT_BUNDLE_RVALID;
    sc_out< sc_logic > m_axi_OUTPUT_BUNDLE_RREADY;
    sc_in< sc_uint<C_M_AXI_OUTPUT_BUNDLE_DATA_WIDTH> > m_axi_OUTPUT_BUNDLE_RDATA;
    sc_in< sc_logic > m_axi_OUTPUT_BUNDLE_RLAST;
    sc_in< sc_uint<C_M_AXI_OUTPUT_BUNDLE_ID_WIDTH> > m_axi_OUTPUT_BUNDLE_RID;
    sc_in< sc_uint<C_M_AXI_OUTPUT_BUNDLE_RUSER_WIDTH> > m_axi_OUTPUT_BUNDLE_RUSER;
    sc_in< sc_lv<2> > m_axi_OUTPUT_BUNDLE_RRESP;
    sc_in< sc_logic > m_axi_OUTPUT_BUNDLE_BVALID;
    sc_out< sc_logic > m_axi_OUTPUT_BUNDLE_BREADY;
    sc_in< sc_lv<2> > m_axi_OUTPUT_BUNDLE_BRESP;
    sc_in< sc_uint<C_M_AXI_OUTPUT_BUNDLE_ID_WIDTH> > m_axi_OUTPUT_BUNDLE_BID;
    sc_in< sc_uint<C_M_AXI_OUTPUT_BUNDLE_BUSER_WIDTH> > m_axi_OUTPUT_BUNDLE_BUSER;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<1> > ap_var_for_const9;
    sc_signal< sc_lv<1> > ap_var_for_const3;
    sc_signal< sc_lv<32> > ap_var_for_const8;
    sc_signal< sc_lv<3> > ap_var_for_const4;
    sc_signal< sc_lv<2> > ap_var_for_const5;
    sc_signal< sc_lv<4> > ap_var_for_const6;
    sc_signal< sc_lv<8> > ap_var_for_const7;
    sc_signal< sc_lv<64> > ap_var_for_const10;


    // Module declarations
    sobel(sc_module_name name);
    SC_HAS_PROCESS(sobel);

    ~sobel();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sobel_horiz_operacud* horiz_operator_U;
    sobel_vert_operator* vert_operator_U;
    sobel_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* sobel_AXILiteS_s_axi_U;
    sobel_INPUT_BUNDLE_m_axi<8,32,5,16,16,16,16,C_M_AXI_INPUT_BUNDLE_ID_WIDTH,C_M_AXI_INPUT_BUNDLE_ADDR_WIDTH,C_M_AXI_INPUT_BUNDLE_DATA_WIDTH,C_M_AXI_INPUT_BUNDLE_AWUSER_WIDTH,C_M_AXI_INPUT_BUNDLE_ARUSER_WIDTH,C_M_AXI_INPUT_BUNDLE_WUSER_WIDTH,C_M_AXI_INPUT_BUNDLE_RUSER_WIDTH,C_M_AXI_INPUT_BUNDLE_BUSER_WIDTH,C_M_AXI_INPUT_BUNDLE_USER_VALUE,C_M_AXI_INPUT_BUNDLE_PROT_VALUE,C_M_AXI_INPUT_BUNDLE_CACHE_VALUE>* sobel_INPUT_BUNDLE_m_axi_U;
    sobel_OUTPUT_BUNDLE_m_axi<8,32,5,16,16,16,16,C_M_AXI_OUTPUT_BUNDLE_ID_WIDTH,C_M_AXI_OUTPUT_BUNDLE_ADDR_WIDTH,C_M_AXI_OUTPUT_BUNDLE_DATA_WIDTH,C_M_AXI_OUTPUT_BUNDLE_AWUSER_WIDTH,C_M_AXI_OUTPUT_BUNDLE_ARUSER_WIDTH,C_M_AXI_OUTPUT_BUNDLE_WUSER_WIDTH,C_M_AXI_OUTPUT_BUNDLE_RUSER_WIDTH,C_M_AXI_OUTPUT_BUNDLE_BUSER_WIDTH,C_M_AXI_OUTPUT_BUNDLE_USER_VALUE,C_M_AXI_OUTPUT_BUNDLE_PROT_VALUE,C_M_AXI_OUTPUT_BUNDLE_CACHE_VALUE>* sobel_OUTPUT_BUNDLE_m_axi_U;
    convolution2D* grp_convolution2D_fu_160;
    sobel_sitodp_32nsdEe<1,6,32,64>* sobel_sitodp_32nsdEe_U6;
    sobel_dsqrt_64ns_eOg<1,31,64,64,64>* sobel_dsqrt_64ns_eOg_U7;
    sobel_mul_32s_32sfYi<1,3,32,32,32>* sobel_mul_32s_32sfYi_U8;
    sobel_mul_32s_32sfYi<1,3,32,32,32>* sobel_mul_32s_32sfYi_U9;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<62> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > input_r;
    sc_signal< sc_lv<32> > output_r;
    sc_signal< sc_logic > horiz_operator_ce0;
    sc_signal< sc_lv<32> > horiz_operator_q0;
    sc_signal< sc_logic > vert_operator_ce0;
    sc_signal< sc_lv<32> > vert_operator_q0;
    sc_signal< sc_logic > OUTPUT_BUNDLE_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state57;
    sc_signal< sc_logic > OUTPUT_BUNDLE_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state58;
    sc_signal< sc_logic > OUTPUT_BUNDLE_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state56;
    sc_signal< sc_lv<1> > icmp_reg_513;
    sc_signal< sc_logic > ap_CS_fsm_state50;
    sc_signal< sc_logic > ap_CS_fsm_state51;
    sc_signal< sc_logic > INPUT_BUNDLE_AWREADY;
    sc_signal< sc_logic > INPUT_BUNDLE_WREADY;
    sc_signal< sc_logic > INPUT_BUNDLE_ARVALID;
    sc_signal< sc_logic > INPUT_BUNDLE_ARREADY;
    sc_signal< sc_logic > INPUT_BUNDLE_RVALID;
    sc_signal< sc_logic > INPUT_BUNDLE_RREADY;
    sc_signal< sc_lv<8> > INPUT_BUNDLE_RDATA;
    sc_signal< sc_logic > INPUT_BUNDLE_RLAST;
    sc_signal< sc_lv<1> > INPUT_BUNDLE_RID;
    sc_signal< sc_lv<1> > INPUT_BUNDLE_RUSER;
    sc_signal< sc_lv<2> > INPUT_BUNDLE_RRESP;
    sc_signal< sc_logic > INPUT_BUNDLE_BVALID;
    sc_signal< sc_lv<2> > INPUT_BUNDLE_BRESP;
    sc_signal< sc_lv<1> > INPUT_BUNDLE_BID;
    sc_signal< sc_lv<1> > INPUT_BUNDLE_BUSER;
    sc_signal< sc_logic > OUTPUT_BUNDLE_AWVALID;
    sc_signal< sc_logic > OUTPUT_BUNDLE_AWREADY;
    sc_signal< sc_lv<32> > OUTPUT_BUNDLE_AWADDR;
    sc_signal< sc_logic > OUTPUT_BUNDLE_WVALID;
    sc_signal< sc_logic > OUTPUT_BUNDLE_WREADY;
    sc_signal< sc_lv<8> > OUTPUT_BUNDLE_WDATA;
    sc_signal< sc_logic > OUTPUT_BUNDLE_ARREADY;
    sc_signal< sc_logic > OUTPUT_BUNDLE_RVALID;
    sc_signal< sc_lv<8> > OUTPUT_BUNDLE_RDATA;
    sc_signal< sc_logic > OUTPUT_BUNDLE_RLAST;
    sc_signal< sc_lv<1> > OUTPUT_BUNDLE_RID;
    sc_signal< sc_lv<1> > OUTPUT_BUNDLE_RUSER;
    sc_signal< sc_lv<2> > OUTPUT_BUNDLE_RRESP;
    sc_signal< sc_logic > OUTPUT_BUNDLE_BVALID;
    sc_signal< sc_logic > OUTPUT_BUNDLE_BREADY;
    sc_signal< sc_lv<2> > OUTPUT_BUNDLE_BRESP;
    sc_signal< sc_lv<1> > OUTPUT_BUNDLE_BID;
    sc_signal< sc_lv<1> > OUTPUT_BUNDLE_BUSER;
    sc_signal< sc_lv<32> > output_read_reg_429;
    sc_signal< sc_lv<32> > input_read_reg_435;
    sc_signal< sc_lv<10> > j_1_fu_195_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond_fu_189_p2;
    sc_signal< sc_lv<32> > grp_convolution2D_fu_160_ap_return;
    sc_signal< sc_lv<32> > tmp_reg_451;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > grp_convolution2D_fu_160_ap_done;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > grp_fu_201_p2;
    sc_signal< sc_lv<32> > tmp_2_reg_463;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > grp_fu_205_p2;
    sc_signal< sc_lv<32> > tmp_5_reg_468;
    sc_signal< sc_lv<32> > tmp_6_fu_211_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_473;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<64> > grp_fu_175_p1;
    sc_signal< sc_lv<64> > p_reg_478;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<64> > grp_fu_178_p2;
    sc_signal< sc_lv<64> > x_assign_reg_483;
    sc_signal< sc_logic > ap_CS_fsm_state46;
    sc_signal< sc_lv<1> > p_Result_s_reg_488;
    sc_signal< sc_logic > ap_CS_fsm_state47;
    sc_signal< sc_lv<52> > loc_V_1_fu_236_p1;
    sc_signal< sc_lv<52> > loc_V_1_reg_493;
    sc_signal< sc_lv<1> > isNeg_fu_250_p3;
    sc_signal< sc_lv<1> > isNeg_reg_498;
    sc_signal< sc_lv<12> > sh_assign_1_fu_268_p3;
    sc_signal< sc_lv<12> > sh_assign_1_reg_503;
    sc_signal< sc_lv<31> > p_Val2_3_fu_334_p3;
    sc_signal< sc_lv<31> > p_Val2_3_reg_508;
    sc_signal< sc_logic > ap_CS_fsm_state48;
    sc_signal< sc_lv<1> > icmp_fu_367_p2;
    sc_signal< sc_logic > ap_CS_fsm_state49;
    sc_signal< sc_lv<8> > tmp_12_fu_373_p1;
    sc_signal< sc_lv<8> > tmp_12_reg_517;
    sc_signal< sc_lv<32> > OUTPUT_BUNDLE_addr_1_reg_522;
    sc_signal< sc_lv<32> > OUTPUT_BUNDLE_addr_reg_527;
    sc_signal< sc_lv<10> > i_1_fu_423_p2;
    sc_signal< bool > ap_block_state56;
    sc_signal< sc_logic > grp_convolution2D_fu_160_ap_start;
    sc_signal< sc_logic > grp_convolution2D_fu_160_ap_idle;
    sc_signal< sc_logic > grp_convolution2D_fu_160_ap_ready;
    sc_signal< sc_logic > grp_convolution2D_fu_160_m_axi_input_r_AWVALID;
    sc_signal< sc_lv<32> > grp_convolution2D_fu_160_m_axi_input_r_AWADDR;
    sc_signal< sc_lv<1> > grp_convolution2D_fu_160_m_axi_input_r_AWID;
    sc_signal< sc_lv<32> > grp_convolution2D_fu_160_m_axi_input_r_AWLEN;
    sc_signal< sc_lv<3> > grp_convolution2D_fu_160_m_axi_input_r_AWSIZE;
    sc_signal< sc_lv<2> > grp_convolution2D_fu_160_m_axi_input_r_AWBURST;
    sc_signal< sc_lv<2> > grp_convolution2D_fu_160_m_axi_input_r_AWLOCK;
    sc_signal< sc_lv<4> > grp_convolution2D_fu_160_m_axi_input_r_AWCACHE;
    sc_signal< sc_lv<3> > grp_convolution2D_fu_160_m_axi_input_r_AWPROT;
    sc_signal< sc_lv<4> > grp_convolution2D_fu_160_m_axi_input_r_AWQOS;
    sc_signal< sc_lv<4> > grp_convolution2D_fu_160_m_axi_input_r_AWREGION;
    sc_signal< sc_lv<1> > grp_convolution2D_fu_160_m_axi_input_r_AWUSER;
    sc_signal< sc_logic > grp_convolution2D_fu_160_m_axi_input_r_WVALID;
    sc_signal< sc_lv<8> > grp_convolution2D_fu_160_m_axi_input_r_WDATA;
    sc_signal< sc_lv<1> > grp_convolution2D_fu_160_m_axi_input_r_WSTRB;
    sc_signal< sc_logic > grp_convolution2D_fu_160_m_axi_input_r_WLAST;
    sc_signal< sc_lv<1> > grp_convolution2D_fu_160_m_axi_input_r_WID;
    sc_signal< sc_lv<1> > grp_convolution2D_fu_160_m_axi_input_r_WUSER;
    sc_signal< sc_logic > grp_convolution2D_fu_160_m_axi_input_r_ARVALID;
    sc_signal< sc_lv<32> > grp_convolution2D_fu_160_m_axi_input_r_ARADDR;
    sc_signal< sc_lv<1> > grp_convolution2D_fu_160_m_axi_input_r_ARID;
    sc_signal< sc_lv<32> > grp_convolution2D_fu_160_m_axi_input_r_ARLEN;
    sc_signal< sc_lv<3> > grp_convolution2D_fu_160_m_axi_input_r_ARSIZE;
    sc_signal< sc_lv<2> > grp_convolution2D_fu_160_m_axi_input_r_ARBURST;
    sc_signal< sc_lv<2> > grp_convolution2D_fu_160_m_axi_input_r_ARLOCK;
    sc_signal< sc_lv<4> > grp_convolution2D_fu_160_m_axi_input_r_ARCACHE;
    sc_signal< sc_lv<3> > grp_convolution2D_fu_160_m_axi_input_r_ARPROT;
    sc_signal< sc_lv<4> > grp_convolution2D_fu_160_m_axi_input_r_ARQOS;
    sc_signal< sc_lv<4> > grp_convolution2D_fu_160_m_axi_input_r_ARREGION;
    sc_signal< sc_lv<1> > grp_convolution2D_fu_160_m_axi_input_r_ARUSER;
    sc_signal< sc_logic > grp_convolution2D_fu_160_m_axi_input_r_RREADY;
    sc_signal< sc_logic > grp_convolution2D_fu_160_m_axi_input_r_BREADY;
    sc_signal< sc_lv<4> > grp_convolution2D_fu_160_operator_address0;
    sc_signal< sc_logic > grp_convolution2D_fu_160_operator_ce0;
    sc_signal< sc_lv<32> > grp_convolution2D_fu_160_operator_q0;
    sc_signal< sc_lv<10> > j_reg_136;
    sc_signal< sc_lv<10> > i_reg_148;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond1_fu_183_p2;
    sc_signal< sc_logic > ap_reg_grp_convolution2D_fu_160_ap_start;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > output4_sum_fu_389_p2;
    sc_signal< sc_lv<32> > output4_sum5_fu_412_p2;
    sc_signal< sc_logic > ap_reg_ioackin_OUTPUT_BUNDLE_AWREADY;
    sc_signal< sc_logic > ap_sig_ioackin_OUTPUT_BUNDLE_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_OUTPUT_BUNDLE_WREADY;
    sc_signal< sc_logic > ap_sig_ioackin_OUTPUT_BUNDLE_WREADY;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<64> > p_Val2_1_fu_215_p1;
    sc_signal< sc_lv<11> > loc_V_fu_226_p4;
    sc_signal< sc_lv<12> > tmp_i_i_i_i_cast1_fu_240_p1;
    sc_signal< sc_lv<12> > sh_assign_fu_244_p2;
    sc_signal< sc_lv<11> > tmp_4_i_i_i_fu_258_p2;
    sc_signal< sc_lv<12> > tmp_4_i_i_i_cast_fu_264_p1;
    sc_signal< sc_lv<54> > tmp_i_i_i_fu_276_p4;
    sc_signal< sc_lv<32> > sh_assign_1_cast_fu_289_p1;
    sc_signal< sc_lv<54> > tmp_5_i_i_i_cast_fu_296_p1;
    sc_signal< sc_lv<137> > tmp_i_i_i_cast_fu_285_p1;
    sc_signal< sc_lv<137> > tmp_5_i_i_i_fu_292_p1;
    sc_signal< sc_lv<54> > tmp_6_i_i_i_fu_300_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_312_p3;
    sc_signal< sc_lv<137> > tmp_7_i_i_i_fu_306_p2;
    sc_signal< sc_lv<31> > tmp_4_fu_320_p1;
    sc_signal< sc_lv<31> > tmp_7_fu_324_p4;
    sc_signal< sc_lv<32> > tmp_9_i_i_i_fu_341_p1;
    sc_signal< sc_lv<32> > tmp_12_i_i_i_fu_344_p2;
    sc_signal< sc_lv<32> > p_Val2_s_fu_350_p3;
    sc_signal< sc_lv<24> > tmp_11_fu_357_p4;
    sc_signal< sc_lv<20> > sum3_fu_377_p3;
    sc_signal< sc_lv<32> > sum3_cast_fu_385_p1;
    sc_signal< sc_lv<20> > sum_fu_400_p3;
    sc_signal< sc_lv<32> > sum_cast_fu_408_p1;
    sc_signal< sc_logic > grp_fu_201_ce;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > grp_fu_205_ce;
    sc_signal< sc_lv<62> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<62> ap_ST_fsm_state1;
    static const sc_lv<62> ap_ST_fsm_state2;
    static const sc_lv<62> ap_ST_fsm_state3;
    static const sc_lv<62> ap_ST_fsm_state4;
    static const sc_lv<62> ap_ST_fsm_state5;
    static const sc_lv<62> ap_ST_fsm_state6;
    static const sc_lv<62> ap_ST_fsm_state7;
    static const sc_lv<62> ap_ST_fsm_state8;
    static const sc_lv<62> ap_ST_fsm_state9;
    static const sc_lv<62> ap_ST_fsm_state10;
    static const sc_lv<62> ap_ST_fsm_state11;
    static const sc_lv<62> ap_ST_fsm_state12;
    static const sc_lv<62> ap_ST_fsm_state13;
    static const sc_lv<62> ap_ST_fsm_state14;
    static const sc_lv<62> ap_ST_fsm_state15;
    static const sc_lv<62> ap_ST_fsm_state16;
    static const sc_lv<62> ap_ST_fsm_state17;
    static const sc_lv<62> ap_ST_fsm_state18;
    static const sc_lv<62> ap_ST_fsm_state19;
    static const sc_lv<62> ap_ST_fsm_state20;
    static const sc_lv<62> ap_ST_fsm_state21;
    static const sc_lv<62> ap_ST_fsm_state22;
    static const sc_lv<62> ap_ST_fsm_state23;
    static const sc_lv<62> ap_ST_fsm_state24;
    static const sc_lv<62> ap_ST_fsm_state25;
    static const sc_lv<62> ap_ST_fsm_state26;
    static const sc_lv<62> ap_ST_fsm_state27;
    static const sc_lv<62> ap_ST_fsm_state28;
    static const sc_lv<62> ap_ST_fsm_state29;
    static const sc_lv<62> ap_ST_fsm_state30;
    static const sc_lv<62> ap_ST_fsm_state31;
    static const sc_lv<62> ap_ST_fsm_state32;
    static const sc_lv<62> ap_ST_fsm_state33;
    static const sc_lv<62> ap_ST_fsm_state34;
    static const sc_lv<62> ap_ST_fsm_state35;
    static const sc_lv<62> ap_ST_fsm_state36;
    static const sc_lv<62> ap_ST_fsm_state37;
    static const sc_lv<62> ap_ST_fsm_state38;
    static const sc_lv<62> ap_ST_fsm_state39;
    static const sc_lv<62> ap_ST_fsm_state40;
    static const sc_lv<62> ap_ST_fsm_state41;
    static const sc_lv<62> ap_ST_fsm_state42;
    static const sc_lv<62> ap_ST_fsm_state43;
    static const sc_lv<62> ap_ST_fsm_state44;
    static const sc_lv<62> ap_ST_fsm_state45;
    static const sc_lv<62> ap_ST_fsm_state46;
    static const sc_lv<62> ap_ST_fsm_state47;
    static const sc_lv<62> ap_ST_fsm_state48;
    static const sc_lv<62> ap_ST_fsm_state49;
    static const sc_lv<62> ap_ST_fsm_state50;
    static const sc_lv<62> ap_ST_fsm_state51;
    static const sc_lv<62> ap_ST_fsm_state52;
    static const sc_lv<62> ap_ST_fsm_state53;
    static const sc_lv<62> ap_ST_fsm_state54;
    static const sc_lv<62> ap_ST_fsm_state55;
    static const sc_lv<62> ap_ST_fsm_state56;
    static const sc_lv<62> ap_ST_fsm_state57;
    static const sc_lv<62> ap_ST_fsm_state58;
    static const sc_lv<62> ap_ST_fsm_state59;
    static const sc_lv<62> ap_ST_fsm_state60;
    static const sc_lv<62> ap_ST_fsm_state61;
    static const sc_lv<62> ap_ST_fsm_state62;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_39;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<1> ap_const_lv1_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_INPUT_BUNDLE_USER_VALUE;
    static const int C_M_AXI_INPUT_BUNDLE_PROT_VALUE;
    static const int C_M_AXI_INPUT_BUNDLE_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_OUTPUT_BUNDLE_USER_VALUE;
    static const int C_M_AXI_OUTPUT_BUNDLE_PROT_VALUE;
    static const int C_M_AXI_OUTPUT_BUNDLE_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_2D;
    static const sc_lv<32> ap_const_lv32_2E;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<10> ap_const_lv10_3FF;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<12> ap_const_lv12_C01;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<11> ap_const_lv11_3FF;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<32> ap_const_lv32_53;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const10();
    void thread_ap_clk_no_reset_();
    void thread_INPUT_BUNDLE_ARVALID();
    void thread_INPUT_BUNDLE_RREADY();
    void thread_OUTPUT_BUNDLE_AWADDR();
    void thread_OUTPUT_BUNDLE_AWVALID();
    void thread_OUTPUT_BUNDLE_BREADY();
    void thread_OUTPUT_BUNDLE_WDATA();
    void thread_OUTPUT_BUNDLE_WVALID();
    void thread_OUTPUT_BUNDLE_blk_n_AW();
    void thread_OUTPUT_BUNDLE_blk_n_B();
    void thread_OUTPUT_BUNDLE_blk_n_W();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state46();
    void thread_ap_CS_fsm_state47();
    void thread_ap_CS_fsm_state48();
    void thread_ap_CS_fsm_state49();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state50();
    void thread_ap_CS_fsm_state51();
    void thread_ap_CS_fsm_state56();
    void thread_ap_CS_fsm_state57();
    void thread_ap_CS_fsm_state58();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state56();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_OUTPUT_BUNDLE_AWREADY();
    void thread_ap_sig_ioackin_OUTPUT_BUNDLE_WREADY();
    void thread_exitcond1_fu_183_p2();
    void thread_exitcond_fu_189_p2();
    void thread_grp_convolution2D_fu_160_ap_start();
    void thread_grp_convolution2D_fu_160_operator_q0();
    void thread_grp_fu_201_ce();
    void thread_grp_fu_205_ce();
    void thread_horiz_operator_ce0();
    void thread_i_1_fu_423_p2();
    void thread_icmp_fu_367_p2();
    void thread_isNeg_fu_250_p3();
    void thread_j_1_fu_195_p2();
    void thread_loc_V_1_fu_236_p1();
    void thread_loc_V_fu_226_p4();
    void thread_output4_sum5_fu_412_p2();
    void thread_output4_sum_fu_389_p2();
    void thread_p_Val2_1_fu_215_p1();
    void thread_p_Val2_3_fu_334_p3();
    void thread_p_Val2_s_fu_350_p3();
    void thread_sh_assign_1_cast_fu_289_p1();
    void thread_sh_assign_1_fu_268_p3();
    void thread_sh_assign_fu_244_p2();
    void thread_sum3_cast_fu_385_p1();
    void thread_sum3_fu_377_p3();
    void thread_sum_cast_fu_408_p1();
    void thread_sum_fu_400_p3();
    void thread_tmp_10_fu_312_p3();
    void thread_tmp_11_fu_357_p4();
    void thread_tmp_12_fu_373_p1();
    void thread_tmp_12_i_i_i_fu_344_p2();
    void thread_tmp_4_fu_320_p1();
    void thread_tmp_4_i_i_i_cast_fu_264_p1();
    void thread_tmp_4_i_i_i_fu_258_p2();
    void thread_tmp_5_i_i_i_cast_fu_296_p1();
    void thread_tmp_5_i_i_i_fu_292_p1();
    void thread_tmp_6_fu_211_p2();
    void thread_tmp_6_i_i_i_fu_300_p2();
    void thread_tmp_7_fu_324_p4();
    void thread_tmp_7_i_i_i_fu_306_p2();
    void thread_tmp_9_i_i_i_fu_341_p1();
    void thread_tmp_i_i_i_cast_fu_285_p1();
    void thread_tmp_i_i_i_fu_276_p4();
    void thread_tmp_i_i_i_i_cast1_fu_240_p1();
    void thread_vert_operator_ce0();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
