

================================================================
== Vivado HLS Report for 'convolution2D'
================================================================
* Date:           Sun Jun 11 23:48:23 2017

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        IP_1
* Solution:       0_axi4
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  133|  133|  133|  133|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |  132|  132|        44|          -|          -|     3|    no    |
        | + Loop 1.1  |   42|   42|        14|          -|          -|     3|    no    |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 16
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond1)
3 --> 
	4  / (!exitcond)
	2  / (exitcond)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	3  / true
* FSM state operations: 

 <State 1>: 1.77ns
ST_1: res (6)  [1/1] 0.00ns
:0  %res = alloca i32

ST_1: StgValue_18 (7)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecInterface(i8* %input_r, [6 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 1048576, [13 x i8]* @p_str3, [6 x i8]* @p_str4, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: input1_read (8)  [1/1] 0.00ns
:2  %input1_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %input1)

ST_1: posx_read (9)  [1/1] 0.00ns
:3  %posx_read = call i10 @_ssdm_op_Read.ap_auto.i10(i10 %posx)

ST_1: posy_read (10)  [1/1] 0.00ns
:4  %posy_read = call i10 @_ssdm_op_Read.ap_auto.i10(i10 %posy)

ST_1: StgValue_22 (11)  [1/1] 1.77ns
:5  store i32 0, i32* %res

ST_1: StgValue_23 (12)  [1/1] 1.77ns  loc: IP_1st_restructure.c:50
:6  br label %.loopexit


 <State 2>: 2.53ns
ST_2: j (14)  [1/1] 0.00ns
.loopexit:0  %j = phi i3 [ -1, %0 ], [ %j_2, %.loopexit.loopexit ]

ST_2: exitcond1 (15)  [1/1] 2.07ns  loc: IP_1st_restructure.c:50
.loopexit:1  %exitcond1 = icmp eq i3 %j, 2

ST_2: empty (16)  [1/1] 0.00ns
.loopexit:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)

ST_2: StgValue_27 (17)  [1/1] 0.00ns  loc: IP_1st_restructure.c:50
.loopexit:3  br i1 %exitcond1, label %2, label %.preheader.preheader

ST_2: j_2 (19)  [1/1] 2.53ns  loc: IP_1st_restructure.c:52
.preheader.preheader:0  %j_2 = add i3 %j, 1

ST_2: j_2_cast (20)  [1/1] 0.00ns  loc: IP_1st_restructure.c:52
.preheader.preheader:1  %j_2_cast = zext i3 %j_2 to i5

ST_2: StgValue_30 (21)  [1/1] 1.77ns  loc: IP_1st_restructure.c:51
.preheader.preheader:2  br label %.preheader

ST_2: res_load (56)  [1/1] 0.00ns  loc: IP_1st_restructure.c:55
:0  %res_load = load i32* %res

ST_2: StgValue_32 (57)  [1/1] 0.00ns  loc: IP_1st_restructure.c:55
:1  ret i32 %res_load


 <State 3>: 5.94ns
ST_3: i (23)  [1/1] 0.00ns
.preheader:0  %i = phi i3 [ %i_2, %1 ], [ -1, %.preheader.preheader ]

ST_3: exitcond (24)  [1/1] 2.07ns  loc: IP_1st_restructure.c:51
.preheader:1  %exitcond = icmp eq i3 %i, 2

ST_3: empty_10 (25)  [1/1] 0.00ns
.preheader:2  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)

ST_3: StgValue_36 (26)  [1/1] 0.00ns  loc: IP_1st_restructure.c:51
.preheader:3  br i1 %exitcond, label %.loopexit.loopexit, label %1

ST_3: tmp_2_cast (29)  [1/1] 0.00ns  loc: IP_1st_restructure.c:52
:1  %tmp_2_cast = sext i3 %i to i10

ST_3: tmp5 (30)  [1/1] 2.84ns  loc: IP_1st_restructure.c:52
:2  %tmp5 = add i10 %posy_read, %tmp_2_cast

ST_3: tmp1 (31)  [1/1] 0.00ns  loc: IP_1st_restructure.c:52
:3  %tmp1 = call i20 @_ssdm_op_BitConcatenate.i20.i10.i10(i10 %tmp5, i10 %posx_read)

ST_3: tmp1_cast (32)  [1/1] 0.00ns  loc: IP_1st_restructure.c:52
:4  %tmp1_cast = zext i20 %tmp1 to i22

ST_3: j_cast7 (33)  [1/1] 0.00ns  loc: IP_1st_restructure.c:50
:5  %j_cast7 = sext i3 %j to i22

ST_3: sum (34)  [1/1] 3.08ns  loc: IP_1st_restructure.c:50
:6  %sum = add i22 %j_cast7, %tmp1_cast

ST_3: i_2 (41)  [1/1] 2.53ns  loc: IP_1st_restructure.c:52
:13  %i_2 = add i3 %i, 1

ST_3: i_2_cast_cast (42)  [1/1] 0.00ns  loc: IP_1st_restructure.c:52
:14  %i_2_cast_cast = zext i3 %i_2 to i5

ST_3: tmp (43)  [1/1] 0.00ns  loc: IP_1st_restructure.c:52
:15  %tmp = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %i_2, i2 0)

ST_3: tmp_s (44)  [1/1] 1.70ns  loc: IP_1st_restructure.c:52
:16  %tmp_s = sub i5 %tmp, %i_2_cast_cast

ST_3: tmp_1 (45)  [1/1] 1.70ns  loc: IP_1st_restructure.c:52
:17  %tmp_1 = add i5 %tmp_s, %j_2_cast

ST_3: StgValue_48 (54)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 4>: 3.44ns
ST_4: sum_cast (35)  [1/1] 0.00ns  loc: IP_1st_restructure.c:50
:7  %sum_cast = zext i22 %sum to i32

ST_4: sum1 (36)  [1/1] 3.44ns  loc: IP_1st_restructure.c:50
:8  %sum1 = add i32 %input1_read, %sum_cast

ST_4: input_addr (37)  [1/1] 0.00ns  loc: IP_1st_restructure.c:50
:9  %input_addr = getelementptr i8* %input_r, i32 %sum1


 <State 5>: 8.75ns
ST_5: input_load_req (38)  [7/7] 8.75ns  loc: IP_1st_restructure.c:52
:10  %input_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %input_addr, i32 1)


 <State 6>: 8.75ns
ST_6: input_load_req (38)  [6/7] 8.75ns  loc: IP_1st_restructure.c:52
:10  %input_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %input_addr, i32 1)


 <State 7>: 8.75ns
ST_7: input_load_req (38)  [5/7] 8.75ns  loc: IP_1st_restructure.c:52
:10  %input_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %input_addr, i32 1)


 <State 8>: 8.75ns
ST_8: input_load_req (38)  [4/7] 8.75ns  loc: IP_1st_restructure.c:52
:10  %input_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %input_addr, i32 1)


 <State 9>: 8.75ns
ST_9: input_load_req (38)  [3/7] 8.75ns  loc: IP_1st_restructure.c:52
:10  %input_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %input_addr, i32 1)


 <State 10>: 8.75ns
ST_10: input_load_req (38)  [2/7] 8.75ns  loc: IP_1st_restructure.c:52
:10  %input_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %input_addr, i32 1)


 <State 11>: 8.75ns
ST_11: input_load_req (38)  [1/7] 8.75ns  loc: IP_1st_restructure.c:52
:10  %input_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %input_addr, i32 1)


 <State 12>: 8.75ns
ST_12: input_addr_read (39)  [1/1] 8.75ns  loc: IP_1st_restructure.c:52
:11  %input_addr_read = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %input_addr)

ST_12: tmp_11_cast (46)  [1/1] 0.00ns  loc: IP_1st_restructure.c:52
:18  %tmp_11_cast = zext i5 %tmp_1 to i32

ST_12: operator_addr (47)  [1/1] 0.00ns  loc: IP_1st_restructure.c:52
:19  %operator_addr = getelementptr [9 x i32]* %operator, i32 0, i32 %tmp_11_cast

ST_12: operator_load (48)  [2/2] 2.32ns  loc: IP_1st_restructure.c:52
:20  %operator_load = load i32* %operator_addr, align 4


 <State 13>: 8.07ns
ST_13: tmp_3 (40)  [1/1] 0.00ns  loc: IP_1st_restructure.c:52
:12  %tmp_3 = zext i8 %input_addr_read to i32

ST_13: operator_load (48)  [1/2] 2.32ns  loc: IP_1st_restructure.c:52
:20  %operator_load = load i32* %operator_addr, align 4

ST_13: tmp_4 (49)  [3/3] 5.75ns  loc: IP_1st_restructure.c:52
:21  %tmp_4 = mul nsw i32 %tmp_3, %operator_load


 <State 14>: 5.75ns
ST_14: tmp_4 (49)  [2/3] 5.75ns  loc: IP_1st_restructure.c:52
:21  %tmp_4 = mul nsw i32 %tmp_3, %operator_load


 <State 15>: 5.75ns
ST_15: tmp_4 (49)  [1/3] 5.75ns  loc: IP_1st_restructure.c:52
:21  %tmp_4 = mul nsw i32 %tmp_3, %operator_load


 <State 16>: 5.21ns
ST_16: res_load_1 (28)  [1/1] 0.00ns  loc: IP_1st_restructure.c:52
:0  %res_load_1 = load i32* %res

ST_16: res_1 (50)  [1/1] 3.44ns  loc: IP_1st_restructure.c:52
:22  %res_1 = add nsw i32 %res_load_1, %tmp_4

ST_16: StgValue_70 (51)  [1/1] 1.77ns  loc: IP_1st_restructure.c:52
:23  store i32 %res_1, i32* %res

ST_16: StgValue_71 (52)  [1/1] 0.00ns  loc: IP_1st_restructure.c:51
:24  br label %.preheader



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	'alloca' operation ('res') [6]  (0 ns)
	'store' operation of constant 0 on local variable 'res' [11]  (1.77 ns)

 <State 2>: 2.53ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', IP_1st_restructure.c:52) [14]  (0 ns)
	'add' operation ('j', IP_1st_restructure.c:52) [19]  (2.53 ns)

 <State 3>: 5.94ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', IP_1st_restructure.c:52) [23]  (0 ns)
	'add' operation ('i', IP_1st_restructure.c:52) [41]  (2.53 ns)
	'sub' operation ('tmp_s', IP_1st_restructure.c:52) [44]  (1.7 ns)
	'add' operation ('tmp_1', IP_1st_restructure.c:52) [45]  (1.7 ns)

 <State 4>: 3.44ns
The critical path consists of the following:
	'add' operation ('sum1', IP_1st_restructure.c:50) [36]  (3.44 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_r' (IP_1st_restructure.c:52) [38]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_r' (IP_1st_restructure.c:52) [38]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_r' (IP_1st_restructure.c:52) [38]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_r' (IP_1st_restructure.c:52) [38]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_r' (IP_1st_restructure.c:52) [38]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_r' (IP_1st_restructure.c:52) [38]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_r' (IP_1st_restructure.c:52) [38]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus read on port 'input_r' (IP_1st_restructure.c:52) [39]  (8.75 ns)

 <State 13>: 8.07ns
The critical path consists of the following:
	'load' operation ('operator_load', IP_1st_restructure.c:52) on array 'operator' [48]  (2.32 ns)
	'mul' operation ('tmp_4', IP_1st_restructure.c:52) [49]  (5.75 ns)

 <State 14>: 5.75ns
The critical path consists of the following:
	'mul' operation ('tmp_4', IP_1st_restructure.c:52) [49]  (5.75 ns)

 <State 15>: 5.75ns
The critical path consists of the following:
	'mul' operation ('tmp_4', IP_1st_restructure.c:52) [49]  (5.75 ns)

 <State 16>: 5.21ns
The critical path consists of the following:
	'load' operation ('res_load_1', IP_1st_restructure.c:52) on local variable 'res' [28]  (0 ns)
	'add' operation ('res', IP_1st_restructure.c:52) [50]  (3.44 ns)
	'store' operation (IP_1st_restructure.c:52) of variable 'res', IP_1st_restructure.c:52 on local variable 'res' [51]  (1.77 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
